<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="406" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="389.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="389.00"> </text><svg id="frames" x="10" width="1180" total_samples="2929"><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="0.0000%" y="245" width="0.0341%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>web-server`__rdl_alloc (1 samples, 0.03%)</title><rect x="0.0341%" y="245" width="0.0341%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2841%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="0.1024%" y="229" width="0.0683%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="2"/><text x="0.3524%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="0.1024%" y="213" width="0.0683%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="2"/><text x="0.3524%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="0.1024%" y="197" width="0.0683%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="2"/><text x="0.3524%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__accept (78 samples, 2.66%)</title><rect x="0.3756%" y="197" width="2.6630%" height="15" fill="rgb(232,128,0)" fg:x="11" fg:w="78"/><text x="0.6256%" y="207.50">li..</text></g><g><title>libsystem_kernel.dylib`ioctl (1 samples, 0.03%)</title><rect x="3.0386%" y="197" width="0.0341%" height="15" fill="rgb(207,160,47)" fg:x="89" fg:w="1"/><text x="3.2886%" y="207.50"></text></g><g><title>web-server`&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 3.28%)</title><rect x="0.1707%" y="229" width="3.2776%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="96"/><text x="0.4207%" y="239.50">web..</text></g><g><title>web-server`std::net::tcp::TcpListener::accept (96 samples, 3.28%)</title><rect x="0.1707%" y="213" width="3.2776%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="96"/><text x="0.4207%" y="223.50">web..</text></g><g><title>web-server`std::sys::unix::net::Socket::accept (11 samples, 0.38%)</title><rect x="3.0727%" y="197" width="0.3756%" height="15" fill="rgb(220,122,19)" fg:x="90" fg:w="11"/><text x="3.3227%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (10 samples, 0.34%)</title><rect x="3.1069%" y="181" width="0.3414%" height="15" fill="rgb(250,228,42)" fg:x="91" fg:w="10"/><text x="3.3569%" y="191.50"></text></g><g><title>web-server`std::net::tcp::TcpListener::bind (1 samples, 0.03%)</title><rect x="3.4483%" y="229" width="0.0341%" height="15" fill="rgb(240,193,28)" fg:x="101" fg:w="1"/><text x="3.6983%" y="239.50"></text></g><g><title>web-server`std::sys_common::net::TcpListener::bind (1 samples, 0.03%)</title><rect x="3.4483%" y="213" width="0.0341%" height="15" fill="rgb(216,20,37)" fg:x="101" fg:w="1"/><text x="3.6983%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`socket (1 samples, 0.03%)</title><rect x="3.4483%" y="197" width="0.0341%" height="15" fill="rgb(206,188,39)" fg:x="101" fg:w="1"/><text x="3.6983%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="3.4824%" y="213" width="0.0341%" height="15" fill="rgb(217,207,13)" fg:x="102" fg:w="1"/><text x="3.7324%" y="223.50"></text></g><g><title>web-server`DYLD-STUB$$malloc (1 samples, 0.03%)</title><rect x="3.5166%" y="213" width="0.0341%" height="15" fill="rgb(231,73,38)" fg:x="103" fg:w="1"/><text x="3.7666%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="3.5848%" y="197" width="0.0683%" height="15" fill="rgb(225,20,46)" fg:x="105" fg:w="2"/><text x="3.8348%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="3.5848%" y="181" width="0.0683%" height="15" fill="rgb(210,31,41)" fg:x="105" fg:w="2"/><text x="3.8348%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="3.5848%" y="165" width="0.0683%" height="15" fill="rgb(221,200,47)" fg:x="105" fg:w="2"/><text x="3.8348%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="3.6190%" y="149" width="0.0341%" height="15" fill="rgb(226,26,5)" fg:x="106" fg:w="1"/><text x="3.8690%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.10%)</title><rect x="3.6531%" y="181" width="0.1024%" height="15" fill="rgb(249,33,26)" fg:x="107" fg:w="3"/><text x="3.9031%" y="191.50"></text></g><g><title>0x1 (111 samples, 3.79%)</title><rect x="0.0000%" y="341" width="3.7897%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="111"/><text x="0.2500%" y="351.50">0x1</text></g><g><title>libdyld.dylib`start (111 samples, 3.79%)</title><rect x="0.0000%" y="325" width="3.7897%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="111"/><text x="0.2500%" y="335.50">libd..</text></g><g><title>web-server`main (111 samples, 3.79%)</title><rect x="0.0000%" y="309" width="3.7897%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="111"/><text x="0.2500%" y="319.50">web-..</text></g><g><title>web-server`std::rt::lang_start_internal (111 samples, 3.79%)</title><rect x="0.0000%" y="293" width="3.7897%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="111"/><text x="0.2500%" y="303.50">web-..</text></g><g><title>web-server`std::rt::lang_start::_{{closure}} (111 samples, 3.79%)</title><rect x="0.0000%" y="277" width="3.7897%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="111"/><text x="0.2500%" y="287.50">web-..</text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (111 samples, 3.79%)</title><rect x="0.0000%" y="261" width="3.7897%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="111"/><text x="0.2500%" y="271.50">web-..</text></g><g><title>web-server`web_server::web_server::WebServer::start_with_separate_handler (109 samples, 3.72%)</title><rect x="0.0683%" y="245" width="3.7214%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="109"/><text x="0.3183%" y="255.50">web-..</text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (9 samples, 0.31%)</title><rect x="3.4824%" y="229" width="0.3073%" height="15" fill="rgb(214,148,48)" fg:x="102" fg:w="9"/><text x="3.7324%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (7 samples, 0.24%)</title><rect x="3.5507%" y="213" width="0.2390%" height="15" fill="rgb(232,36,49)" fg:x="104" fg:w="7"/><text x="3.8007%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (4 samples, 0.14%)</title><rect x="3.6531%" y="197" width="0.1366%" height="15" fill="rgb(209,103,24)" fg:x="107" fg:w="4"/><text x="3.9031%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="3.7555%" y="181" width="0.0341%" height="15" fill="rgb(229,88,8)" fg:x="110" fg:w="1"/><text x="4.0055%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (152 samples, 5.19%)</title><rect x="3.7897%" y="341" width="5.1895%" height="15" fill="rgb(213,181,19)" fg:x="111" fg:w="152"/><text x="4.0397%" y="351.50">libsys..</text></g><g><title>libsystem_kernel.dylib`__thread_selfid (16 samples, 0.55%)</title><rect x="15.3295%" y="325" width="0.5463%" height="15" fill="rgb(254,191,54)" fg:x="449" fg:w="16"/><text x="15.5795%" y="335.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (2 samples, 0.07%)</title><rect x="16.0123%" y="309" width="0.0683%" height="15" fill="rgb(241,83,37)" fg:x="469" fg:w="2"/><text x="16.2623%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__disable_threadsignal (11 samples, 0.38%)</title><rect x="16.0806%" y="309" width="0.3756%" height="15" fill="rgb(233,36,39)" fg:x="471" fg:w="11"/><text x="16.3306%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (74 samples, 2.53%)</title><rect x="16.4561%" y="309" width="2.5265%" height="15" fill="rgb(226,3,54)" fg:x="482" fg:w="74"/><text x="16.7061%" y="319.50">li..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (9 samples, 0.31%)</title><rect x="18.9826%" y="309" width="0.3073%" height="15" fill="rgb(245,192,40)" fg:x="556" fg:w="9"/><text x="19.2326%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="19.2899%" y="293" width="0.0341%" height="15" fill="rgb(238,167,29)" fg:x="565" fg:w="1"/><text x="19.5399%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="19.3240%" y="293" width="0.0341%" height="15" fill="rgb(232,182,51)" fg:x="566" fg:w="1"/><text x="19.5740%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="19.6996%" y="261" width="0.0341%" height="15" fill="rgb(231,60,39)" fg:x="577" fg:w="1"/><text x="19.9496%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="19.8361%" y="213" width="0.0341%" height="15" fill="rgb(208,69,12)" fg:x="581" fg:w="1"/><text x="20.0861%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.14%)</title><rect x="19.7678%" y="245" width="0.1366%" height="15" fill="rgb(235,93,37)" fg:x="579" fg:w="4"/><text x="20.0178%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.10%)</title><rect x="19.8020%" y="229" width="0.1024%" height="15" fill="rgb(213,116,39)" fg:x="580" fg:w="3"/><text x="20.0520%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="19.8703%" y="213" width="0.0341%" height="15" fill="rgb(222,207,29)" fg:x="582" fg:w="1"/><text x="20.1203%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_unlock_slow (1 samples, 0.03%)</title><rect x="19.9044%" y="245" width="0.0341%" height="15" fill="rgb(206,96,30)" fg:x="583" fg:w="1"/><text x="20.1544%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.03%)</title><rect x="19.9385%" y="245" width="0.0341%" height="15" fill="rgb(218,138,4)" fg:x="584" fg:w="1"/><text x="20.1885%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="19.9727%" y="213" width="0.0341%" height="15" fill="rgb(250,191,14)" fg:x="585" fg:w="1"/><text x="20.2227%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.10%)</title><rect x="19.9727%" y="229" width="0.1024%" height="15" fill="rgb(239,60,40)" fg:x="585" fg:w="3"/><text x="20.2227%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.07%)</title><rect x="20.0068%" y="213" width="0.0683%" height="15" fill="rgb(206,27,48)" fg:x="586" fg:w="2"/><text x="20.2568%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="20.0410%" y="197" width="0.0341%" height="15" fill="rgb(225,35,8)" fg:x="587" fg:w="1"/><text x="20.2910%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_finalize_list (13 samples, 0.44%)</title><rect x="19.6996%" y="277" width="0.4438%" height="15" fill="rgb(250,213,24)" fg:x="577" fg:w="13"/><text x="19.9496%" y="287.50"></text></g><g><title>web-server`std::sys::unix::thread_local_dtor::register_dtor::run_dtors (12 samples, 0.41%)</title><rect x="19.7337%" y="261" width="0.4097%" height="15" fill="rgb(247,123,22)" fg:x="578" fg:w="12"/><text x="19.9837%" y="271.50"></text></g><g><title>web-server`alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.17%)</title><rect x="19.9727%" y="245" width="0.1707%" height="15" fill="rgb(231,138,38)" fg:x="585" fg:w="5"/><text x="20.2227%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (2 samples, 0.07%)</title><rect x="20.0751%" y="229" width="0.0683%" height="15" fill="rgb(231,145,46)" fg:x="588" fg:w="2"/><text x="20.3251%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="20.1434%" y="277" width="0.0341%" height="15" fill="rgb(251,118,11)" fg:x="590" fg:w="1"/><text x="20.3934%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.07%)</title><rect x="20.1775%" y="277" width="0.0683%" height="15" fill="rgb(217,147,25)" fg:x="591" fg:w="2"/><text x="20.4275%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="20.2117%" y="261" width="0.0341%" height="15" fill="rgb(247,81,37)" fg:x="592" fg:w="1"/><text x="20.4617%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (29 samples, 0.99%)</title><rect x="19.2899%" y="309" width="0.9901%" height="15" fill="rgb(209,12,38)" fg:x="565" fg:w="29"/><text x="19.5399%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (27 samples, 0.92%)</title><rect x="19.3581%" y="293" width="0.9218%" height="15" fill="rgb(227,1,9)" fg:x="567" fg:w="27"/><text x="19.6081%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.03%)</title><rect x="20.2458%" y="277" width="0.0341%" height="15" fill="rgb(248,47,43)" fg:x="593" fg:w="1"/><text x="20.4958%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_setcancelstate_exit (1 samples, 0.03%)</title><rect x="20.2800%" y="309" width="0.0341%" height="15" fill="rgb(221,10,30)" fg:x="594" fg:w="1"/><text x="20.5300%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (99 samples, 3.38%)</title><rect x="20.3141%" y="277" width="3.3800%" height="15" fill="rgb(210,229,1)" fg:x="595" fg:w="99"/><text x="20.5641%" y="287.50">lib..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.03%)</title><rect x="23.6941%" y="277" width="0.0341%" height="15" fill="rgb(222,148,37)" fg:x="694" fg:w="1"/><text x="23.9441%" y="287.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (1 samples, 0.03%)</title><rect x="23.7282%" y="277" width="0.0341%" height="15" fill="rgb(234,67,33)" fg:x="695" fg:w="1"/><text x="23.9782%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (7 samples, 0.24%)</title><rect x="23.7624%" y="261" width="0.2390%" height="15" fill="rgb(247,98,35)" fg:x="696" fg:w="7"/><text x="24.0124%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_join$NOCANCEL (110 samples, 3.76%)</title><rect x="20.3141%" y="309" width="3.7555%" height="15" fill="rgb(247,138,52)" fg:x="595" fg:w="110"/><text x="20.5641%" y="319.50">libs..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (110 samples, 3.76%)</title><rect x="20.3141%" y="293" width="3.7555%" height="15" fill="rgb(213,79,30)" fg:x="595" fg:w="110"/><text x="20.5641%" y="303.50">libs..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (9 samples, 0.31%)</title><rect x="23.7624%" y="277" width="0.3073%" height="15" fill="rgb(246,177,23)" fg:x="696" fg:w="9"/><text x="24.0124%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mig_dealloc_reply_port (2 samples, 0.07%)</title><rect x="24.0014%" y="261" width="0.0683%" height="15" fill="rgb(230,62,27)" fg:x="703" fg:w="2"/><text x="24.2514%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (2 samples, 0.07%)</title><rect x="24.0014%" y="245" width="0.0683%" height="15" fill="rgb(216,154,8)" fg:x="703" fg:w="2"/><text x="24.2514%" y="255.50"></text></g><g><title>web-server`__rdl_dealloc (1 samples, 0.03%)</title><rect x="24.0696%" y="309" width="0.0341%" height="15" fill="rgb(244,35,45)" fg:x="705" fg:w="1"/><text x="24.3196%" y="319.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sigaltstack (1 samples, 0.03%)</title><rect x="24.1379%" y="293" width="0.0341%" height="15" fill="rgb(251,115,12)" fg:x="707" fg:w="1"/><text x="24.3879%" y="303.50"></text></g><g><title>libsystem_c.dylib`sysconf (4 samples, 0.14%)</title><rect x="24.1721%" y="293" width="0.1366%" height="15" fill="rgb(240,54,50)" fg:x="708" fg:w="4"/><text x="24.4221%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (69 samples, 2.36%)</title><rect x="24.3086%" y="293" width="2.3558%" height="15" fill="rgb(233,84,52)" fg:x="712" fg:w="69"/><text x="24.5586%" y="303.50">l..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (25 samples, 0.85%)</title><rect x="26.6644%" y="293" width="0.8535%" height="15" fill="rgb(207,117,47)" fg:x="781" fg:w="25"/><text x="26.9144%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mmap (2 samples, 0.07%)</title><rect x="27.5179%" y="293" width="0.0683%" height="15" fill="rgb(249,43,39)" fg:x="806" fg:w="2"/><text x="27.7679%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="27.5862%" y="293" width="0.0341%" height="15" fill="rgb(209,38,44)" fg:x="808" fg:w="1"/><text x="27.8362%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.10%)</title><rect x="27.6886%" y="277" width="0.1024%" height="15" fill="rgb(236,212,23)" fg:x="811" fg:w="3"/><text x="27.9386%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="27.7569%" y="261" width="0.0341%" height="15" fill="rgb(242,79,21)" fg:x="813" fg:w="1"/><text x="28.0069%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.24%)</title><rect x="27.6203%" y="293" width="0.2390%" height="15" fill="rgb(211,96,35)" fg:x="809" fg:w="7"/><text x="27.8703%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (2 samples, 0.07%)</title><rect x="27.7911%" y="277" width="0.0683%" height="15" fill="rgb(253,215,40)" fg:x="814" fg:w="2"/><text x="28.0411%" y="287.50"></text></g><g><title>web-server`DYLD-STUB$$sigaltstack (1 samples, 0.03%)</title><rect x="27.8593%" y="293" width="0.0341%" height="15" fill="rgb(211,81,21)" fg:x="816" fg:w="1"/><text x="28.1093%" y="303.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (1 samples, 0.03%)</title><rect x="27.8935%" y="277" width="0.0341%" height="15" fill="rgb(208,190,38)" fg:x="817" fg:w="1"/><text x="28.1435%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="27.9276%" y="277" width="0.0341%" height="15" fill="rgb(235,213,38)" fg:x="818" fg:w="1"/><text x="28.1776%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="27.9618%" y="277" width="0.0341%" height="15" fill="rgb(237,122,38)" fg:x="819" fg:w="1"/><text x="28.2118%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stackaddr_np (1 samples, 0.03%)</title><rect x="27.9959%" y="277" width="0.0341%" height="15" fill="rgb(244,218,35)" fg:x="820" fg:w="1"/><text x="28.2459%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stacksize_np (1 samples, 0.03%)</title><rect x="28.0300%" y="277" width="0.0341%" height="15" fill="rgb(240,68,47)" fg:x="821" fg:w="1"/><text x="28.2800%" y="287.50"></text></g><g><title>web-server`DYLD-STUB$$_tlv_atexit (1 samples, 0.03%)</title><rect x="28.0642%" y="277" width="0.0341%" height="15" fill="rgb(210,16,53)" fg:x="822" fg:w="1"/><text x="28.3142%" y="287.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (2 samples, 0.07%)</title><rect x="28.0983%" y="277" width="0.0683%" height="15" fill="rgb(235,124,12)" fg:x="823" fg:w="2"/><text x="28.3483%" y="287.50"></text></g><g><title>web-server`std::sys::unix::thread::guard::current (3 samples, 0.10%)</title><rect x="28.1666%" y="277" width="0.1024%" height="15" fill="rgb(224,169,11)" fg:x="825" fg:w="3"/><text x="28.4166%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stacksize_np (2 samples, 0.07%)</title><rect x="28.2008%" y="261" width="0.0683%" height="15" fill="rgb(250,166,2)" fg:x="826" fg:w="2"/><text x="28.4508%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="28.3032%" y="261" width="0.0341%" height="15" fill="rgb(242,216,29)" fg:x="829" fg:w="1"/><text x="28.5532%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.07%)</title><rect x="28.3373%" y="261" width="0.0683%" height="15" fill="rgb(230,116,27)" fg:x="830" fg:w="2"/><text x="28.5873%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.07%)</title><rect x="28.3373%" y="245" width="0.0683%" height="15" fill="rgb(228,99,48)" fg:x="830" fg:w="2"/><text x="28.5873%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.07%)</title><rect x="28.3373%" y="229" width="0.0683%" height="15" fill="rgb(253,11,6)" fg:x="830" fg:w="2"/><text x="28.5873%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.14%)</title><rect x="28.4056%" y="261" width="0.1366%" height="15" fill="rgb(247,143,39)" fg:x="832" fg:w="4"/><text x="28.6556%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.07%)</title><rect x="28.4739%" y="245" width="0.0683%" height="15" fill="rgb(236,97,10)" fg:x="834" fg:w="2"/><text x="28.7239%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="28.5080%" y="229" width="0.0341%" height="15" fill="rgb(233,208,19)" fg:x="835" fg:w="1"/><text x="28.7580%" y="239.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.03%)</title><rect x="28.5422%" y="261" width="0.0341%" height="15" fill="rgb(216,164,2)" fg:x="836" fg:w="1"/><text x="28.7922%" y="271.50"></text></g><g><title>web-server`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.03%)</title><rect x="28.5763%" y="261" width="0.0341%" height="15" fill="rgb(220,129,5)" fg:x="837" fg:w="1"/><text x="28.8263%" y="271.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="28.6104%" y="261" width="0.0341%" height="15" fill="rgb(242,17,10)" fg:x="838" fg:w="1"/><text x="28.8604%" y="271.50"></text></g><g><title>web-server`__rust_alloc (1 samples, 0.03%)</title><rect x="28.6446%" y="261" width="0.0341%" height="15" fill="rgb(242,107,0)" fg:x="839" fg:w="1"/><text x="28.8946%" y="271.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::binary::transform_recv&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},i64,i64&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="28.6787%" y="261" width="0.0341%" height="15" fill="rgb(251,28,31)" fg:x="840" fg:w="1"/><text x="28.9287%" y="271.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (1 samples, 0.03%)</title><rect x="28.6787%" y="245" width="0.0341%" height="15" fill="rgb(233,223,10)" fg:x="840" fg:w="1"/><text x="28.9287%" y="255.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (2 samples, 0.07%)</title><rect x="28.7129%" y="261" width="0.0683%" height="15" fill="rgb(215,21,27)" fg:x="841" fg:w="2"/><text x="28.9629%" y="271.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="28.7470%" y="245" width="0.0341%" height="15" fill="rgb(232,23,21)" fg:x="842" fg:w="1"/><text x="28.9970%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (2 samples, 0.07%)</title><rect x="28.9177%" y="245" width="0.0683%" height="15" fill="rgb(244,5,23)" fg:x="847" fg:w="2"/><text x="29.1677%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.31%)</title><rect x="28.9860%" y="245" width="0.3073%" height="15" fill="rgb(226,81,46)" fg:x="849" fg:w="9"/><text x="29.2360%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.27%)</title><rect x="29.0201%" y="229" width="0.2731%" height="15" fill="rgb(247,70,30)" fg:x="850" fg:w="8"/><text x="29.2701%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.27%)</title><rect x="29.0201%" y="213" width="0.2731%" height="15" fill="rgb(212,68,19)" fg:x="850" fg:w="8"/><text x="29.2701%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.07%)</title><rect x="29.2250%" y="197" width="0.0683%" height="15" fill="rgb(240,187,13)" fg:x="856" fg:w="2"/><text x="29.4750%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="29.2933%" y="245" width="0.0341%" height="15" fill="rgb(223,113,26)" fg:x="858" fg:w="1"/><text x="29.5433%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="29.2933%" y="229" width="0.0341%" height="15" fill="rgb(206,192,2)" fg:x="858" fg:w="1"/><text x="29.5433%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="29.2933%" y="213" width="0.0341%" height="15" fill="rgb(241,108,4)" fg:x="858" fg:w="1"/><text x="29.5433%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="29.3616%" y="229" width="0.0341%" height="15" fill="rgb(247,173,49)" fg:x="860" fg:w="1"/><text x="29.6116%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.07%)</title><rect x="29.4640%" y="213" width="0.0683%" height="15" fill="rgb(224,114,35)" fg:x="863" fg:w="2"/><text x="29.7140%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.24%)</title><rect x="29.3274%" y="245" width="0.2390%" height="15" fill="rgb(245,159,27)" fg:x="859" fg:w="7"/><text x="29.5774%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.17%)</title><rect x="29.3957%" y="229" width="0.1707%" height="15" fill="rgb(245,172,44)" fg:x="861" fg:w="5"/><text x="29.6457%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="29.5323%" y="213" width="0.0341%" height="15" fill="rgb(236,23,11)" fg:x="865" fg:w="1"/><text x="29.7823%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (3 samples, 0.10%)</title><rect x="29.5664%" y="245" width="0.1024%" height="15" fill="rgb(205,117,38)" fg:x="866" fg:w="3"/><text x="29.8164%" y="255.50"></text></g><g><title>web-server`core::slice::sort::recurse (1 samples, 0.03%)</title><rect x="29.6688%" y="245" width="0.0341%" height="15" fill="rgb(237,72,25)" fg:x="869" fg:w="1"/><text x="29.9188%" y="255.50"></text></g><g><title>web-server`hashbrown::map::make_insert_hash (1 samples, 0.03%)</title><rect x="29.7030%" y="245" width="0.0341%" height="15" fill="rgb(244,70,9)" fg:x="870" fg:w="1"/><text x="29.9530%" y="255.50"></text></g><g><title>web-server`rusty_junctions::bag::Bag&lt;K,V&gt;::add (3 samples, 0.10%)</title><rect x="29.7371%" y="245" width="0.1024%" height="15" fill="rgb(217,125,39)" fg:x="871" fg:w="3"/><text x="29.9871%" y="255.50"></text></g><g><title>web-server`hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="29.8054%" y="229" width="0.0341%" height="15" fill="rgb(235,36,10)" fg:x="873" fg:w="1"/><text x="30.0554%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (16 samples, 0.55%)</title><rect x="29.8737%" y="229" width="0.5463%" height="15" fill="rgb(251,123,47)" fg:x="875" fg:w="16"/><text x="30.1237%" y="239.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::binary::FnBoxClone&gt;::clone_box (2 samples, 0.07%)</title><rect x="30.4199%" y="229" width="0.0683%" height="15" fill="rgb(221,13,13)" fg:x="891" fg:w="2"/><text x="30.6699%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="30.4199%" y="213" width="0.0683%" height="15" fill="rgb(238,131,9)" fg:x="891" fg:w="2"/><text x="30.6699%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="30.4199%" y="197" width="0.0683%" height="15" fill="rgb(211,50,8)" fg:x="891" fg:w="2"/><text x="30.6699%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="30.4199%" y="181" width="0.0683%" height="15" fill="rgb(245,182,24)" fg:x="891" fg:w="2"/><text x="30.6699%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="30.5565%" y="213" width="0.0683%" height="15" fill="rgb(242,14,37)" fg:x="895" fg:w="2"/><text x="30.8065%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="30.5565%" y="197" width="0.0683%" height="15" fill="rgb(246,228,12)" fg:x="895" fg:w="2"/><text x="30.8065%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="30.5565%" y="181" width="0.0683%" height="15" fill="rgb(213,55,15)" fg:x="895" fg:w="2"/><text x="30.8065%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (36 samples, 1.23%)</title><rect x="30.6248%" y="197" width="1.2291%" height="15" fill="rgb(209,9,3)" fg:x="897" fg:w="36"/><text x="30.8748%" y="207.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_no_tsd (1 samples, 0.03%)</title><rect x="31.8539%" y="197" width="0.0341%" height="15" fill="rgb(230,59,30)" fg:x="933" fg:w="1"/><text x="32.1039%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (19 samples, 0.65%)</title><rect x="32.7074%" y="181" width="0.6487%" height="15" fill="rgb(209,121,21)" fg:x="958" fg:w="19"/><text x="32.9574%" y="191.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (88 samples, 3.00%)</title><rect x="30.6248%" y="213" width="3.0044%" height="15" fill="rgb(220,109,13)" fg:x="897" fg:w="88"/><text x="30.8748%" y="223.50">web..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (51 samples, 1.74%)</title><rect x="31.8880%" y="197" width="1.7412%" height="15" fill="rgb(232,18,1)" fg:x="934" fg:w="51"/><text x="32.1380%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (8 samples, 0.27%)</title><rect x="33.3561%" y="181" width="0.2731%" height="15" fill="rgb(215,41,42)" fg:x="977" fg:w="8"/><text x="33.6061%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="33.6292%" y="197" width="0.0341%" height="15" fill="rgb(224,123,36)" fg:x="985" fg:w="1"/><text x="33.8792%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="33.6292%" y="181" width="0.0341%" height="15" fill="rgb(240,125,3)" fg:x="985" fg:w="1"/><text x="33.8792%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="33.6292%" y="165" width="0.0341%" height="15" fill="rgb(205,98,50)" fg:x="985" fg:w="1"/><text x="33.8792%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.03%)</title><rect x="33.6292%" y="149" width="0.0341%" height="15" fill="rgb(205,185,37)" fg:x="985" fg:w="1"/><text x="33.8792%" y="159.50"></text></g><g><title>web-server`rusty_junctions::patterns::binary::SendJoinPattern::fire (113 samples, 3.86%)</title><rect x="29.8395%" y="245" width="3.8580%" height="15" fill="rgb(238,207,15)" fg:x="874" fg:w="113"/><text x="30.0895%" y="255.50">web-..</text></g><g><title>web-server`std::thread::spawn (94 samples, 3.21%)</title><rect x="30.4882%" y="229" width="3.2093%" height="15" fill="rgb(213,199,42)" fg:x="893" fg:w="94"/><text x="30.7382%" y="239.50">web..</text></g><g><title>web-server`std::thread::Thread::new (2 samples, 0.07%)</title><rect x="33.6292%" y="213" width="0.0683%" height="15" fill="rgb(235,201,11)" fg:x="985" fg:w="2"/><text x="33.8792%" y="223.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (1 samples, 0.03%)</title><rect x="33.6634%" y="197" width="0.0341%" height="15" fill="rgb(207,46,11)" fg:x="986" fg:w="1"/><text x="33.9134%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="33.6634%" y="181" width="0.0341%" height="15" fill="rgb(241,35,35)" fg:x="986" fg:w="1"/><text x="33.9134%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="33.6634%" y="165" width="0.0341%" height="15" fill="rgb(243,32,47)" fg:x="986" fg:w="1"/><text x="33.9134%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="33.6634%" y="149" width="0.0341%" height="15" fill="rgb(247,202,23)" fg:x="986" fg:w="1"/><text x="33.9134%" y="159.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.03%)</title><rect x="33.7316%" y="229" width="0.0341%" height="15" fill="rgb(219,102,11)" fg:x="988" fg:w="1"/><text x="33.9816%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (49 samples, 1.67%)</title><rect x="33.7658%" y="229" width="1.6729%" height="15" fill="rgb(243,110,44)" fg:x="989" fg:w="49"/><text x="34.0158%" y="239.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (3 samples, 0.10%)</title><rect x="35.4387%" y="229" width="0.1024%" height="15" fill="rgb(222,74,54)" fg:x="1038" fg:w="3"/><text x="35.6887%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="35.4729%" y="213" width="0.0683%" height="15" fill="rgb(216,99,12)" fg:x="1039" fg:w="2"/><text x="35.7229%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="35.4729%" y="197" width="0.0683%" height="15" fill="rgb(226,22,26)" fg:x="1039" fg:w="2"/><text x="35.7229%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="35.4729%" y="181" width="0.0683%" height="15" fill="rgb(217,163,10)" fg:x="1039" fg:w="2"/><text x="35.7229%" y="191.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (1 samples, 0.03%)</title><rect x="35.5411%" y="229" width="0.0341%" height="15" fill="rgb(213,25,53)" fg:x="1041" fg:w="1"/><text x="35.7911%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="35.6436%" y="165" width="0.0341%" height="15" fill="rgb(252,105,26)" fg:x="1044" fg:w="1"/><text x="35.8936%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.14%)</title><rect x="35.6094%" y="213" width="0.1366%" height="15" fill="rgb(220,39,43)" fg:x="1043" fg:w="4"/><text x="35.8594%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.14%)</title><rect x="35.6094%" y="197" width="0.1366%" height="15" fill="rgb(229,68,48)" fg:x="1043" fg:w="4"/><text x="35.8594%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.14%)</title><rect x="35.6094%" y="181" width="0.1366%" height="15" fill="rgb(252,8,32)" fg:x="1043" fg:w="4"/><text x="35.8594%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.07%)</title><rect x="35.6777%" y="165" width="0.0683%" height="15" fill="rgb(223,20,43)" fg:x="1045" fg:w="2"/><text x="35.9277%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.07%)</title><rect x="35.6777%" y="149" width="0.0683%" height="15" fill="rgb(229,81,49)" fg:x="1045" fg:w="2"/><text x="35.9277%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_destroy (2 samples, 0.07%)</title><rect x="35.7460%" y="213" width="0.0683%" height="15" fill="rgb(236,28,36)" fg:x="1047" fg:w="2"/><text x="35.9960%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_init (1 samples, 0.03%)</title><rect x="35.8143%" y="213" width="0.0341%" height="15" fill="rgb(249,185,26)" fg:x="1049" fg:w="1"/><text x="36.0643%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="35.8484%" y="213" width="0.0341%" height="15" fill="rgb(249,174,33)" fg:x="1050" fg:w="1"/><text x="36.0984%" y="223.50"></text></g><g><title>web-server`DYLD-STUB$$pthread_attr_destroy (2 samples, 0.07%)</title><rect x="35.8826%" y="213" width="0.0683%" height="15" fill="rgb(233,201,37)" fg:x="1051" fg:w="2"/><text x="36.1326%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (108 samples, 3.69%)</title><rect x="36.0533%" y="197" width="3.6873%" height="15" fill="rgb(221,78,26)" fg:x="1056" fg:w="108"/><text x="36.3033%" y="207.50">libs..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="39.7405%" y="197" width="0.0341%" height="15" fill="rgb(250,127,30)" fg:x="1164" fg:w="1"/><text x="39.9905%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="39.7405%" y="181" width="0.0341%" height="15" fill="rgb(230,49,44)" fg:x="1164" fg:w="1"/><text x="39.9905%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="39.7405%" y="165" width="0.0341%" height="15" fill="rgb(229,67,23)" fg:x="1164" fg:w="1"/><text x="39.9905%" y="175.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock_no_tsd (1 samples, 0.03%)</title><rect x="39.7747%" y="197" width="0.0341%" height="15" fill="rgb(249,83,47)" fg:x="1165" fg:w="1"/><text x="40.0247%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (59 samples, 2.01%)</title><rect x="43.1547%" y="181" width="2.0143%" height="15" fill="rgb(215,43,3)" fg:x="1264" fg:w="59"/><text x="43.4047%" y="191.50">l..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (38 samples, 1.30%)</title><rect x="45.1690%" y="181" width="1.2974%" height="15" fill="rgb(238,154,13)" fg:x="1323" fg:w="38"/><text x="45.4190%" y="191.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (309 samples, 10.55%)</title><rect x="35.9508%" y="213" width="10.5497%" height="15" fill="rgb(219,56,2)" fg:x="1053" fg:w="309"/><text x="36.2008%" y="223.50">web-server`std:..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (196 samples, 6.69%)</title><rect x="39.8088%" y="197" width="6.6917%" height="15" fill="rgb(233,0,4)" fg:x="1166" fg:w="196"/><text x="40.0588%" y="207.50">libsystem..</text></g><g><title>libsystem_kernel.dylib`mach_vm_protect (1 samples, 0.03%)</title><rect x="46.4664%" y="181" width="0.0341%" height="15" fill="rgb(235,30,7)" fg:x="1361" fg:w="1"/><text x="46.7164%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.20%)</title><rect x="46.5347%" y="197" width="0.2048%" height="15" fill="rgb(250,79,13)" fg:x="1363" fg:w="6"/><text x="46.7847%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.20%)</title><rect x="46.5347%" y="181" width="0.2048%" height="15" fill="rgb(211,146,34)" fg:x="1363" fg:w="6"/><text x="46.7847%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.20%)</title><rect x="46.5347%" y="165" width="0.2048%" height="15" fill="rgb(228,22,38)" fg:x="1363" fg:w="6"/><text x="46.7847%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="46.7054%" y="149" width="0.0341%" height="15" fill="rgb(235,168,5)" fg:x="1368" fg:w="1"/><text x="46.9554%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.07%)</title><rect x="46.7395%" y="197" width="0.0683%" height="15" fill="rgb(221,155,16)" fg:x="1369" fg:w="2"/><text x="46.9895%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="46.8419%" y="133" width="0.0341%" height="15" fill="rgb(215,215,53)" fg:x="1372" fg:w="1"/><text x="47.0919%" y="143.50"></text></g><g><title>web-server`rusty_junctions::patterns::unary::SendJoinPattern::fire (388 samples, 13.25%)</title><rect x="33.6975%" y="245" width="13.2468%" height="15" fill="rgb(223,4,10)" fg:x="987" fg:w="388"/><text x="33.9475%" y="255.50">web-server`rusty_jun..</text></g><g><title>web-server`std::thread::spawn (333 samples, 11.37%)</title><rect x="35.5753%" y="229" width="11.3691%" height="15" fill="rgb(234,103,6)" fg:x="1042" fg:w="333"/><text x="35.8253%" y="239.50">web-server`std::t..</text></g><g><title>web-server`std::thread::Thread::new (13 samples, 0.44%)</title><rect x="46.5005%" y="213" width="0.4438%" height="15" fill="rgb(227,97,0)" fg:x="1362" fg:w="13"/><text x="46.7505%" y="223.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (4 samples, 0.14%)</title><rect x="46.8078%" y="197" width="0.1366%" height="15" fill="rgb(234,150,53)" fg:x="1371" fg:w="4"/><text x="47.0578%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.10%)</title><rect x="46.8419%" y="181" width="0.1024%" height="15" fill="rgb(228,201,54)" fg:x="1372" fg:w="3"/><text x="47.0919%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.10%)</title><rect x="46.8419%" y="165" width="0.1024%" height="15" fill="rgb(222,22,37)" fg:x="1372" fg:w="3"/><text x="47.0919%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.10%)</title><rect x="46.8419%" y="149" width="0.1024%" height="15" fill="rgb(237,53,32)" fg:x="1372" fg:w="3"/><text x="47.0919%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.07%)</title><rect x="46.8761%" y="133" width="0.0683%" height="15" fill="rgb(233,25,53)" fg:x="1373" fg:w="2"/><text x="47.1261%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="46.9102%" y="117" width="0.0341%" height="15" fill="rgb(210,40,34)" fg:x="1374" fg:w="1"/><text x="47.1602%" y="127.50"></text></g><g><title>web-server`__rust_dealloc (1 samples, 0.03%)</title><rect x="47.0126%" y="213" width="0.0341%" height="15" fill="rgb(241,220,44)" fg:x="1377" fg:w="1"/><text x="47.2626%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (37 samples, 1.26%)</title><rect x="47.1492%" y="181" width="1.2632%" height="15" fill="rgb(235,28,35)" fg:x="1381" fg:w="37"/><text x="47.3992%" y="191.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::WaitToken::wait (41 samples, 1.40%)</title><rect x="47.0468%" y="213" width="1.3998%" height="15" fill="rgb(210,56,17)" fg:x="1378" fg:w="41"/><text x="47.2968%" y="223.50"></text></g><g><title>web-server`std::thread::park (40 samples, 1.37%)</title><rect x="47.0809%" y="197" width="1.3657%" height="15" fill="rgb(224,130,29)" fg:x="1379" fg:w="40"/><text x="47.3309%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.03%)</title><rect x="48.4124%" y="181" width="0.0341%" height="15" fill="rgb(235,212,8)" fg:x="1418" fg:w="1"/><text x="48.6624%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.03%)</title><rect x="48.4807%" y="197" width="0.0341%" height="15" fill="rgb(223,33,50)" fg:x="1420" fg:w="1"/><text x="48.7307%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="48.6856%" y="165" width="0.0341%" height="15" fill="rgb(219,149,13)" fg:x="1426" fg:w="1"/><text x="48.9356%" y="175.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (9 samples, 0.31%)</title><rect x="48.4466%" y="213" width="0.3073%" height="15" fill="rgb(250,156,29)" fg:x="1419" fg:w="9"/><text x="48.6966%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (7 samples, 0.24%)</title><rect x="48.5149%" y="197" width="0.2390%" height="15" fill="rgb(216,193,19)" fg:x="1421" fg:w="7"/><text x="48.7649%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.14%)</title><rect x="48.6173%" y="181" width="0.1366%" height="15" fill="rgb(216,135,14)" fg:x="1424" fg:w="4"/><text x="48.8673%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="48.7197%" y="165" width="0.0341%" height="15" fill="rgb(241,47,5)" fg:x="1427" fg:w="1"/><text x="48.9697%" y="175.50"></text></g><g><title>web-server`rusty_junctions::controller::Controller::handle_packets (586 samples, 20.01%)</title><rect x="28.7812%" y="261" width="20.0068%" height="15" fill="rgb(233,42,35)" fg:x="843" fg:w="586"/><text x="29.0312%" y="271.50">web-server`rusty_junctions::con..</text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (54 samples, 1.84%)</title><rect x="46.9443%" y="245" width="1.8436%" height="15" fill="rgb(231,13,6)" fg:x="1375" fg:w="54"/><text x="47.1943%" y="255.50">w..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (54 samples, 1.84%)</title><rect x="46.9443%" y="229" width="1.8436%" height="15" fill="rgb(207,181,40)" fg:x="1375" fg:w="54"/><text x="47.1943%" y="239.50">w..</text></g><g><title>web-server`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="48.7538%" y="213" width="0.0341%" height="15" fill="rgb(254,173,49)" fg:x="1428" fg:w="1"/><text x="49.0038%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="48.7880%" y="245" width="0.0341%" height="15" fill="rgb(221,1,38)" fg:x="1429" fg:w="1"/><text x="49.0380%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="48.7880%" y="229" width="0.0341%" height="15" fill="rgb(206,124,46)" fg:x="1429" fg:w="1"/><text x="49.0380%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="48.8221%" y="245" width="0.0341%" height="15" fill="rgb(249,21,11)" fg:x="1430" fg:w="1"/><text x="49.0721%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="48.9928%" y="213" width="0.0683%" height="15" fill="rgb(222,201,40)" fg:x="1435" fg:w="2"/><text x="49.2428%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="48.9928%" y="197" width="0.0683%" height="15" fill="rgb(235,61,29)" fg:x="1435" fg:w="2"/><text x="49.2428%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="48.9928%" y="181" width="0.0683%" height="15" fill="rgb(219,207,3)" fg:x="1435" fg:w="2"/><text x="49.2428%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.03%)</title><rect x="49.0270%" y="165" width="0.0341%" height="15" fill="rgb(222,56,46)" fg:x="1436" fg:w="1"/><text x="49.2770%" y="175.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::binary::transform_send::_{{closure}} (17 samples, 0.58%)</title><rect x="48.7880%" y="261" width="0.5804%" height="15" fill="rgb(239,76,54)" fg:x="1429" fg:w="17"/><text x="49.0380%" y="271.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (15 samples, 0.51%)</title><rect x="48.8563%" y="245" width="0.5121%" height="15" fill="rgb(231,124,27)" fg:x="1431" fg:w="15"/><text x="49.1063%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (15 samples, 0.51%)</title><rect x="48.8563%" y="229" width="0.5121%" height="15" fill="rgb(249,195,6)" fg:x="1431" fg:w="15"/><text x="49.1063%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (9 samples, 0.31%)</title><rect x="49.0611%" y="213" width="0.3073%" height="15" fill="rgb(237,174,47)" fg:x="1437" fg:w="9"/><text x="49.3111%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (9 samples, 0.31%)</title><rect x="49.0611%" y="197" width="0.3073%" height="15" fill="rgb(206,201,31)" fg:x="1437" fg:w="9"/><text x="49.3111%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (63 samples, 2.15%)</title><rect x="49.4025%" y="245" width="2.1509%" height="15" fill="rgb(231,57,52)" fg:x="1447" fg:w="63"/><text x="49.6525%" y="255.50">l..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="51.5534%" y="245" width="0.0683%" height="15" fill="rgb(248,177,22)" fg:x="1510" fg:w="2"/><text x="51.8034%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="51.5876%" y="229" width="0.0341%" height="15" fill="rgb(215,211,37)" fg:x="1511" fg:w="1"/><text x="51.8376%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="51.5876%" y="213" width="0.0341%" height="15" fill="rgb(241,128,51)" fg:x="1511" fg:w="1"/><text x="51.8376%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="51.6217%" y="245" width="0.0341%" height="15" fill="rgb(227,165,31)" fg:x="1512" fg:w="1"/><text x="51.8717%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.07%)</title><rect x="51.6559%" y="245" width="0.0683%" height="15" fill="rgb(228,167,24)" fg:x="1513" fg:w="2"/><text x="51.9059%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.14%)</title><rect x="51.7241%" y="245" width="0.1366%" height="15" fill="rgb(228,143,12)" fg:x="1515" fg:w="4"/><text x="51.9741%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.07%)</title><rect x="51.7924%" y="229" width="0.0683%" height="15" fill="rgb(249,149,8)" fg:x="1517" fg:w="2"/><text x="52.0424%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="51.8266%" y="213" width="0.0341%" height="15" fill="rgb(243,35,44)" fg:x="1518" fg:w="1"/><text x="52.0766%" y="223.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="51.8607%" y="245" width="0.0683%" height="15" fill="rgb(246,89,9)" fg:x="1519" fg:w="2"/><text x="52.1107%" y="255.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.07%)</title><rect x="51.9290%" y="245" width="0.0683%" height="15" fill="rgb(233,213,13)" fg:x="1521" fg:w="2"/><text x="52.1790%" y="255.50"></text></g><g><title>web-server`__rdl_dealloc (1 samples, 0.03%)</title><rect x="51.9973%" y="245" width="0.0341%" height="15" fill="rgb(233,141,41)" fg:x="1523" fg:w="1"/><text x="52.2473%" y="255.50"></text></g><g><title>web-server`alloc::fmt::format (1 samples, 0.03%)</title><rect x="52.0314%" y="245" width="0.0341%" height="15" fill="rgb(239,167,4)" fg:x="1524" fg:w="1"/><text x="52.2814%" y="255.50"></text></g><g><title>web-server`core::fmt::Formatter::pad (1 samples, 0.03%)</title><rect x="52.0656%" y="245" width="0.0341%" height="15" fill="rgb(209,217,16)" fg:x="1525" fg:w="1"/><text x="52.3156%" y="255.50"></text></g><g><title>web-server`core::str::pattern::StrSearcher::new (1 samples, 0.03%)</title><rect x="52.0997%" y="245" width="0.0341%" height="15" fill="rgb(219,88,35)" fg:x="1526" fg:w="1"/><text x="52.3497%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (44 samples, 1.50%)</title><rect x="52.1680%" y="197" width="1.5022%" height="15" fill="rgb(220,193,23)" fg:x="1528" fg:w="44"/><text x="52.4180%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (45 samples, 1.54%)</title><rect x="52.1680%" y="213" width="1.5364%" height="15" fill="rgb(230,90,52)" fg:x="1528" fg:w="45"/><text x="52.4180%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_wait (1 samples, 0.03%)</title><rect x="53.6702%" y="197" width="0.0341%" height="15" fill="rgb(252,106,19)" fg:x="1572" fg:w="1"/><text x="53.9202%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (26 samples, 0.89%)</title><rect x="53.7043%" y="213" width="0.8877%" height="15" fill="rgb(206,74,20)" fg:x="1573" fg:w="26"/><text x="53.9543%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (23 samples, 0.79%)</title><rect x="53.8068%" y="197" width="0.7853%" height="15" fill="rgb(230,138,44)" fg:x="1576" fg:w="23"/><text x="54.0568%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="54.6603%" y="181" width="0.0341%" height="15" fill="rgb(235,182,43)" fg:x="1601" fg:w="1"/><text x="54.9103%" y="191.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (28 samples, 0.96%)</title><rect x="54.6262%" y="197" width="0.9560%" height="15" fill="rgb(242,16,51)" fg:x="1600" fg:w="28"/><text x="54.8762%" y="207.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (26 samples, 0.89%)</title><rect x="54.6944%" y="181" width="0.8877%" height="15" fill="rgb(248,9,4)" fg:x="1602" fg:w="26"/><text x="54.9444%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`write (25 samples, 0.85%)</title><rect x="54.7286%" y="165" width="0.8535%" height="15" fill="rgb(210,31,22)" fg:x="1603" fg:w="25"/><text x="54.9786%" y="175.50"></text></g><g><title>web-server`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.07%)</title><rect x="55.5821%" y="181" width="0.0683%" height="15" fill="rgb(239,54,39)" fg:x="1628" fg:w="2"/><text x="55.8321%" y="191.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.07%)</title><rect x="55.6504%" y="181" width="0.0683%" height="15" fill="rgb(230,99,41)" fg:x="1630" fg:w="2"/><text x="55.9004%" y="191.50"></text></g><g><title>web-server`&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="55.7187%" y="181" width="0.0341%" height="15" fill="rgb(253,106,12)" fg:x="1632" fg:w="1"/><text x="55.9687%" y="191.50"></text></g><g><title>web-server`core::fmt::Formatter::debug_struct (2 samples, 0.07%)</title><rect x="55.7528%" y="181" width="0.0683%" height="15" fill="rgb(213,46,41)" fg:x="1633" fg:w="2"/><text x="56.0028%" y="191.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="55.7870%" y="165" width="0.0341%" height="15" fill="rgb(215,133,35)" fg:x="1634" fg:w="1"/><text x="56.0370%" y="175.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="55.7870%" y="149" width="0.0341%" height="15" fill="rgb(213,28,5)" fg:x="1634" fg:w="1"/><text x="56.0370%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__getpeername (13 samples, 0.44%)</title><rect x="55.8211%" y="165" width="0.4438%" height="15" fill="rgb(215,77,49)" fg:x="1635" fg:w="13"/><text x="56.0711%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__getsockname (19 samples, 0.65%)</title><rect x="56.2649%" y="165" width="0.6487%" height="15" fill="rgb(248,100,22)" fg:x="1648" fg:w="19"/><text x="56.5149%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="56.9478%" y="133" width="0.0341%" height="15" fill="rgb(208,67,9)" fg:x="1668" fg:w="1"/><text x="57.1978%" y="143.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.10%)</title><rect x="56.9136%" y="165" width="0.1024%" height="15" fill="rgb(219,133,21)" fg:x="1667" fg:w="3"/><text x="57.1636%" y="175.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.07%)</title><rect x="56.9478%" y="149" width="0.0683%" height="15" fill="rgb(246,46,29)" fg:x="1668" fg:w="2"/><text x="57.1978%" y="159.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="56.9819%" y="133" width="0.0341%" height="15" fill="rgb(246,185,52)" fg:x="1669" fg:w="1"/><text x="57.2319%" y="143.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddr as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="57.2550%" y="149" width="0.0341%" height="15" fill="rgb(252,136,11)" fg:x="1677" fg:w="1"/><text x="57.5050%" y="159.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddrV6 as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="57.2892%" y="149" width="0.0341%" height="15" fill="rgb(219,138,53)" fg:x="1678" fg:w="1"/><text x="57.5392%" y="159.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.07%)</title><rect x="57.3233%" y="133" width="0.0683%" height="15" fill="rgb(211,51,23)" fg:x="1679" fg:w="2"/><text x="57.5733%" y="143.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.07%)</title><rect x="57.3233%" y="117" width="0.0683%" height="15" fill="rgb(247,221,28)" fg:x="1679" fg:w="2"/><text x="57.5733%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="57.3575%" y="101" width="0.0341%" height="15" fill="rgb(251,222,45)" fg:x="1680" fg:w="1"/><text x="57.6075%" y="111.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="57.4940%" y="85" width="0.0341%" height="15" fill="rgb(217,162,53)" fg:x="1684" fg:w="1"/><text x="57.7440%" y="95.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="57.4940%" y="69" width="0.0341%" height="15" fill="rgb(229,93,14)" fg:x="1684" fg:w="1"/><text x="57.7440%" y="79.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="57.4940%" y="53" width="0.0341%" height="15" fill="rgb(209,67,49)" fg:x="1684" fg:w="1"/><text x="57.7440%" y="63.50"></text></g><g><title>web-server`&lt;std::net::ip::Ipv6Addr as core::fmt::Display&gt;::fmt (4 samples, 0.14%)</title><rect x="57.5282%" y="85" width="0.1366%" height="15" fill="rgb(213,87,29)" fg:x="1685" fg:w="4"/><text x="57.7782%" y="95.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.07%)</title><rect x="57.5964%" y="69" width="0.0683%" height="15" fill="rgb(205,151,52)" fg:x="1687" fg:w="2"/><text x="57.8464%" y="79.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.07%)</title><rect x="57.5964%" y="53" width="0.0683%" height="15" fill="rgb(253,215,39)" fg:x="1687" fg:w="2"/><text x="57.8464%" y="63.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (2 samples, 0.07%)</title><rect x="57.5964%" y="37" width="0.0683%" height="15" fill="rgb(221,220,41)" fg:x="1687" fg:w="2"/><text x="57.8464%" y="47.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddrV6 as core::fmt::Display&gt;::fmt (10 samples, 0.34%)</title><rect x="57.3916%" y="133" width="0.3414%" height="15" fill="rgb(218,133,21)" fg:x="1681" fg:w="10"/><text x="57.6416%" y="143.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (8 samples, 0.27%)</title><rect x="57.4599%" y="117" width="0.2731%" height="15" fill="rgb(221,193,43)" fg:x="1683" fg:w="8"/><text x="57.7099%" y="127.50"></text></g><g><title>web-server`core::fmt::write (7 samples, 0.24%)</title><rect x="57.4940%" y="101" width="0.2390%" height="15" fill="rgb(240,128,52)" fg:x="1684" fg:w="7"/><text x="57.7440%" y="111.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (2 samples, 0.07%)</title><rect x="57.6647%" y="85" width="0.0683%" height="15" fill="rgb(253,114,12)" fg:x="1689" fg:w="2"/><text x="57.9147%" y="95.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.07%)</title><rect x="57.6647%" y="69" width="0.0683%" height="15" fill="rgb(215,223,47)" fg:x="1689" fg:w="2"/><text x="57.9147%" y="79.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="57.6989%" y="53" width="0.0341%" height="15" fill="rgb(248,225,23)" fg:x="1690" fg:w="1"/><text x="57.9489%" y="63.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (13 samples, 0.44%)</title><rect x="57.3233%" y="149" width="0.4438%" height="15" fill="rgb(250,108,0)" fg:x="1679" fg:w="13"/><text x="57.5733%" y="159.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (1 samples, 0.03%)</title><rect x="57.7330%" y="133" width="0.0341%" height="15" fill="rgb(228,208,7)" fg:x="1691" fg:w="1"/><text x="57.9830%" y="143.50"></text></g><g><title>web-server`&lt;std::sys_common::net::TcpStream as core::fmt::Debug&gt;::fmt (23 samples, 0.79%)</title><rect x="57.0160%" y="165" width="0.7853%" height="15" fill="rgb(244,45,10)" fg:x="1670" fg:w="23"/><text x="57.2660%" y="175.50"></text></g><g><title>web-server`core::fmt::num::_&lt;impl core::fmt::Debug for i32&gt;::fmt (1 samples, 0.03%)</title><rect x="57.7672%" y="149" width="0.0341%" height="15" fill="rgb(207,125,25)" fg:x="1692" fg:w="1"/><text x="58.0172%" y="159.50"></text></g><g><title>web-server`std::io::stdio::_print (167 samples, 5.70%)</title><rect x="52.1338%" y="245" width="5.7016%" height="15" fill="rgb(210,195,18)" fg:x="1527" fg:w="167"/><text x="52.3838%" y="255.50">web-ser..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (166 samples, 5.67%)</title><rect x="52.1680%" y="229" width="5.6675%" height="15" fill="rgb(249,80,12)" fg:x="1528" fg:w="166"/><text x="52.4180%" y="239.50">web-ser..</text></g><g><title>web-server`core::fmt::write (95 samples, 3.24%)</title><rect x="54.5920%" y="213" width="3.2434%" height="15" fill="rgb(221,65,9)" fg:x="1599" fg:w="95"/><text x="54.8420%" y="223.50">web..</text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (66 samples, 2.25%)</title><rect x="55.5821%" y="197" width="2.2533%" height="15" fill="rgb(235,49,36)" fg:x="1628" fg:w="66"/><text x="55.8321%" y="207.50">w..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (59 samples, 2.01%)</title><rect x="55.8211%" y="181" width="2.0143%" height="15" fill="rgb(225,32,20)" fg:x="1635" fg:w="59"/><text x="56.0711%" y="191.50">w..</text></g><g><title>web-server`core::unicode::unicode_data::grapheme_extend::lookup (1 samples, 0.03%)</title><rect x="57.8013%" y="165" width="0.0341%" height="15" fill="rgb(215,141,46)" fg:x="1693" fg:w="1"/><text x="58.0513%" y="175.50"></text></g><g><title>web-server`std::net::udp::UdpSocket::recv (1 samples, 0.03%)</title><rect x="57.8354%" y="245" width="0.0341%" height="15" fill="rgb(250,160,47)" fg:x="1694" fg:w="1"/><text x="58.0854%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (1 samples, 0.03%)</title><rect x="57.8696%" y="245" width="0.0341%" height="15" fill="rgb(216,222,40)" fg:x="1695" fg:w="1"/><text x="58.1196%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (1 samples, 0.03%)</title><rect x="57.9037%" y="245" width="0.0341%" height="15" fill="rgb(234,217,39)" fg:x="1696" fg:w="1"/><text x="58.1537%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__recvfrom (2 samples, 0.07%)</title><rect x="57.9379%" y="229" width="0.0683%" height="15" fill="rgb(207,178,40)" fg:x="1697" fg:w="2"/><text x="58.1879%" y="239.50"></text></g><g><title>libsystem_c.dylib`recv (1 samples, 0.03%)</title><rect x="58.0061%" y="229" width="0.0341%" height="15" fill="rgb(221,136,13)" fg:x="1699" fg:w="1"/><text x="58.2561%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (64 samples, 2.19%)</title><rect x="58.0403%" y="229" width="2.1850%" height="15" fill="rgb(249,199,10)" fg:x="1700" fg:w="64"/><text x="58.2903%" y="239.50">l..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="60.2253%" y="229" width="0.0341%" height="15" fill="rgb(249,222,13)" fg:x="1764" fg:w="1"/><text x="60.4753%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="60.2595%" y="229" width="0.0341%" height="15" fill="rgb(244,185,38)" fg:x="1765" fg:w="1"/><text x="60.5095%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.20%)</title><rect x="60.2936%" y="229" width="0.2048%" height="15" fill="rgb(236,202,9)" fg:x="1766" fg:w="6"/><text x="60.5436%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.17%)</title><rect x="60.3278%" y="213" width="0.1707%" height="15" fill="rgb(250,229,37)" fg:x="1767" fg:w="5"/><text x="60.5778%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.10%)</title><rect x="60.3960%" y="197" width="0.1024%" height="15" fill="rgb(206,174,23)" fg:x="1769" fg:w="3"/><text x="60.6460%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="60.4985%" y="229" width="0.0341%" height="15" fill="rgb(211,33,43)" fg:x="1772" fg:w="1"/><text x="60.7485%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="60.5326%" y="229" width="0.0341%" height="15" fill="rgb(245,58,50)" fg:x="1773" fg:w="1"/><text x="60.7826%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.03%)</title><rect x="60.5667%" y="213" width="0.0341%" height="15" fill="rgb(244,68,36)" fg:x="1774" fg:w="1"/><text x="60.8167%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (21 samples, 0.72%)</title><rect x="60.6009%" y="197" width="0.7170%" height="15" fill="rgb(232,229,15)" fg:x="1775" fg:w="21"/><text x="60.8509%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (20 samples, 0.68%)</title><rect x="60.6350%" y="181" width="0.6828%" height="15" fill="rgb(254,30,23)" fg:x="1776" fg:w="20"/><text x="60.8850%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (8 samples, 0.27%)</title><rect x="61.3179%" y="197" width="0.2731%" height="15" fill="rgb(235,160,14)" fg:x="1796" fg:w="8"/><text x="61.5679%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (8 samples, 0.27%)</title><rect x="61.3179%" y="181" width="0.2731%" height="15" fill="rgb(212,155,44)" fg:x="1796" fg:w="8"/><text x="61.5679%" y="191.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="61.5910%" y="197" width="0.0341%" height="15" fill="rgb(226,2,50)" fg:x="1804" fg:w="1"/><text x="61.8410%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`write (41 samples, 1.40%)</title><rect x="61.6251%" y="165" width="1.3998%" height="15" fill="rgb(234,177,6)" fg:x="1805" fg:w="41"/><text x="61.8751%" y="175.50"></text></g><g><title>web-server`std::io::stdio::_print (76 samples, 2.59%)</title><rect x="60.5667%" y="229" width="2.5947%" height="15" fill="rgb(217,24,9)" fg:x="1774" fg:w="76"/><text x="60.8167%" y="239.50">we..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (75 samples, 2.56%)</title><rect x="60.6009%" y="213" width="2.5606%" height="15" fill="rgb(220,13,46)" fg:x="1775" fg:w="75"/><text x="60.8509%" y="223.50">we..</text></g><g><title>web-server`core::fmt::write (45 samples, 1.54%)</title><rect x="61.6251%" y="197" width="1.5364%" height="15" fill="rgb(239,221,27)" fg:x="1805" fg:w="45"/><text x="61.8751%" y="207.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (45 samples, 1.54%)</title><rect x="61.6251%" y="181" width="1.5364%" height="15" fill="rgb(222,198,25)" fg:x="1805" fg:w="45"/><text x="61.8751%" y="191.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (4 samples, 0.14%)</title><rect x="63.0249%" y="165" width="0.1366%" height="15" fill="rgb(211,99,13)" fg:x="1846" fg:w="4"/><text x="63.2749%" y="175.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="63.1273%" y="149" width="0.0341%" height="15" fill="rgb(232,111,31)" fg:x="1849" fg:w="1"/><text x="63.3773%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.41%)</title><rect x="63.2298%" y="213" width="0.4097%" height="15" fill="rgb(245,82,37)" fg:x="1852" fg:w="12"/><text x="63.4798%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.34%)</title><rect x="63.2981%" y="197" width="0.3414%" height="15" fill="rgb(227,149,46)" fg:x="1854" fg:w="10"/><text x="63.5481%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.34%)</title><rect x="63.2981%" y="181" width="0.3414%" height="15" fill="rgb(218,36,50)" fg:x="1854" fg:w="10"/><text x="63.5481%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.17%)</title><rect x="63.4688%" y="165" width="0.1707%" height="15" fill="rgb(226,80,48)" fg:x="1859" fg:w="5"/><text x="63.7188%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.07%)</title><rect x="63.5712%" y="149" width="0.0683%" height="15" fill="rgb(238,224,15)" fg:x="1862" fg:w="2"/><text x="63.8212%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.03%)</title><rect x="63.6395%" y="213" width="0.0341%" height="15" fill="rgb(241,136,10)" fg:x="1864" fg:w="1"/><text x="63.8895%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="63.6736%" y="213" width="0.0341%" height="15" fill="rgb(208,32,45)" fg:x="1865" fg:w="1"/><text x="63.9236%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="63.7078%" y="213" width="0.0341%" height="15" fill="rgb(207,135,9)" fg:x="1866" fg:w="1"/><text x="63.9578%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="63.7078%" y="197" width="0.0341%" height="15" fill="rgb(206,86,44)" fg:x="1866" fg:w="1"/><text x="63.9578%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="63.7419%" y="213" width="0.0341%" height="15" fill="rgb(245,177,15)" fg:x="1867" fg:w="1"/><text x="63.9919%" y="223.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="63.7760%" y="213" width="0.0341%" height="15" fill="rgb(206,64,50)" fg:x="1868" fg:w="1"/><text x="64.0260%" y="223.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="63.7760%" y="197" width="0.0341%" height="15" fill="rgb(234,36,40)" fg:x="1868" fg:w="1"/><text x="64.0260%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="63.7760%" y="181" width="0.0341%" height="15" fill="rgb(213,64,8)" fg:x="1868" fg:w="1"/><text x="64.0260%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="63.7760%" y="165" width="0.0341%" height="15" fill="rgb(210,75,36)" fg:x="1868" fg:w="1"/><text x="64.0260%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="63.7760%" y="149" width="0.0341%" height="15" fill="rgb(229,88,21)" fg:x="1868" fg:w="1"/><text x="64.0260%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="63.7760%" y="133" width="0.0341%" height="15" fill="rgb(252,204,47)" fg:x="1868" fg:w="1"/><text x="64.0260%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="63.7760%" y="117" width="0.0341%" height="15" fill="rgb(208,77,27)" fg:x="1868" fg:w="1"/><text x="64.0260%" y="127.50"></text></g><g><title>web-server`core::str::converts::from_utf8 (1 samples, 0.03%)</title><rect x="63.8102%" y="213" width="0.0341%" height="15" fill="rgb(221,76,26)" fg:x="1869" fg:w="1"/><text x="64.0602%" y="223.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (1 samples, 0.03%)</title><rect x="63.8785%" y="181" width="0.0341%" height="15" fill="rgb(225,139,18)" fg:x="1871" fg:w="1"/><text x="64.1285%" y="191.50"></text></g><g><title>web-server`web_server::request::Request::from_tcp_stream (182 samples, 6.21%)</title><rect x="57.9379%" y="245" width="6.2137%" height="15" fill="rgb(230,137,11)" fg:x="1697" fg:w="182"/><text x="58.1879%" y="255.50">web-serv..</text></g><g><title>web-server`web_server::header::Header::from_request (29 samples, 0.99%)</title><rect x="63.1615%" y="229" width="0.9901%" height="15" fill="rgb(212,28,1)" fg:x="1850" fg:w="29"/><text x="63.4115%" y="239.50"></text></g><g><title>web-server`httparse::Request::parse (9 samples, 0.31%)</title><rect x="63.8443%" y="213" width="0.3073%" height="15" fill="rgb(248,164,17)" fg:x="1870" fg:w="9"/><text x="64.0943%" y="223.50"></text></g><g><title>web-server`httparse::Request::parse_with_uninit_headers (9 samples, 0.31%)</title><rect x="63.8443%" y="197" width="0.3073%" height="15" fill="rgb(222,171,42)" fg:x="1870" fg:w="9"/><text x="64.0943%" y="207.50"></text></g><g><title>web-server`httparse::simd::runtime::match_uri_vectored (7 samples, 0.24%)</title><rect x="63.9126%" y="181" width="0.2390%" height="15" fill="rgb(243,84,45)" fg:x="1872" fg:w="7"/><text x="64.1626%" y="191.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (6 samples, 0.20%)</title><rect x="63.9467%" y="165" width="0.2048%" height="15" fill="rgb(252,49,23)" fg:x="1873" fg:w="6"/><text x="64.1967%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`fcntl (1 samples, 0.03%)</title><rect x="64.3564%" y="229" width="0.0341%" height="15" fill="rgb(215,19,7)" fg:x="1885" fg:w="1"/><text x="64.6064%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.14%)</title><rect x="64.3906%" y="229" width="0.1366%" height="15" fill="rgb(238,81,41)" fg:x="1886" fg:w="4"/><text x="64.6406%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.10%)</title><rect x="64.4247%" y="213" width="0.1024%" height="15" fill="rgb(210,199,37)" fg:x="1887" fg:w="3"/><text x="64.6747%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.10%)</title><rect x="64.4247%" y="197" width="0.1024%" height="15" fill="rgb(244,192,49)" fg:x="1887" fg:w="3"/><text x="64.6747%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="64.5271%" y="229" width="0.0341%" height="15" fill="rgb(226,211,11)" fg:x="1890" fg:w="1"/><text x="64.7771%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="64.5271%" y="213" width="0.0341%" height="15" fill="rgb(236,162,54)" fg:x="1890" fg:w="1"/><text x="64.7771%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="64.5271%" y="197" width="0.0341%" height="15" fill="rgb(220,229,9)" fg:x="1890" fg:w="1"/><text x="64.7771%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="64.6296%" y="213" width="0.0341%" height="15" fill="rgb(250,87,22)" fg:x="1893" fg:w="1"/><text x="64.8796%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.24%)</title><rect x="64.5613%" y="229" width="0.2390%" height="15" fill="rgb(239,43,17)" fg:x="1891" fg:w="7"/><text x="64.8113%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.14%)</title><rect x="64.6637%" y="213" width="0.1366%" height="15" fill="rgb(231,177,25)" fg:x="1894" fg:w="4"/><text x="64.9137%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.14%)</title><rect x="64.6637%" y="197" width="0.1366%" height="15" fill="rgb(219,179,1)" fg:x="1894" fg:w="4"/><text x="64.9137%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.17%)</title><rect x="64.8003%" y="229" width="0.1707%" height="15" fill="rgb(238,219,53)" fg:x="1898" fg:w="5"/><text x="65.0503%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.07%)</title><rect x="64.9710%" y="229" width="0.0683%" height="15" fill="rgb(232,167,36)" fg:x="1903" fg:w="2"/><text x="65.2210%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.41%)</title><rect x="65.3807%" y="197" width="0.4097%" height="15" fill="rgb(244,19,51)" fg:x="1915" fg:w="12"/><text x="65.6307%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.41%)</title><rect x="65.3807%" y="181" width="0.4097%" height="15" fill="rgb(224,6,22)" fg:x="1915" fg:w="12"/><text x="65.6307%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.17%)</title><rect x="65.6197%" y="165" width="0.1707%" height="15" fill="rgb(224,145,5)" fg:x="1922" fg:w="5"/><text x="65.8697%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="65.7562%" y="149" width="0.0341%" height="15" fill="rgb(234,130,49)" fg:x="1926" fg:w="1"/><text x="66.0062%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.51%)</title><rect x="65.3124%" y="213" width="0.5121%" height="15" fill="rgb(254,6,2)" fg:x="1913" fg:w="15"/><text x="65.5624%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="65.7904%" y="197" width="0.0341%" height="15" fill="rgb(208,96,46)" fg:x="1927" fg:w="1"/><text x="66.0404%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.17%)</title><rect x="65.8245%" y="213" width="0.1707%" height="15" fill="rgb(239,3,39)" fg:x="1928" fg:w="5"/><text x="66.0745%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (2 samples, 0.07%)</title><rect x="65.9952%" y="213" width="0.0683%" height="15" fill="rgb(233,210,1)" fg:x="1933" fg:w="2"/><text x="66.2452%" y="223.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::clone::Clone&gt;::clone (33 samples, 1.13%)</title><rect x="65.0393%" y="229" width="1.1267%" height="15" fill="rgb(244,137,37)" fg:x="1905" fg:w="33"/><text x="65.2893%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.10%)</title><rect x="66.0635%" y="213" width="0.1024%" height="15" fill="rgb(240,136,2)" fg:x="1935" fg:w="3"/><text x="66.3135%" y="223.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="66.1659%" y="229" width="0.0341%" height="15" fill="rgb(239,18,37)" fg:x="1938" fg:w="1"/><text x="66.4159%" y="239.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="66.1659%" y="213" width="0.0341%" height="15" fill="rgb(218,185,22)" fg:x="1938" fg:w="1"/><text x="66.4159%" y="223.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="66.1659%" y="197" width="0.0341%" height="15" fill="rgb(225,218,4)" fg:x="1938" fg:w="1"/><text x="66.4159%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="66.1659%" y="181" width="0.0341%" height="15" fill="rgb(230,182,32)" fg:x="1938" fg:w="1"/><text x="66.4159%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="66.1659%" y="165" width="0.0341%" height="15" fill="rgb(242,56,43)" fg:x="1938" fg:w="1"/><text x="66.4159%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="66.1659%" y="149" width="0.0341%" height="15" fill="rgb(233,99,24)" fg:x="1938" fg:w="1"/><text x="66.4159%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.17%)</title><rect x="66.2684%" y="213" width="0.1707%" height="15" fill="rgb(234,209,42)" fg:x="1941" fg:w="5"/><text x="66.5184%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.17%)</title><rect x="66.2684%" y="197" width="0.1707%" height="15" fill="rgb(227,7,12)" fg:x="1941" fg:w="5"/><text x="66.5184%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.17%)</title><rect x="66.2684%" y="181" width="0.1707%" height="15" fill="rgb(245,203,43)" fg:x="1941" fg:w="5"/><text x="66.5184%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="66.4049%" y="165" width="0.0341%" height="15" fill="rgb(238,205,33)" fg:x="1945" fg:w="1"/><text x="66.6549%" y="175.50"></text></g><g><title>web-server`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.20%)</title><rect x="66.4391%" y="213" width="0.2048%" height="15" fill="rgb(231,56,7)" fg:x="1946" fg:w="6"/><text x="66.6891%" y="223.50"></text></g><g><title>web-server`core::str::pattern::TwoWaySearcher::next (2 samples, 0.07%)</title><rect x="66.5756%" y="197" width="0.0683%" height="15" fill="rgb(244,186,29)" fg:x="1950" fg:w="2"/><text x="66.8256%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="66.7463%" y="149" width="0.0341%" height="15" fill="rgb(234,111,31)" fg:x="1955" fg:w="1"/><text x="66.9963%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (1 samples, 0.03%)</title><rect x="66.7805%" y="149" width="0.0341%" height="15" fill="rgb(241,149,10)" fg:x="1956" fg:w="1"/><text x="67.0305%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="66.8146%" y="149" width="0.0341%" height="15" fill="rgb(249,206,44)" fg:x="1957" fg:w="1"/><text x="67.0646%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.07%)</title><rect x="66.8829%" y="133" width="0.0683%" height="15" fill="rgb(251,153,30)" fg:x="1959" fg:w="2"/><text x="67.1329%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="66.9170%" y="117" width="0.0341%" height="15" fill="rgb(239,152,38)" fg:x="1960" fg:w="1"/><text x="67.1670%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.20%)</title><rect x="66.9512%" y="133" width="0.2048%" height="15" fill="rgb(249,139,47)" fg:x="1961" fg:w="6"/><text x="67.2012%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.17%)</title><rect x="66.9853%" y="117" width="0.1707%" height="15" fill="rgb(244,64,35)" fg:x="1962" fg:w="5"/><text x="67.2353%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="67.1219%" y="101" width="0.0341%" height="15" fill="rgb(216,46,15)" fg:x="1966" fg:w="1"/><text x="67.3719%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (18 samples, 0.61%)</title><rect x="66.6439%" y="181" width="0.6145%" height="15" fill="rgb(250,74,19)" fg:x="1952" fg:w="18"/><text x="66.8939%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.55%)</title><rect x="66.7122%" y="165" width="0.5463%" height="15" fill="rgb(249,42,33)" fg:x="1954" fg:w="16"/><text x="66.9622%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (12 samples, 0.41%)</title><rect x="66.8488%" y="149" width="0.4097%" height="15" fill="rgb(242,149,17)" fg:x="1958" fg:w="12"/><text x="67.0988%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (3 samples, 0.10%)</title><rect x="67.1560%" y="133" width="0.1024%" height="15" fill="rgb(244,29,21)" fg:x="1967" fg:w="3"/><text x="67.4060%" y="143.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.68%)</title><rect x="66.6439%" y="213" width="0.6828%" height="15" fill="rgb(220,130,37)" fg:x="1952" fg:w="20"/><text x="66.8939%" y="223.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (20 samples, 0.68%)</title><rect x="66.6439%" y="197" width="0.6828%" height="15" fill="rgb(211,67,2)" fg:x="1952" fg:w="20"/><text x="66.8939%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.07%)</title><rect x="67.2584%" y="181" width="0.0683%" height="15" fill="rgb(235,68,52)" fg:x="1970" fg:w="2"/><text x="67.5084%" y="191.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 1.16%)</title><rect x="66.2001%" y="229" width="1.1608%" height="15" fill="rgb(246,142,3)" fg:x="1939" fg:w="34"/><text x="66.4501%" y="239.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="67.3267%" y="213" width="0.0341%" height="15" fill="rgb(241,25,7)" fg:x="1972" fg:w="1"/><text x="67.5767%" y="223.50"></text></g><g><title>web-server`DYLD-STUB$$malloc (2 samples, 0.07%)</title><rect x="67.3609%" y="229" width="0.0683%" height="15" fill="rgb(242,119,39)" fg:x="1973" fg:w="2"/><text x="67.6109%" y="239.50"></text></g><g><title>web-server`__rdl_alloc (1 samples, 0.03%)</title><rect x="67.4292%" y="229" width="0.0341%" height="15" fill="rgb(241,98,45)" fg:x="1975" fg:w="1"/><text x="67.6792%" y="239.50"></text></g><g><title>web-server`__rust_alloc (1 samples, 0.03%)</title><rect x="67.4633%" y="229" width="0.0341%" height="15" fill="rgb(254,28,30)" fg:x="1976" fg:w="1"/><text x="67.7133%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="67.4974%" y="213" width="0.0341%" height="15" fill="rgb(241,142,54)" fg:x="1977" fg:w="1"/><text x="67.7474%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="67.4974%" y="197" width="0.0341%" height="15" fill="rgb(222,85,15)" fg:x="1977" fg:w="1"/><text x="67.7474%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="67.4974%" y="181" width="0.0341%" height="15" fill="rgb(210,85,47)" fg:x="1977" fg:w="1"/><text x="67.7474%" y="191.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="67.5316%" y="213" width="0.0341%" height="15" fill="rgb(224,206,25)" fg:x="1978" fg:w="1"/><text x="67.7816%" y="223.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="67.5999%" y="181" width="0.0341%" height="15" fill="rgb(243,201,19)" fg:x="1980" fg:w="1"/><text x="67.8499%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="67.5999%" y="165" width="0.0341%" height="15" fill="rgb(236,59,4)" fg:x="1980" fg:w="1"/><text x="67.8499%" y="175.50"></text></g><g><title>web-server`alloc::fmt::format (5 samples, 0.17%)</title><rect x="67.4974%" y="229" width="0.1707%" height="15" fill="rgb(254,179,45)" fg:x="1977" fg:w="5"/><text x="67.7474%" y="239.50"></text></g><g><title>web-server`core::fmt::write (3 samples, 0.10%)</title><rect x="67.5657%" y="213" width="0.1024%" height="15" fill="rgb(226,14,10)" fg:x="1979" fg:w="3"/><text x="67.8157%" y="223.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for i64&gt;::fmt (3 samples, 0.10%)</title><rect x="67.5657%" y="197" width="0.1024%" height="15" fill="rgb(244,27,41)" fg:x="1979" fg:w="3"/><text x="67.8157%" y="207.50"></text></g><g><title>web-server`core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="67.6340%" y="181" width="0.0341%" height="15" fill="rgb(235,35,32)" fg:x="1981" fg:w="1"/><text x="67.8840%" y="191.50"></text></g><g><title>web-server`core::fmt::Formatter::pad (1 samples, 0.03%)</title><rect x="67.6681%" y="229" width="0.0341%" height="15" fill="rgb(218,68,31)" fg:x="1982" fg:w="1"/><text x="67.9181%" y="239.50"></text></g><g><title>web-server`core::num::_&lt;impl core::str::traits::FromStr for i64&gt;::from_str (2 samples, 0.07%)</title><rect x="67.7023%" y="229" width="0.0683%" height="15" fill="rgb(207,120,37)" fg:x="1983" fg:w="2"/><text x="67.9523%" y="239.50"></text></g><g><title>web-server`core::str::pattern::StrSearcher::new (22 samples, 0.75%)</title><rect x="67.7706%" y="229" width="0.7511%" height="15" fill="rgb(227,98,0)" fg:x="1985" fg:w="22"/><text x="68.0206%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.75%)</title><rect x="67.7706%" y="213" width="0.7511%" height="15" fill="rgb(207,7,3)" fg:x="1985" fg:w="22"/><text x="68.0206%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (320 samples, 10.93%)</title><rect x="68.5217%" y="213" width="10.9252%" height="15" fill="rgb(206,98,19)" fg:x="2007" fg:w="320"/><text x="68.7717%" y="223.50">libsystem_kernel..</text></g><g><title>web-server`std::os::unix::net::stream::UnixStream::try_clone (321 samples, 10.96%)</title><rect x="68.5217%" y="229" width="10.9594%" height="15" fill="rgb(217,5,26)" fg:x="2007" fg:w="321"/><text x="68.7717%" y="239.50">web-server`std::..</text></g><g><title>libsystem_kernel.dylib`fcntl (1 samples, 0.03%)</title><rect x="79.4469%" y="213" width="0.0341%" height="15" fill="rgb(235,190,38)" fg:x="2327" fg:w="1"/><text x="79.6969%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="79.6176%" y="197" width="0.0683%" height="15" fill="rgb(247,86,24)" fg:x="2332" fg:w="2"/><text x="79.8676%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="79.6176%" y="181" width="0.0683%" height="15" fill="rgb(205,101,16)" fg:x="2332" fg:w="2"/><text x="79.8676%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="79.6176%" y="165" width="0.0683%" height="15" fill="rgb(246,168,33)" fg:x="2332" fg:w="2"/><text x="79.8676%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="79.6518%" y="149" width="0.0341%" height="15" fill="rgb(231,114,1)" fg:x="2333" fg:w="1"/><text x="79.9018%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (13 samples, 0.44%)</title><rect x="79.6859%" y="181" width="0.4438%" height="15" fill="rgb(207,184,53)" fg:x="2334" fg:w="13"/><text x="79.9359%" y="191.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (20 samples, 0.68%)</title><rect x="79.4811%" y="229" width="0.6828%" height="15" fill="rgb(224,95,51)" fg:x="2328" fg:w="20"/><text x="79.7311%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (19 samples, 0.65%)</title><rect x="79.5152%" y="213" width="0.6487%" height="15" fill="rgb(212,188,45)" fg:x="2329" fg:w="19"/><text x="79.7652%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (14 samples, 0.48%)</title><rect x="79.6859%" y="197" width="0.4780%" height="15" fill="rgb(223,154,38)" fg:x="2334" fg:w="14"/><text x="79.9359%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.03%)</title><rect x="80.1297%" y="181" width="0.0341%" height="15" fill="rgb(251,22,52)" fg:x="2347" fg:w="1"/><text x="80.3797%" y="191.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__error (3 samples, 0.10%)</title><rect x="80.4029%" y="213" width="0.1024%" height="15" fill="rgb(229,209,22)" fg:x="2355" fg:w="3"/><text x="80.6529%" y="223.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$clock_get_time (1 samples, 0.03%)</title><rect x="80.5053%" y="213" width="0.0341%" height="15" fill="rgb(234,138,34)" fg:x="2358" fg:w="1"/><text x="80.7553%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`_pthread_exit_if_canceled (1 samples, 0.03%)</title><rect x="80.8467%" y="197" width="0.0341%" height="15" fill="rgb(212,95,11)" fg:x="2368" fg:w="1"/><text x="81.0967%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`cerror (2 samples, 0.07%)</title><rect x="80.8808%" y="197" width="0.0683%" height="15" fill="rgb(240,179,47)" fg:x="2369" fg:w="2"/><text x="81.1308%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (6 samples, 0.20%)</title><rect x="80.9491%" y="197" width="0.2048%" height="15" fill="rgb(240,163,11)" fg:x="2371" fg:w="6"/><text x="81.1991%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (39 samples, 1.33%)</title><rect x="81.1881%" y="181" width="1.3315%" height="15" fill="rgb(236,37,12)" fg:x="2378" fg:w="39"/><text x="81.4381%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_reply_port (12 samples, 0.41%)</title><rect x="82.5196%" y="181" width="0.4097%" height="15" fill="rgb(232,164,16)" fg:x="2417" fg:w="12"/><text x="82.7696%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (53 samples, 1.81%)</title><rect x="81.1540%" y="197" width="1.8095%" height="15" fill="rgb(244,205,15)" fg:x="2377" fg:w="53"/><text x="81.4040%" y="207.50">l..</text></g><g><title>libsystem_kernel.dylib`mig_get_reply_port (1 samples, 0.03%)</title><rect x="82.9293%" y="181" width="0.0341%" height="15" fill="rgb(223,117,47)" fg:x="2429" fg:w="1"/><text x="83.1793%" y="191.50"></text></g><g><title>libsystem_c.dylib`nanosleep (83 samples, 2.83%)</title><rect x="80.5394%" y="213" width="2.8337%" height="15" fill="rgb(244,107,35)" fg:x="2359" fg:w="83"/><text x="80.7894%" y="223.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (12 samples, 0.41%)</title><rect x="82.9635%" y="197" width="0.4097%" height="15" fill="rgb(205,140,8)" fg:x="2430" fg:w="12"/><text x="83.2135%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__error (3 samples, 0.10%)</title><rect x="83.3732%" y="213" width="0.1024%" height="15" fill="rgb(228,84,46)" fg:x="2442" fg:w="3"/><text x="83.6232%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (291 samples, 9.94%)</title><rect x="83.4756%" y="213" width="9.9351%" height="15" fill="rgb(254,188,9)" fg:x="2445" fg:w="291"/><text x="83.7256%" y="223.50">libsystem_kern..</text></g><g><title>web-server`std::thread::sleep (403 samples, 13.76%)</title><rect x="80.1639%" y="229" width="13.7590%" height="15" fill="rgb(206,112,54)" fg:x="2348" fg:w="403"/><text x="80.4139%" y="239.50">web-server`std::threa..</text></g><g><title>libsystem_kernel.dylib`cerror (15 samples, 0.51%)</title><rect x="93.4107%" y="213" width="0.5121%" height="15" fill="rgb(216,84,49)" fg:x="2736" fg:w="15"/><text x="93.6607%" y="223.50"></text></g><g><title>libsystem_c.dylib`send (1 samples, 0.03%)</title><rect x="93.9228%" y="213" width="0.0341%" height="15" fill="rgb(214,194,35)" fg:x="2751" fg:w="1"/><text x="94.1728%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (17 samples, 0.58%)</title><rect x="93.9570%" y="213" width="0.5804%" height="15" fill="rgb(249,28,3)" fg:x="2752" fg:w="17"/><text x="94.2070%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="94.5374%" y="197" width="0.0341%" height="15" fill="rgb(222,56,52)" fg:x="2769" fg:w="1"/><text x="94.7874%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="94.5374%" y="181" width="0.0341%" height="15" fill="rgb(245,217,50)" fg:x="2769" fg:w="1"/><text x="94.7874%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="94.5374%" y="165" width="0.0341%" height="15" fill="rgb(213,201,24)" fg:x="2769" fg:w="1"/><text x="94.7874%" y="175.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (1,325 samples, 45.24%)</title><rect x="49.3684%" y="261" width="45.2373%" height="15" fill="rgb(248,116,28)" fg:x="1446" fg:w="1325"/><text x="49.6184%" y="271.50">web-server`rusty_junctions::function_transforms::unary::transform_send::_{..</text></g><g><title>web-server`web_server::request::Request::handle_pooled (892 samples, 30.45%)</title><rect x="64.1516%" y="245" width="30.4541%" height="15" fill="rgb(219,72,43)" fg:x="1879" fg:w="892"/><text x="64.4016%" y="255.50">web-server`web_server::request::Request::handle_p..</text></g><g><title>web-server`web_server::request::Request::respond_ok (20 samples, 0.68%)</title><rect x="93.9228%" y="229" width="0.6828%" height="15" fill="rgb(209,138,14)" fg:x="2751" fg:w="20"/><text x="94.1728%" y="239.50"></text></g><g><title>web-server`alloc::fmt::format (2 samples, 0.07%)</title><rect x="94.5374%" y="213" width="0.0683%" height="15" fill="rgb(222,18,33)" fg:x="2769" fg:w="2"/><text x="94.7874%" y="223.50"></text></g><g><title>web-server`core::fmt::write (1 samples, 0.03%)</title><rect x="94.5715%" y="197" width="0.0341%" height="15" fill="rgb(213,199,7)" fg:x="2770" fg:w="1"/><text x="94.8215%" y="207.50"></text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (1,944 samples, 66.37%)</title><rect x="28.2690%" y="277" width="66.3708%" height="15" fill="rgb(250,110,10)" fg:x="828" fg:w="1944"/><text x="28.5190%" y="287.50">web-server`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (1 samples, 0.03%)</title><rect x="94.6057%" y="261" width="0.0341%" height="15" fill="rgb(248,123,6)" fg:x="2771" fg:w="1"/><text x="94.8557%" y="271.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (3 samples, 0.10%)</title><rect x="94.6398%" y="261" width="0.1024%" height="15" fill="rgb(206,91,31)" fg:x="2772" fg:w="3"/><text x="94.8898%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.10%)</title><rect x="94.6398%" y="245" width="0.1024%" height="15" fill="rgb(211,154,13)" fg:x="2772" fg:w="3"/><text x="94.8898%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.10%)</title><rect x="94.6398%" y="229" width="0.1024%" height="15" fill="rgb(225,148,7)" fg:x="2772" fg:w="3"/><text x="94.8898%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.10%)</title><rect x="94.6398%" y="213" width="0.1024%" height="15" fill="rgb(220,160,43)" fg:x="2772" fg:w="3"/><text x="94.8898%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="94.7081%" y="197" width="0.0341%" height="15" fill="rgb(213,52,39)" fg:x="2774" fg:w="1"/><text x="94.9581%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.27%)</title><rect x="94.9812%" y="213" width="0.2731%" height="15" fill="rgb(243,137,7)" fg:x="2782" fg:w="8"/><text x="95.2312%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.27%)</title><rect x="94.9812%" y="197" width="0.2731%" height="15" fill="rgb(230,79,13)" fg:x="2782" fg:w="8"/><text x="95.2312%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.10%)</title><rect x="95.1519%" y="181" width="0.1024%" height="15" fill="rgb(247,105,23)" fg:x="2787" fg:w="3"/><text x="95.4019%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.07%)</title><rect x="95.1861%" y="165" width="0.0683%" height="15" fill="rgb(223,179,41)" fg:x="2788" fg:w="2"/><text x="95.4361%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.31%)</title><rect x="94.9812%" y="229" width="0.3073%" height="15" fill="rgb(218,9,34)" fg:x="2782" fg:w="9"/><text x="95.2312%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="95.2544%" y="213" width="0.0341%" height="15" fill="rgb(222,106,8)" fg:x="2790" fg:w="1"/><text x="95.5044%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.03%)</title><rect x="95.2885%" y="229" width="0.0341%" height="15" fill="rgb(211,220,0)" fg:x="2791" fg:w="1"/><text x="95.5385%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (2 samples, 0.07%)</title><rect x="95.3226%" y="229" width="0.0683%" height="15" fill="rgb(229,52,16)" fg:x="2792" fg:w="2"/><text x="95.5726%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.07%)</title><rect x="95.3909%" y="229" width="0.0683%" height="15" fill="rgb(212,155,18)" fg:x="2794" fg:w="2"/><text x="95.6409%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.03%)</title><rect x="95.4592%" y="229" width="0.0341%" height="15" fill="rgb(242,21,14)" fg:x="2796" fg:w="1"/><text x="95.7092%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (1 samples, 0.03%)</title><rect x="95.4592%" y="213" width="0.0341%" height="15" fill="rgb(222,19,48)" fg:x="2796" fg:w="1"/><text x="95.7092%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.03%)</title><rect x="95.4933%" y="229" width="0.0341%" height="15" fill="rgb(232,45,27)" fg:x="2797" fg:w="1"/><text x="95.7433%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.03%)</title><rect x="95.4933%" y="213" width="0.0341%" height="15" fill="rgb(249,103,42)" fg:x="2797" fg:w="1"/><text x="95.7433%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_allocate_and_initialize_for_key (22 samples, 0.75%)</title><rect x="94.8447%" y="245" width="0.7511%" height="15" fill="rgb(246,81,33)" fg:x="2778" fg:w="22"/><text x="95.0947%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.07%)</title><rect x="95.5275%" y="229" width="0.0683%" height="15" fill="rgb(252,33,42)" fg:x="2798" fg:w="2"/><text x="95.7775%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="95.5958%" y="245" width="0.0341%" height="15" fill="rgb(209,212,41)" fg:x="2800" fg:w="1"/><text x="95.8458%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (27 samples, 0.92%)</title><rect x="94.7422%" y="261" width="0.9218%" height="15" fill="rgb(207,154,6)" fg:x="2775" fg:w="27"/><text x="94.9922%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_setspecific (1 samples, 0.03%)</title><rect x="95.6299%" y="245" width="0.0341%" height="15" fill="rgb(223,64,47)" fg:x="2801" fg:w="1"/><text x="95.8799%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.07%)</title><rect x="95.7323%" y="213" width="0.0683%" height="15" fill="rgb(211,161,38)" fg:x="2804" fg:w="2"/><text x="95.9823%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.17%)</title><rect x="95.6640%" y="261" width="0.1707%" height="15" fill="rgb(219,138,40)" fg:x="2802" fg:w="5"/><text x="95.9140%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.17%)</title><rect x="95.6640%" y="245" width="0.1707%" height="15" fill="rgb(241,228,46)" fg:x="2802" fg:w="5"/><text x="95.9140%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.17%)</title><rect x="95.6640%" y="229" width="0.1707%" height="15" fill="rgb(223,209,38)" fg:x="2802" fg:w="5"/><text x="95.9140%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="95.8006%" y="213" width="0.0341%" height="15" fill="rgb(236,164,45)" fg:x="2806" fg:w="1"/><text x="96.0506%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="95.8006%" y="197" width="0.0341%" height="15" fill="rgb(231,15,5)" fg:x="2806" fg:w="1"/><text x="96.0506%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.03%)</title><rect x="95.8348%" y="261" width="0.0341%" height="15" fill="rgb(252,35,15)" fg:x="2807" fg:w="1"/><text x="96.0848%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.03%)</title><rect x="95.8689%" y="261" width="0.0341%" height="15" fill="rgb(248,181,18)" fg:x="2808" fg:w="1"/><text x="96.1189%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="95.9030%" y="245" width="0.0341%" height="15" fill="rgb(233,39,42)" fg:x="2809" fg:w="1"/><text x="96.1530%" y="255.50"></text></g><g><title>web-server`std::sys_common::thread_info::set (41 samples, 1.40%)</title><rect x="94.6398%" y="277" width="1.3998%" height="15" fill="rgb(238,110,33)" fg:x="2772" fg:w="41"/><text x="94.8898%" y="287.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.14%)</title><rect x="95.9030%" y="261" width="0.1366%" height="15" fill="rgb(233,195,10)" fg:x="2809" fg:w="4"/><text x="96.1530%" y="271.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (3 samples, 0.10%)</title><rect x="95.9372%" y="245" width="0.1024%" height="15" fill="rgb(254,105,3)" fg:x="2810" fg:w="3"/><text x="96.1872%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.10%)</title><rect x="95.9372%" y="229" width="0.1024%" height="15" fill="rgb(221,225,9)" fg:x="2810" fg:w="3"/><text x="96.1872%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.10%)</title><rect x="95.9372%" y="213" width="0.1024%" height="15" fill="rgb(224,227,45)" fg:x="2810" fg:w="3"/><text x="96.1872%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.10%)</title><rect x="95.9372%" y="197" width="0.1024%" height="15" fill="rgb(229,198,43)" fg:x="2810" fg:w="3"/><text x="96.1872%" y="207.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,998 samples, 68.21%)</title><rect x="27.8935%" y="293" width="68.2144%" height="15" fill="rgb(206,209,35)" fg:x="817" fg:w="1998"/><text x="28.1435%" y="303.50">web-server`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>web-server`std::thread::Thread::cname (2 samples, 0.07%)</title><rect x="96.0396%" y="277" width="0.0683%" height="15" fill="rgb(245,195,53)" fg:x="2813" fg:w="2"/><text x="96.2896%" y="287.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.03%)</title><rect x="97.2004%" y="277" width="0.0341%" height="15" fill="rgb(240,92,26)" fg:x="2847" fg:w="1"/><text x="97.4504%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (79 samples, 2.70%)</title><rect x="97.2346%" y="277" width="2.6972%" height="15" fill="rgb(207,40,23)" fg:x="2848" fg:w="79"/><text x="97.4846%" y="287.50">li..</text></g><g><title>web-server`std::sys::unix::stack_overflow::imp::make_handler (113 samples, 3.86%)</title><rect x="96.1079%" y="293" width="3.8580%" height="15" fill="rgb(223,111,35)" fg:x="2815" fg:w="113"/><text x="96.3579%" y="303.50">web-..</text></g><g><title>libsystem_kernel.dylib`mmap (1 samples, 0.03%)</title><rect x="99.9317%" y="277" width="0.0341%" height="15" fill="rgb(229,147,28)" fg:x="2927" fg:w="1"/><text x="100.1817%" y="287.50"></text></g><g><title>all (2,929 samples, 100%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(211,29,28)" fg:x="0" fg:w="2929"/><text x="0.2500%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (2,666 samples, 91.02%)</title><rect x="8.9792%" y="341" width="91.0208%" height="15" fill="rgb(228,72,33)" fg:x="263" fg:w="2666"/><text x="9.2292%" y="351.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (2,464 samples, 84.12%)</title><rect x="15.8757%" y="325" width="84.1243%" height="15" fill="rgb(205,214,31)" fg:x="465" fg:w="2464"/><text x="16.1257%" y="335.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (2,223 samples, 75.90%)</title><rect x="24.1038%" y="309" width="75.8962%" height="15" fill="rgb(224,111,15)" fg:x="706" fg:w="2223"/><text x="24.3538%" y="319.50">web-server`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="99.9659%" y="293" width="0.0341%" height="15" fill="rgb(253,21,26)" fg:x="2928" fg:w="1"/><text x="100.2159%" y="303.50"></text></g></svg></svg>