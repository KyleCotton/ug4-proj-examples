<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="374" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="357.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="357.00"> </text><svg id="frames" x="10" width="1180" total_samples="2606"><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (1 samples, 0.04%)</title><rect x="0.0000%" y="213" width="0.0384%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.15%)</title><rect x="0.1919%" y="197" width="0.1535%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="4"/><text x="0.4419%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.12%)</title><rect x="0.2302%" y="181" width="0.1151%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="3"/><text x="0.4802%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.12%)</title><rect x="0.2302%" y="165" width="0.1151%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="3"/><text x="0.4802%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="0.3070%" y="149" width="0.0384%" height="15" fill="rgb(208,68,35)" fg:x="8" fg:w="1"/><text x="0.5570%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__accept (85 samples, 3.26%)</title><rect x="0.7675%" y="165" width="3.2617%" height="15" fill="rgb(232,128,0)" fg:x="20" fg:w="85"/><text x="1.0175%" y="175.50">lib..</text></g><g><title>web-server`&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 3.99%)</title><rect x="0.3454%" y="197" width="3.9908%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="104"/><text x="0.5954%" y="207.50">web-..</text></g><g><title>web-server`std::net::tcp::TcpListener::accept (104 samples, 3.99%)</title><rect x="0.3454%" y="181" width="3.9908%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="104"/><text x="0.5954%" y="191.50">web-..</text></g><g><title>web-server`std::sys::unix::net::Socket::accept (8 samples, 0.31%)</title><rect x="4.0292%" y="165" width="0.3070%" height="15" fill="rgb(218,30,26)" fg:x="105" fg:w="8"/><text x="4.2792%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (8 samples, 0.31%)</title><rect x="4.0292%" y="149" width="0.3070%" height="15" fill="rgb(220,122,19)" fg:x="105" fg:w="8"/><text x="4.2792%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="4.3361%" y="181" width="0.0384%" height="15" fill="rgb(250,228,42)" fg:x="113" fg:w="1"/><text x="4.5861%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="4.4513%" y="165" width="0.0767%" height="15" fill="rgb(240,193,28)" fg:x="116" fg:w="2"/><text x="4.7013%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.08%)</title><rect x="4.4513%" y="149" width="0.0767%" height="15" fill="rgb(216,20,37)" fg:x="116" fg:w="2"/><text x="4.7013%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.08%)</title><rect x="4.4513%" y="133" width="0.0767%" height="15" fill="rgb(206,188,39)" fg:x="116" fg:w="2"/><text x="4.7013%" y="143.50"></text></g><g><title>0x1 (122 samples, 4.68%)</title><rect x="0.0000%" y="309" width="4.6815%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="122"/><text x="0.2500%" y="319.50">0x1</text></g><g><title>libdyld.dylib`start (122 samples, 4.68%)</title><rect x="0.0000%" y="293" width="4.6815%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="122"/><text x="0.2500%" y="303.50">libdy..</text></g><g><title>web-server`main (122 samples, 4.68%)</title><rect x="0.0000%" y="277" width="4.6815%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="122"/><text x="0.2500%" y="287.50">web-s..</text></g><g><title>web-server`std::rt::lang_start_internal (122 samples, 4.68%)</title><rect x="0.0000%" y="261" width="4.6815%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="122"/><text x="0.2500%" y="271.50">web-s..</text></g><g><title>web-server`std::rt::lang_start::_{{closure}} (122 samples, 4.68%)</title><rect x="0.0000%" y="245" width="4.6815%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="122"/><text x="0.2500%" y="255.50">web-s..</text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (122 samples, 4.68%)</title><rect x="0.0000%" y="229" width="4.6815%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="122"/><text x="0.2500%" y="239.50">web-s..</text></g><g><title>web-server`web_server::web_server::WebServer::start_with_separate_handler (121 samples, 4.64%)</title><rect x="0.0384%" y="213" width="4.6431%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="121"/><text x="0.2884%" y="223.50">web-s..</text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (9 samples, 0.35%)</title><rect x="4.3361%" y="197" width="0.3454%" height="15" fill="rgb(235,183,28)" fg:x="113" fg:w="9"/><text x="4.5861%" y="207.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (8 samples, 0.31%)</title><rect x="4.3745%" y="181" width="0.3070%" height="15" fill="rgb(221,5,38)" fg:x="114" fg:w="8"/><text x="4.6245%" y="191.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (4 samples, 0.15%)</title><rect x="4.5280%" y="165" width="0.1535%" height="15" fill="rgb(247,18,42)" fg:x="118" fg:w="4"/><text x="4.7780%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.15%)</title><rect x="4.5280%" y="149" width="0.1535%" height="15" fill="rgb(241,131,45)" fg:x="118" fg:w="4"/><text x="4.7780%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (196 samples, 7.52%)</title><rect x="4.6815%" y="309" width="7.5211%" height="15" fill="rgb(249,31,29)" fg:x="122" fg:w="196"/><text x="4.9315%" y="319.50">libsystem_..</text></g><g><title>libsystem_kernel.dylib`__thread_selfid (20 samples, 0.77%)</title><rect x="21.5656%" y="293" width="0.7675%" height="15" fill="rgb(225,111,53)" fg:x="562" fg:w="20"/><text x="21.8156%" y="303.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (1 samples, 0.04%)</title><rect x="22.4866%" y="277" width="0.0384%" height="15" fill="rgb(238,160,17)" fg:x="586" fg:w="1"/><text x="22.7366%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__disable_threadsignal (12 samples, 0.46%)</title><rect x="22.5249%" y="277" width="0.4605%" height="15" fill="rgb(214,148,48)" fg:x="587" fg:w="12"/><text x="22.7749%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (83 samples, 3.18%)</title><rect x="22.9854%" y="277" width="3.1850%" height="15" fill="rgb(232,36,49)" fg:x="599" fg:w="83"/><text x="23.2354%" y="287.50">lib..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (19 samples, 0.73%)</title><rect x="26.1704%" y="277" width="0.7291%" height="15" fill="rgb(209,103,24)" fg:x="682" fg:w="19"/><text x="26.4204%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$__disable_threadsignal (2 samples, 0.08%)</title><rect x="26.8995%" y="277" width="0.0767%" height="15" fill="rgb(229,88,8)" fg:x="701" fg:w="2"/><text x="27.1495%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_finalize (3 samples, 0.12%)</title><rect x="27.0146%" y="261" width="0.1151%" height="15" fill="rgb(213,181,19)" fg:x="704" fg:w="3"/><text x="27.2646%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_free (1 samples, 0.04%)</title><rect x="27.1297%" y="261" width="0.0384%" height="15" fill="rgb(254,191,54)" fg:x="707" fg:w="1"/><text x="27.3797%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.12%)</title><rect x="28.0890%" y="181" width="0.1151%" height="15" fill="rgb(241,83,37)" fg:x="732" fg:w="3"/><text x="28.3390%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.50%)</title><rect x="27.7437%" y="213" width="0.4988%" height="15" fill="rgb(233,36,39)" fg:x="723" fg:w="13"/><text x="27.9937%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.35%)</title><rect x="27.8972%" y="197" width="0.3454%" height="15" fill="rgb(226,3,54)" fg:x="727" fg:w="9"/><text x="28.1472%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="28.2041%" y="181" width="0.0384%" height="15" fill="rgb(245,192,40)" fg:x="735" fg:w="1"/><text x="28.4541%" y="191.50"></text></g><g><title>web-server`DYLD-STUB$$pthread_mutex_destroy (1 samples, 0.04%)</title><rect x="28.2425%" y="213" width="0.0384%" height="15" fill="rgb(238,167,29)" fg:x="736" fg:w="1"/><text x="28.4925%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.23%)</title><rect x="28.2809%" y="197" width="0.2302%" height="15" fill="rgb(232,182,51)" fg:x="737" fg:w="6"/><text x="28.5309%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.15%)</title><rect x="28.3576%" y="181" width="0.1535%" height="15" fill="rgb(231,60,39)" fg:x="739" fg:w="4"/><text x="28.6076%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.15%)</title><rect x="28.3576%" y="165" width="0.1535%" height="15" fill="rgb(208,69,12)" fg:x="739" fg:w="4"/><text x="28.6076%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="28.6262%" y="181" width="0.0384%" height="15" fill="rgb(235,93,37)" fg:x="746" fg:w="1"/><text x="28.8762%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.12%)</title><rect x="28.7414%" y="165" width="0.1151%" height="15" fill="rgb(213,116,39)" fg:x="749" fg:w="3"/><text x="28.9914%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.42%)</title><rect x="28.5111%" y="197" width="0.4221%" height="15" fill="rgb(222,207,29)" fg:x="743" fg:w="11"/><text x="28.7611%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.27%)</title><rect x="28.6646%" y="181" width="0.2686%" height="15" fill="rgb(206,96,30)" fg:x="747" fg:w="7"/><text x="28.9146%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.08%)</title><rect x="28.8565%" y="165" width="0.0767%" height="15" fill="rgb(218,138,4)" fg:x="752" fg:w="2"/><text x="29.1065%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__ulock_wake (1 samples, 0.04%)</title><rect x="28.9332%" y="197" width="0.0384%" height="15" fill="rgb(250,191,14)" fg:x="754" fg:w="1"/><text x="29.1832%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (1 samples, 0.04%)</title><rect x="28.9716%" y="197" width="0.0384%" height="15" fill="rgb(239,60,40)" fg:x="755" fg:w="1"/><text x="29.2216%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_finalize_list (38 samples, 1.46%)</title><rect x="27.6285%" y="245" width="1.4582%" height="15" fill="rgb(206,27,48)" fg:x="720" fg:w="38"/><text x="27.8785%" y="255.50"></text></g><g><title>web-server`std::sys::unix::thread_local_dtor::register_dtor::run_dtors (36 samples, 1.38%)</title><rect x="27.7053%" y="229" width="1.3814%" height="15" fill="rgb(225,35,8)" fg:x="722" fg:w="36"/><text x="27.9553%" y="239.50"></text></g><g><title>web-server`alloc::sync::Arc&lt;T&gt;::drop_slow (21 samples, 0.81%)</title><rect x="28.2809%" y="213" width="0.8058%" height="15" fill="rgb(250,213,24)" fg:x="737" fg:w="21"/><text x="28.5309%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (2 samples, 0.08%)</title><rect x="29.0100%" y="197" width="0.0767%" height="15" fill="rgb(247,123,22)" fg:x="756" fg:w="2"/><text x="29.2600%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.08%)</title><rect x="29.0867%" y="245" width="0.0767%" height="15" fill="rgb(231,138,38)" fg:x="758" fg:w="2"/><text x="29.3367%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.08%)</title><rect x="29.0867%" y="229" width="0.0767%" height="15" fill="rgb(231,145,46)" fg:x="758" fg:w="2"/><text x="29.3367%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.08%)</title><rect x="29.0867%" y="213" width="0.0767%" height="15" fill="rgb(251,118,11)" fg:x="758" fg:w="2"/><text x="29.3367%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.08%)</title><rect x="29.2402%" y="229" width="0.0767%" height="15" fill="rgb(217,147,25)" fg:x="762" fg:w="2"/><text x="29.4902%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="29.5088%" y="213" width="0.0384%" height="15" fill="rgb(247,81,37)" fg:x="769" fg:w="1"/><text x="29.7588%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.42%)</title><rect x="29.1635%" y="245" width="0.4221%" height="15" fill="rgb(209,12,38)" fg:x="760" fg:w="11"/><text x="29.4135%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.27%)</title><rect x="29.3170%" y="229" width="0.2686%" height="15" fill="rgb(227,1,9)" fg:x="764" fg:w="7"/><text x="29.5670%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="29.5472%" y="213" width="0.0384%" height="15" fill="rgb(248,47,43)" fg:x="770" fg:w="1"/><text x="29.7972%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="29.5856%" y="245" width="0.0384%" height="15" fill="rgb(221,10,30)" fg:x="771" fg:w="1"/><text x="29.8356%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (70 samples, 2.69%)</title><rect x="26.9762%" y="277" width="2.6861%" height="15" fill="rgb(210,229,1)" fg:x="703" fg:w="70"/><text x="27.2262%" y="287.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (65 samples, 2.49%)</title><rect x="27.1681%" y="261" width="2.4942%" height="15" fill="rgb(222,148,37)" fg:x="708" fg:w="65"/><text x="27.4181%" y="271.50">li..</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.04%)</title><rect x="29.6239%" y="245" width="0.0384%" height="15" fill="rgb(234,67,33)" fg:x="772" fg:w="1"/><text x="29.8739%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_setcancelstate_exit (1 samples, 0.04%)</title><rect x="29.6623%" y="277" width="0.0384%" height="15" fill="rgb(247,98,35)" fg:x="773" fg:w="1"/><text x="29.9123%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (111 samples, 4.26%)</title><rect x="29.7007%" y="245" width="4.2594%" height="15" fill="rgb(247,138,52)" fg:x="774" fg:w="111"/><text x="29.9507%" y="255.50">libsy..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (2 samples, 0.08%)</title><rect x="33.9601%" y="245" width="0.0767%" height="15" fill="rgb(213,79,30)" fg:x="885" fg:w="2"/><text x="34.2101%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="34.0752%" y="229" width="0.0384%" height="15" fill="rgb(246,177,23)" fg:x="888" fg:w="1"/><text x="34.3252%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_join$NOCANCEL (129 samples, 4.95%)</title><rect x="29.7007%" y="277" width="4.9501%" height="15" fill="rgb(230,62,27)" fg:x="774" fg:w="129"/><text x="29.9507%" y="287.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (129 samples, 4.95%)</title><rect x="29.7007%" y="261" width="4.9501%" height="15" fill="rgb(216,154,8)" fg:x="774" fg:w="129"/><text x="29.9507%" y="271.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (16 samples, 0.61%)</title><rect x="34.0368%" y="245" width="0.6140%" height="15" fill="rgb(244,35,45)" fg:x="887" fg:w="16"/><text x="34.2868%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mig_dealloc_reply_port (14 samples, 0.54%)</title><rect x="34.1136%" y="229" width="0.5372%" height="15" fill="rgb(251,115,12)" fg:x="889" fg:w="14"/><text x="34.3636%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (14 samples, 0.54%)</title><rect x="34.1136%" y="213" width="0.5372%" height="15" fill="rgb(240,54,50)" fg:x="889" fg:w="14"/><text x="34.3636%" y="223.50"></text></g><g><title>web-server`DYLD-STUB$$sysconf (1 samples, 0.04%)</title><rect x="34.6508%" y="277" width="0.0384%" height="15" fill="rgb(233,84,52)" fg:x="903" fg:w="1"/><text x="34.9008%" y="287.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.19%)</title><rect x="34.6892%" y="277" width="0.1919%" height="15" fill="rgb(207,117,47)" fg:x="904" fg:w="5"/><text x="34.9392%" y="287.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sigaltstack (2 samples, 0.08%)</title><rect x="34.9578%" y="261" width="0.0767%" height="15" fill="rgb(249,43,39)" fg:x="911" fg:w="2"/><text x="35.2078%" y="271.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (2 samples, 0.08%)</title><rect x="35.0345%" y="261" width="0.0767%" height="15" fill="rgb(209,38,44)" fg:x="913" fg:w="2"/><text x="35.2845%" y="271.50"></text></g><g><title>libsystem_c.dylib`sysconf (6 samples, 0.23%)</title><rect x="35.1113%" y="261" width="0.2302%" height="15" fill="rgb(236,212,23)" fg:x="915" fg:w="6"/><text x="35.3613%" y="271.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.04%)</title><rect x="35.3031%" y="245" width="0.0384%" height="15" fill="rgb(242,79,21)" fg:x="920" fg:w="1"/><text x="35.5531%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (65 samples, 2.49%)</title><rect x="35.3415%" y="261" width="2.4942%" height="15" fill="rgb(211,96,35)" fg:x="921" fg:w="65"/><text x="35.5915%" y="271.50">li..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (29 samples, 1.11%)</title><rect x="37.8358%" y="261" width="1.1128%" height="15" fill="rgb(253,215,40)" fg:x="986" fg:w="29"/><text x="38.0858%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mmap (1 samples, 0.04%)</title><rect x="38.9486%" y="261" width="0.0384%" height="15" fill="rgb(211,81,21)" fg:x="1015" fg:w="1"/><text x="39.1986%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`munmap (1 samples, 0.04%)</title><rect x="38.9870%" y="261" width="0.0384%" height="15" fill="rgb(208,190,38)" fg:x="1016" fg:w="1"/><text x="39.2370%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.15%)</title><rect x="39.0253%" y="261" width="0.1535%" height="15" fill="rgb(235,213,38)" fg:x="1017" fg:w="4"/><text x="39.2753%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.12%)</title><rect x="39.0637%" y="245" width="0.1151%" height="15" fill="rgb(237,122,38)" fg:x="1018" fg:w="3"/><text x="39.3137%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.08%)</title><rect x="39.1021%" y="229" width="0.0767%" height="15" fill="rgb(244,218,35)" fg:x="1019" fg:w="2"/><text x="39.3521%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.08%)</title><rect x="39.2556%" y="245" width="0.0767%" height="15" fill="rgb(240,68,47)" fg:x="1023" fg:w="2"/><text x="39.5056%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="39.4091%" y="229" width="0.0384%" height="15" fill="rgb(210,16,53)" fg:x="1027" fg:w="1"/><text x="39.6591%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.35%)</title><rect x="39.1788%" y="261" width="0.3454%" height="15" fill="rgb(235,124,12)" fg:x="1021" fg:w="9"/><text x="39.4288%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.19%)</title><rect x="39.3323%" y="245" width="0.1919%" height="15" fill="rgb(224,169,11)" fg:x="1025" fg:w="5"/><text x="39.5823%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.08%)</title><rect x="39.4474%" y="229" width="0.0767%" height="15" fill="rgb(250,166,2)" fg:x="1028" fg:w="2"/><text x="39.6974%" y="239.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.04%)</title><rect x="39.5242%" y="261" width="0.0384%" height="15" fill="rgb(242,216,29)" fg:x="1030" fg:w="1"/><text x="39.7742%" y="271.50"></text></g><g><title>web-server`DYLD-STUB$$mmap (2 samples, 0.08%)</title><rect x="39.5625%" y="261" width="0.0767%" height="15" fill="rgb(230,116,27)" fg:x="1031" fg:w="2"/><text x="39.8125%" y="271.50"></text></g><g><title>web-server`DYLD-STUB$$sysconf (1 samples, 0.04%)</title><rect x="39.6393%" y="261" width="0.0384%" height="15" fill="rgb(228,99,48)" fg:x="1033" fg:w="1"/><text x="39.8893%" y="271.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (3 samples, 0.12%)</title><rect x="39.7544%" y="245" width="0.1151%" height="15" fill="rgb(253,11,6)" fg:x="1036" fg:w="3"/><text x="40.0044%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.12%)</title><rect x="39.8695%" y="245" width="0.1151%" height="15" fill="rgb(247,143,39)" fg:x="1039" fg:w="3"/><text x="40.1195%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="39.9847%" y="245" width="0.0384%" height="15" fill="rgb(236,97,10)" fg:x="1042" fg:w="1"/><text x="40.2347%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.08%)</title><rect x="40.0230%" y="245" width="0.0767%" height="15" fill="rgb(233,208,19)" fg:x="1043" fg:w="2"/><text x="40.2730%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="40.0614%" y="229" width="0.0384%" height="15" fill="rgb(216,164,2)" fg:x="1044" fg:w="1"/><text x="40.3114%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (1 samples, 0.04%)</title><rect x="40.0998%" y="245" width="0.0384%" height="15" fill="rgb(220,129,5)" fg:x="1045" fg:w="1"/><text x="40.3498%" y="255.50"></text></g><g><title>web-server`__rust_alloc (1 samples, 0.04%)</title><rect x="40.1381%" y="245" width="0.0384%" height="15" fill="rgb(242,17,10)" fg:x="1046" fg:w="1"/><text x="40.3881%" y="255.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (2 samples, 0.08%)</title><rect x="40.1765%" y="245" width="0.0767%" height="15" fill="rgb(242,107,0)" fg:x="1047" fg:w="2"/><text x="40.4265%" y="255.50"></text></g><g><title>web-server`std::sys::unix::thread::guard::current (1 samples, 0.04%)</title><rect x="40.2533%" y="245" width="0.0384%" height="15" fill="rgb(251,28,31)" fg:x="1049" fg:w="1"/><text x="40.5033%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (1 samples, 0.04%)</title><rect x="40.2533%" y="229" width="0.0384%" height="15" fill="rgb(233,223,10)" fg:x="1049" fg:w="1"/><text x="40.5033%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (58 samples, 2.23%)</title><rect x="40.2916%" y="229" width="2.2256%" height="15" fill="rgb(215,21,27)" fg:x="1050" fg:w="58"/><text x="40.5416%" y="239.50">l..</text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.04%)</title><rect x="42.5173%" y="229" width="0.0384%" height="15" fill="rgb(232,23,21)" fg:x="1108" fg:w="1"/><text x="42.7673%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.19%)</title><rect x="42.5556%" y="229" width="0.1919%" height="15" fill="rgb(244,5,23)" fg:x="1109" fg:w="5"/><text x="42.8056%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.12%)</title><rect x="42.6324%" y="213" width="0.1151%" height="15" fill="rgb(226,81,46)" fg:x="1111" fg:w="3"/><text x="42.8824%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.12%)</title><rect x="42.6324%" y="197" width="0.1151%" height="15" fill="rgb(247,70,30)" fg:x="1111" fg:w="3"/><text x="42.8824%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.12%)</title><rect x="42.7859%" y="197" width="0.1151%" height="15" fill="rgb(212,68,19)" fg:x="1115" fg:w="3"/><text x="43.0359%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.19%)</title><rect x="42.7475%" y="229" width="0.1919%" height="15" fill="rgb(240,187,13)" fg:x="1114" fg:w="5"/><text x="42.9975%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.15%)</title><rect x="42.7859%" y="213" width="0.1535%" height="15" fill="rgb(223,113,26)" fg:x="1115" fg:w="4"/><text x="43.0359%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="42.9010%" y="197" width="0.0384%" height="15" fill="rgb(206,192,2)" fg:x="1118" fg:w="1"/><text x="43.1510%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="42.9394%" y="229" width="0.0384%" height="15" fill="rgb(241,108,4)" fg:x="1119" fg:w="1"/><text x="43.1894%" y="239.50"></text></g><g><title>web-server`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.04%)</title><rect x="42.9777%" y="229" width="0.0384%" height="15" fill="rgb(247,173,49)" fg:x="1120" fg:w="1"/><text x="43.2277%" y="239.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="43.0161%" y="197" width="0.0767%" height="15" fill="rgb(224,114,35)" fg:x="1121" fg:w="2"/><text x="43.2661%" y="207.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::unary::transform_send&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},web_server::request::Request&gt;::{{closure}}&gt; (3 samples, 0.12%)</title><rect x="43.0161%" y="229" width="0.1151%" height="15" fill="rgb(245,159,27)" fg:x="1121" fg:w="3"/><text x="43.2661%" y="239.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (3 samples, 0.12%)</title><rect x="43.0161%" y="213" width="0.1151%" height="15" fill="rgb(245,172,44)" fg:x="1121" fg:w="3"/><text x="43.2661%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (1 samples, 0.04%)</title><rect x="43.0929%" y="197" width="0.0384%" height="15" fill="rgb(236,23,11)" fg:x="1123" fg:w="1"/><text x="43.3429%" y="207.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (1 samples, 0.04%)</title><rect x="43.1312%" y="229" width="0.0384%" height="15" fill="rgb(205,117,38)" fg:x="1124" fg:w="1"/><text x="43.3812%" y="239.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="43.1312%" y="213" width="0.0384%" height="15" fill="rgb(237,72,25)" fg:x="1124" fg:w="1"/><text x="43.3812%" y="223.50"></text></g><g><title>web-server`core::slice::sort::recurse (1 samples, 0.04%)</title><rect x="43.1696%" y="229" width="0.0384%" height="15" fill="rgb(244,70,9)" fg:x="1125" fg:w="1"/><text x="43.4196%" y="239.50"></text></g><g><title>web-server`hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="43.2080%" y="229" width="0.0384%" height="15" fill="rgb(217,125,39)" fg:x="1126" fg:w="1"/><text x="43.4580%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.23%)</title><rect x="43.6301%" y="213" width="0.2302%" height="15" fill="rgb(235,36,10)" fg:x="1137" fg:w="6"/><text x="43.8801%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.23%)</title><rect x="43.6301%" y="197" width="0.2302%" height="15" fill="rgb(251,123,47)" fg:x="1137" fg:w="6"/><text x="43.8801%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.23%)</title><rect x="43.6301%" y="181" width="0.2302%" height="15" fill="rgb(221,13,13)" fg:x="1137" fg:w="6"/><text x="43.8801%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.19%)</title><rect x="43.6685%" y="165" width="0.1919%" height="15" fill="rgb(238,131,9)" fg:x="1138" fg:w="5"/><text x="43.9185%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="43.8219%" y="149" width="0.0384%" height="15" fill="rgb(211,50,8)" fg:x="1142" fg:w="1"/><text x="44.0719%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.04%)</title><rect x="43.8603%" y="213" width="0.0384%" height="15" fill="rgb(245,182,24)" fg:x="1143" fg:w="1"/><text x="44.1103%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.08%)</title><rect x="43.8987%" y="213" width="0.0767%" height="15" fill="rgb(242,14,37)" fg:x="1144" fg:w="2"/><text x="44.1487%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.08%)</title><rect x="43.8987%" y="197" width="0.0767%" height="15" fill="rgb(246,228,12)" fg:x="1144" fg:w="2"/><text x="44.1487%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.08%)</title><rect x="43.8987%" y="181" width="0.0767%" height="15" fill="rgb(213,55,15)" fg:x="1144" fg:w="2"/><text x="44.1487%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.12%)</title><rect x="43.9754%" y="213" width="0.1151%" height="15" fill="rgb(209,9,3)" fg:x="1146" fg:w="3"/><text x="44.2254%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.08%)</title><rect x="44.0138%" y="197" width="0.0767%" height="15" fill="rgb(230,59,30)" fg:x="1147" fg:w="2"/><text x="44.2638%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="44.0522%" y="181" width="0.0384%" height="15" fill="rgb(209,121,21)" fg:x="1148" fg:w="1"/><text x="44.3022%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (1 samples, 0.04%)</title><rect x="44.0906%" y="213" width="0.0384%" height="15" fill="rgb(220,109,13)" fg:x="1149" fg:w="1"/><text x="44.3406%" y="223.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (1 samples, 0.04%)</title><rect x="44.1289%" y="213" width="0.0384%" height="15" fill="rgb(232,18,1)" fg:x="1150" fg:w="1"/><text x="44.3789%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.15%)</title><rect x="44.3208%" y="165" width="0.1535%" height="15" fill="rgb(215,41,42)" fg:x="1155" fg:w="4"/><text x="44.5708%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.04%)</title><rect x="44.4359%" y="149" width="0.0384%" height="15" fill="rgb(224,123,36)" fg:x="1158" fg:w="1"/><text x="44.6859%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.19%)</title><rect x="44.3208%" y="197" width="0.1919%" height="15" fill="rgb(240,125,3)" fg:x="1155" fg:w="5"/><text x="44.5708%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.19%)</title><rect x="44.3208%" y="181" width="0.1919%" height="15" fill="rgb(205,98,50)" fg:x="1155" fg:w="5"/><text x="44.5708%" y="191.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.04%)</title><rect x="44.4743%" y="165" width="0.0384%" height="15" fill="rgb(205,185,37)" fg:x="1159" fg:w="1"/><text x="44.7243%" y="175.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.65%)</title><rect x="44.1673%" y="213" width="0.6523%" height="15" fill="rgb(238,207,15)" fg:x="1151" fg:w="17"/><text x="44.4173%" y="223.50"></text></g><g><title>web-server`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.31%)</title><rect x="44.5127%" y="197" width="0.3070%" height="15" fill="rgb(213,199,42)" fg:x="1160" fg:w="8"/><text x="44.7627%" y="207.50"></text></g><g><title>web-server`hashbrown::map::make_hash (3 samples, 0.12%)</title><rect x="44.7045%" y="181" width="0.1151%" height="15" fill="rgb(235,201,11)" fg:x="1165" fg:w="3"/><text x="44.9545%" y="191.50"></text></g><g><title>web-server`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="44.7813%" y="165" width="0.0384%" height="15" fill="rgb(207,46,11)" fg:x="1167" fg:w="1"/><text x="45.0313%" y="175.50"></text></g><g><title>web-server`hashbrown::map::make_hash (5 samples, 0.19%)</title><rect x="44.8196%" y="213" width="0.1919%" height="15" fill="rgb(241,35,35)" fg:x="1168" fg:w="5"/><text x="45.0696%" y="223.50"></text></g><g><title>web-server`hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="45.0115%" y="213" width="0.0384%" height="15" fill="rgb(243,32,47)" fg:x="1173" fg:w="1"/><text x="45.2615%" y="223.50"></text></g><g><title>web-server`rusty_junctions::bag::Bag&lt;K,V&gt;::add (11 samples, 0.42%)</title><rect x="45.0499%" y="213" width="0.4221%" height="15" fill="rgb(247,202,23)" fg:x="1174" fg:w="11"/><text x="45.2999%" y="223.50"></text></g><g><title>web-server`hashbrown::map::make_hash (11 samples, 0.42%)</title><rect x="45.0499%" y="197" width="0.4221%" height="15" fill="rgb(219,102,11)" fg:x="1174" fg:w="11"/><text x="45.2999%" y="207.50"></text></g><g><title>web-server`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="45.4336%" y="181" width="0.0384%" height="15" fill="rgb(243,110,44)" fg:x="1184" fg:w="1"/><text x="45.6836%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (1 samples, 0.04%)</title><rect x="45.4720%" y="197" width="0.0384%" height="15" fill="rgb(222,74,54)" fg:x="1185" fg:w="1"/><text x="45.7220%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="45.5104%" y="181" width="0.0767%" height="15" fill="rgb(216,99,12)" fg:x="1186" fg:w="2"/><text x="45.7604%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="45.5487%" y="165" width="0.0384%" height="15" fill="rgb(226,22,26)" fg:x="1187" fg:w="1"/><text x="45.7987%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="45.5487%" y="149" width="0.0384%" height="15" fill="rgb(217,163,10)" fg:x="1187" fg:w="1"/><text x="45.7987%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.04%)</title><rect x="45.5871%" y="181" width="0.0384%" height="15" fill="rgb(213,25,53)" fg:x="1188" fg:w="1"/><text x="45.8371%" y="191.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::binary::FnBoxClone&gt;::clone_box (4 samples, 0.15%)</title><rect x="45.5104%" y="197" width="0.1535%" height="15" fill="rgb(252,105,26)" fg:x="1186" fg:w="4"/><text x="45.7604%" y="207.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="45.6255%" y="181" width="0.0384%" height="15" fill="rgb(220,39,43)" fg:x="1189" fg:w="1"/><text x="45.8755%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="45.7022%" y="133" width="0.0384%" height="15" fill="rgb(229,68,48)" fg:x="1191" fg:w="1"/><text x="45.9522%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.12%)</title><rect x="45.6639%" y="181" width="0.1151%" height="15" fill="rgb(252,8,32)" fg:x="1190" fg:w="3"/><text x="45.9139%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.12%)</title><rect x="45.6639%" y="165" width="0.1151%" height="15" fill="rgb(223,20,43)" fg:x="1190" fg:w="3"/><text x="45.9139%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.12%)</title><rect x="45.6639%" y="149" width="0.1151%" height="15" fill="rgb(229,81,49)" fg:x="1190" fg:w="3"/><text x="45.9139%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="45.7406%" y="133" width="0.0384%" height="15" fill="rgb(236,28,36)" fg:x="1192" fg:w="1"/><text x="45.9906%" y="143.50"></text></g><g><title>web-server`DYLD-STUB$$pthread_attr_destroy (1 samples, 0.04%)</title><rect x="45.7790%" y="181" width="0.0384%" height="15" fill="rgb(249,185,26)" fg:x="1193" fg:w="1"/><text x="46.0290%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (56 samples, 2.15%)</title><rect x="45.8173%" y="165" width="2.1489%" height="15" fill="rgb(249,174,33)" fg:x="1194" fg:w="56"/><text x="46.0673%" y="175.50">l..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="47.9662%" y="165" width="0.0384%" height="15" fill="rgb(233,201,37)" fg:x="1250" fg:w="1"/><text x="48.2162%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="47.9662%" y="149" width="0.0384%" height="15" fill="rgb(221,78,26)" fg:x="1250" fg:w="1"/><text x="48.2162%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="47.9662%" y="133" width="0.0384%" height="15" fill="rgb(250,127,30)" fg:x="1250" fg:w="1"/><text x="48.2162%" y="143.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_no_tsd (1 samples, 0.04%)</title><rect x="48.0046%" y="165" width="0.0384%" height="15" fill="rgb(230,49,44)" fg:x="1251" fg:w="1"/><text x="48.2546%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (31 samples, 1.19%)</title><rect x="49.7314%" y="149" width="1.1896%" height="15" fill="rgb(229,67,23)" fg:x="1296" fg:w="31"/><text x="49.9814%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (22 samples, 0.84%)</title><rect x="50.9210%" y="149" width="0.8442%" height="15" fill="rgb(249,83,47)" fg:x="1327" fg:w="22"/><text x="51.1710%" y="159.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (156 samples, 5.99%)</title><rect x="45.8173%" y="181" width="5.9862%" height="15" fill="rgb(215,43,3)" fg:x="1194" fg:w="156"/><text x="46.0673%" y="191.50">web-serv..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (98 samples, 3.76%)</title><rect x="48.0430%" y="165" width="3.7606%" height="15" fill="rgb(238,154,13)" fg:x="1252" fg:w="98"/><text x="48.2930%" y="175.50">libs..</text></g><g><title>libsystem_kernel.dylib`mach_vm_protect (1 samples, 0.04%)</title><rect x="51.7652%" y="149" width="0.0384%" height="15" fill="rgb(219,56,2)" fg:x="1349" fg:w="1"/><text x="52.0152%" y="159.50"></text></g><g><title>web-server`std::sys_common::thread::min_stack (1 samples, 0.04%)</title><rect x="51.8035%" y="181" width="0.0384%" height="15" fill="rgb(233,0,4)" fg:x="1350" fg:w="1"/><text x="52.0535%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="51.8803%" y="165" width="0.0767%" height="15" fill="rgb(235,30,7)" fg:x="1352" fg:w="2"/><text x="52.1303%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.08%)</title><rect x="51.8803%" y="149" width="0.0767%" height="15" fill="rgb(250,79,13)" fg:x="1352" fg:w="2"/><text x="52.1303%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.08%)</title><rect x="51.8803%" y="133" width="0.0767%" height="15" fill="rgb(211,146,34)" fg:x="1352" fg:w="2"/><text x="52.1303%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="51.9186%" y="117" width="0.0384%" height="15" fill="rgb(228,22,38)" fg:x="1353" fg:w="1"/><text x="52.1686%" y="127.50"></text></g><g><title>web-server`rusty_junctions::patterns::binary::SendJoinPattern::fire (171 samples, 6.56%)</title><rect x="45.4720%" y="213" width="6.5618%" height="15" fill="rgb(235,168,5)" fg:x="1185" fg:w="171"/><text x="45.7220%" y="223.50">web-serve..</text></g><g><title>web-server`std::thread::spawn (166 samples, 6.37%)</title><rect x="45.6639%" y="197" width="6.3699%" height="15" fill="rgb(221,155,16)" fg:x="1190" fg:w="166"/><text x="45.9139%" y="207.50">web-serv..</text></g><g><title>web-server`std::thread::Thread::new (5 samples, 0.19%)</title><rect x="51.8419%" y="181" width="0.1919%" height="15" fill="rgb(215,215,53)" fg:x="1351" fg:w="5"/><text x="52.0919%" y="191.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (2 samples, 0.08%)</title><rect x="51.9570%" y="165" width="0.0767%" height="15" fill="rgb(223,4,10)" fg:x="1354" fg:w="2"/><text x="52.2070%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="51.9954%" y="149" width="0.0384%" height="15" fill="rgb(234,103,6)" fg:x="1355" fg:w="1"/><text x="52.2454%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="51.9954%" y="133" width="0.0384%" height="15" fill="rgb(227,97,0)" fg:x="1355" fg:w="1"/><text x="52.2454%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="51.9954%" y="117" width="0.0384%" height="15" fill="rgb(234,150,53)" fg:x="1355" fg:w="1"/><text x="52.2454%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (2 samples, 0.08%)</title><rect x="52.1105%" y="197" width="0.0767%" height="15" fill="rgb(228,201,54)" fg:x="1358" fg:w="2"/><text x="52.3605%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="52.1489%" y="181" width="0.0384%" height="15" fill="rgb(222,22,37)" fg:x="1359" fg:w="1"/><text x="52.3989%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="52.2640%" y="133" width="0.0384%" height="15" fill="rgb(237,53,32)" fg:x="1362" fg:w="1"/><text x="52.5140%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.15%)</title><rect x="52.1873%" y="181" width="0.1535%" height="15" fill="rgb(233,25,53)" fg:x="1360" fg:w="4"/><text x="52.4373%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.15%)</title><rect x="52.1873%" y="165" width="0.1535%" height="15" fill="rgb(210,40,34)" fg:x="1360" fg:w="4"/><text x="52.4373%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.15%)</title><rect x="52.1873%" y="149" width="0.1535%" height="15" fill="rgb(241,220,44)" fg:x="1360" fg:w="4"/><text x="52.4373%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="52.3024%" y="133" width="0.0384%" height="15" fill="rgb(235,28,35)" fg:x="1363" fg:w="1"/><text x="52.5524%" y="143.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (5 samples, 0.19%)</title><rect x="52.1873%" y="197" width="0.1919%" height="15" fill="rgb(210,56,17)" fg:x="1360" fg:w="5"/><text x="52.4373%" y="207.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="52.3408%" y="181" width="0.0384%" height="15" fill="rgb(224,130,29)" fg:x="1364" fg:w="1"/><text x="52.5908%" y="191.50"></text></g><g><title>web-server`__rust_alloc (1 samples, 0.04%)</title><rect x="52.3791%" y="197" width="0.0384%" height="15" fill="rgb(235,212,8)" fg:x="1365" fg:w="1"/><text x="52.6291%" y="207.50"></text></g><g><title>web-server`std::io::stdio::set_output_capture (2 samples, 0.08%)</title><rect x="52.4175%" y="197" width="0.0767%" height="15" fill="rgb(223,33,50)" fg:x="1366" fg:w="2"/><text x="52.6675%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="52.6094%" y="133" width="0.0384%" height="15" fill="rgb(219,149,13)" fg:x="1371" fg:w="1"/><text x="52.8594%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.15%)</title><rect x="52.5326%" y="181" width="0.1535%" height="15" fill="rgb(250,156,29)" fg:x="1369" fg:w="4"/><text x="52.7826%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.15%)</title><rect x="52.5326%" y="165" width="0.1535%" height="15" fill="rgb(216,193,19)" fg:x="1369" fg:w="4"/><text x="52.7826%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.15%)</title><rect x="52.5326%" y="149" width="0.1535%" height="15" fill="rgb(216,135,14)" fg:x="1369" fg:w="4"/><text x="52.7826%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="52.6477%" y="133" width="0.0384%" height="15" fill="rgb(241,47,5)" fg:x="1372" fg:w="1"/><text x="52.8977%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_destroy (1 samples, 0.04%)</title><rect x="52.6861%" y="181" width="0.0384%" height="15" fill="rgb(233,42,35)" fg:x="1373" fg:w="1"/><text x="52.9361%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="52.7245%" y="181" width="0.0384%" height="15" fill="rgb(231,13,6)" fg:x="1374" fg:w="1"/><text x="52.9745%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (94 samples, 3.61%)</title><rect x="52.8012%" y="165" width="3.6071%" height="15" fill="rgb(207,181,40)" fg:x="1376" fg:w="94"/><text x="53.0512%" y="175.50">libs..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="56.4083%" y="165" width="0.0384%" height="15" fill="rgb(254,173,49)" fg:x="1470" fg:w="1"/><text x="56.6583%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="56.4083%" y="149" width="0.0384%" height="15" fill="rgb(221,1,38)" fg:x="1470" fg:w="1"/><text x="56.6583%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="56.4083%" y="133" width="0.0384%" height="15" fill="rgb(206,124,46)" fg:x="1470" fg:w="1"/><text x="56.6583%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="56.4083%" y="117" width="0.0384%" height="15" fill="rgb(249,21,11)" fg:x="1470" fg:w="1"/><text x="56.6583%" y="127.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_no_tsd (1 samples, 0.04%)</title><rect x="56.4467%" y="165" width="0.0384%" height="15" fill="rgb(222,201,40)" fg:x="1471" fg:w="1"/><text x="56.6967%" y="175.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock_no_tsd (1 samples, 0.04%)</title><rect x="56.4850%" y="165" width="0.0384%" height="15" fill="rgb(235,61,29)" fg:x="1472" fg:w="1"/><text x="56.7350%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (66 samples, 2.53%)</title><rect x="59.6316%" y="149" width="2.5326%" height="15" fill="rgb(219,207,3)" fg:x="1554" fg:w="66"/><text x="59.8816%" y="159.50">li..</text></g><g><title>web-server`std::sys::unix::thread::Thread::new (284 samples, 10.90%)</title><rect x="52.7629%" y="181" width="10.8979%" height="15" fill="rgb(222,56,46)" fg:x="1375" fg:w="284"/><text x="53.0129%" y="191.50">web-server`std::..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (186 samples, 7.14%)</title><rect x="56.5234%" y="165" width="7.1374%" height="15" fill="rgb(239,76,54)" fg:x="1473" fg:w="186"/><text x="56.7734%" y="175.50">libsystem_..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (39 samples, 1.50%)</title><rect x="62.1642%" y="149" width="1.4965%" height="15" fill="rgb(231,124,27)" fg:x="1620" fg:w="39"/><text x="62.4142%" y="159.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (1 samples, 0.04%)</title><rect x="63.6608%" y="181" width="0.0384%" height="15" fill="rgb(249,195,6)" fg:x="1659" fg:w="1"/><text x="63.9108%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.23%)</title><rect x="63.7375%" y="165" width="0.2302%" height="15" fill="rgb(237,174,47)" fg:x="1661" fg:w="6"/><text x="63.9875%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.19%)</title><rect x="63.7759%" y="149" width="0.1919%" height="15" fill="rgb(206,201,31)" fg:x="1662" fg:w="5"/><text x="64.0259%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.19%)</title><rect x="63.7759%" y="133" width="0.1919%" height="15" fill="rgb(231,57,52)" fg:x="1662" fg:w="5"/><text x="64.0259%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.08%)</title><rect x="63.8910%" y="117" width="0.0767%" height="15" fill="rgb(248,177,22)" fg:x="1665" fg:w="2"/><text x="64.1410%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (1 samples, 0.04%)</title><rect x="63.9678%" y="165" width="0.0384%" height="15" fill="rgb(215,211,37)" fg:x="1667" fg:w="1"/><text x="64.2178%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.08%)</title><rect x="64.0061%" y="165" width="0.0767%" height="15" fill="rgb(241,128,51)" fg:x="1668" fg:w="2"/><text x="64.2561%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutexattr_init (1 samples, 0.04%)</title><rect x="64.0829%" y="165" width="0.0384%" height="15" fill="rgb(227,165,31)" fg:x="1670" fg:w="1"/><text x="64.3329%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="64.1596%" y="101" width="0.0384%" height="15" fill="rgb(228,167,24)" fg:x="1672" fg:w="1"/><text x="64.4096%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.12%)</title><rect x="64.1213%" y="149" width="0.1151%" height="15" fill="rgb(228,143,12)" fg:x="1671" fg:w="3"/><text x="64.3713%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.12%)</title><rect x="64.1213%" y="133" width="0.1151%" height="15" fill="rgb(249,149,8)" fg:x="1671" fg:w="3"/><text x="64.3713%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.12%)</title><rect x="64.1213%" y="117" width="0.1151%" height="15" fill="rgb(243,35,44)" fg:x="1671" fg:w="3"/><text x="64.3713%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="64.1980%" y="101" width="0.0384%" height="15" fill="rgb(246,89,9)" fg:x="1673" fg:w="1"/><text x="64.4480%" y="111.50"></text></g><g><title>web-server`rusty_junctions::patterns::unary::SendJoinPattern::fire (319 samples, 12.24%)</title><rect x="52.0338%" y="213" width="12.2410%" height="15" fill="rgb(233,213,13)" fg:x="1356" fg:w="319"/><text x="52.2838%" y="223.50">web-server`rusty_j..</text></g><g><title>web-server`std::thread::spawn (307 samples, 11.78%)</title><rect x="52.4942%" y="197" width="11.7805%" height="15" fill="rgb(233,141,41)" fg:x="1368" fg:w="307"/><text x="52.7442%" y="207.50">web-server`std::t..</text></g><g><title>web-server`std::thread::Thread::new (15 samples, 0.58%)</title><rect x="63.6992%" y="181" width="0.5756%" height="15" fill="rgb(239,167,4)" fg:x="1660" fg:w="15"/><text x="63.9492%" y="191.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (4 samples, 0.15%)</title><rect x="64.1213%" y="165" width="0.1535%" height="15" fill="rgb(209,217,16)" fg:x="1671" fg:w="4"/><text x="64.3713%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.04%)</title><rect x="64.2364%" y="149" width="0.0384%" height="15" fill="rgb(219,88,35)" fg:x="1674" fg:w="1"/><text x="64.4864%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.04%)</title><rect x="64.3515%" y="181" width="0.0384%" height="15" fill="rgb(220,193,23)" fg:x="1677" fg:w="1"/><text x="64.6015%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.08%)</title><rect x="64.4666%" y="165" width="0.0767%" height="15" fill="rgb(230,90,52)" fg:x="1680" fg:w="2"/><text x="64.7166%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="64.5050%" y="149" width="0.0384%" height="15" fill="rgb(252,106,19)" fg:x="1681" fg:w="1"/><text x="64.7550%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="64.5050%" y="133" width="0.0384%" height="15" fill="rgb(206,74,20)" fg:x="1681" fg:w="1"/><text x="64.7550%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.15%)</title><rect x="64.5434%" y="165" width="0.1535%" height="15" fill="rgb(230,138,44)" fg:x="1682" fg:w="4"/><text x="64.7934%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.12%)</title><rect x="64.5817%" y="149" width="0.1151%" height="15" fill="rgb(235,182,43)" fg:x="1683" fg:w="3"/><text x="64.8317%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="64.6585%" y="133" width="0.0384%" height="15" fill="rgb(242,16,51)" fg:x="1685" fg:w="1"/><text x="64.9085%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="64.6969%" y="165" width="0.0384%" height="15" fill="rgb(248,9,4)" fg:x="1686" fg:w="1"/><text x="64.9469%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.08%)</title><rect x="64.7352%" y="165" width="0.0767%" height="15" fill="rgb(210,31,22)" fg:x="1687" fg:w="2"/><text x="64.9852%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.04%)</title><rect x="64.8503%" y="149" width="0.0384%" height="15" fill="rgb(239,54,39)" fg:x="1690" fg:w="1"/><text x="65.1003%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (65 samples, 2.49%)</title><rect x="64.8887%" y="149" width="2.4942%" height="15" fill="rgb(230,99,41)" fg:x="1691" fg:w="65"/><text x="65.1387%" y="159.50">li..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="67.5365%" y="133" width="0.0384%" height="15" fill="rgb(253,106,12)" fg:x="1760" fg:w="1"/><text x="67.7865%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (7 samples, 0.27%)</title><rect x="67.3830%" y="149" width="0.2686%" height="15" fill="rgb(213,46,41)" fg:x="1756" fg:w="7"/><text x="67.6330%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (2 samples, 0.08%)</title><rect x="67.5748%" y="133" width="0.0767%" height="15" fill="rgb(215,133,35)" fg:x="1761" fg:w="2"/><text x="67.8248%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="67.6516%" y="149" width="0.0384%" height="15" fill="rgb(213,28,5)" fg:x="1763" fg:w="1"/><text x="67.9016%" y="159.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::WaitToken::wait (87 samples, 3.34%)</title><rect x="64.3899%" y="181" width="3.3384%" height="15" fill="rgb(215,77,49)" fg:x="1678" fg:w="87"/><text x="64.6399%" y="191.50">web..</text></g><g><title>web-server`std::thread::park (76 samples, 2.92%)</title><rect x="64.8120%" y="165" width="2.9163%" height="15" fill="rgb(248,100,22)" fg:x="1689" fg:w="76"/><text x="65.0620%" y="175.50">we..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.04%)</title><rect x="67.6899%" y="149" width="0.0384%" height="15" fill="rgb(208,67,9)" fg:x="1764" fg:w="1"/><text x="67.9399%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.04%)</title><rect x="67.7283%" y="165" width="0.0384%" height="15" fill="rgb(219,133,21)" fg:x="1765" fg:w="1"/><text x="67.9783%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.19%)</title><rect x="67.7667%" y="165" width="0.1919%" height="15" fill="rgb(246,46,29)" fg:x="1766" fg:w="5"/><text x="68.0167%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.19%)</title><rect x="67.7667%" y="149" width="0.1919%" height="15" fill="rgb(246,185,52)" fg:x="1766" fg:w="5"/><text x="68.0167%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.19%)</title><rect x="67.7667%" y="133" width="0.1919%" height="15" fill="rgb(252,136,11)" fg:x="1766" fg:w="5"/><text x="68.0167%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.08%)</title><rect x="67.8818%" y="117" width="0.0767%" height="15" fill="rgb(219,138,53)" fg:x="1769" fg:w="2"/><text x="68.1318%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="67.9202%" y="101" width="0.0384%" height="15" fill="rgb(211,51,23)" fg:x="1770" fg:w="1"/><text x="68.1702%" y="111.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::tokens (7 samples, 0.27%)</title><rect x="67.7283%" y="181" width="0.2686%" height="15" fill="rgb(247,221,28)" fg:x="1765" fg:w="7"/><text x="67.9783%" y="191.50"></text></g><g><title>web-server`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="67.9586%" y="165" width="0.0384%" height="15" fill="rgb(251,222,45)" fg:x="1771" fg:w="1"/><text x="68.2086%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.12%)</title><rect x="68.3039%" y="149" width="0.1151%" height="15" fill="rgb(217,162,53)" fg:x="1780" fg:w="3"/><text x="68.5539%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.12%)</title><rect x="68.3039%" y="133" width="0.1151%" height="15" fill="rgb(229,93,14)" fg:x="1780" fg:w="3"/><text x="68.5539%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.12%)</title><rect x="68.3039%" y="117" width="0.1151%" height="15" fill="rgb(209,67,49)" fg:x="1780" fg:w="3"/><text x="68.5539%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.12%)</title><rect x="68.5725%" y="133" width="0.1151%" height="15" fill="rgb(213,87,29)" fg:x="1787" fg:w="3"/><text x="68.8225%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="68.6876%" y="117" width="0.0384%" height="15" fill="rgb(205,151,52)" fg:x="1790" fg:w="1"/><text x="68.9376%" y="127.50"></text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (117 samples, 4.49%)</title><rect x="64.2748%" y="213" width="4.4896%" height="15" fill="rgb(253,215,39)" fg:x="1675" fg:w="117"/><text x="64.5248%" y="223.50">web-s..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (116 samples, 4.45%)</title><rect x="64.3131%" y="197" width="4.4513%" height="15" fill="rgb(221,220,41)" fg:x="1676" fg:w="116"/><text x="64.5631%" y="207.50">web-s..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (20 samples, 0.77%)</title><rect x="67.9969%" y="181" width="0.7675%" height="15" fill="rgb(218,133,21)" fg:x="1772" fg:w="20"/><text x="68.2469%" y="191.50"></text></g><g><title>web-server`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (18 samples, 0.69%)</title><rect x="68.0737%" y="165" width="0.6907%" height="15" fill="rgb(221,193,43)" fg:x="1774" fg:w="18"/><text x="68.3237%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.35%)</title><rect x="68.4190%" y="149" width="0.3454%" height="15" fill="rgb(240,128,52)" fg:x="1783" fg:w="9"/><text x="68.6690%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.08%)</title><rect x="68.6876%" y="133" width="0.0767%" height="15" fill="rgb(253,114,12)" fg:x="1790" fg:w="2"/><text x="68.9376%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="68.7260%" y="117" width="0.0384%" height="15" fill="rgb(215,223,47)" fg:x="1791" fg:w="1"/><text x="68.9760%" y="127.50"></text></g><g><title>web-server`rusty_junctions::controller::Controller::handle_packets (666 samples, 25.56%)</title><rect x="43.2464%" y="229" width="25.5564%" height="15" fill="rgb(248,225,23)" fg:x="1127" fg:w="666"/><text x="43.4964%" y="239.50">web-server`rusty_junctions::controller::C..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (1 samples, 0.04%)</title><rect x="68.7644%" y="213" width="0.0384%" height="15" fill="rgb(250,108,0)" fg:x="1792" fg:w="1"/><text x="69.0144%" y="223.50"></text></g><g><title>libsystem_c.dylib`nanosleep (1 samples, 0.04%)</title><rect x="69.0330%" y="213" width="0.0384%" height="15" fill="rgb(228,208,7)" fg:x="1799" fg:w="1"/><text x="69.2830%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.23%)</title><rect x="69.0714%" y="213" width="0.2302%" height="15" fill="rgb(244,45,10)" fg:x="1800" fg:w="6"/><text x="69.3214%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.19%)</title><rect x="69.1097%" y="197" width="0.1919%" height="15" fill="rgb(207,125,25)" fg:x="1801" fg:w="5"/><text x="69.3597%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.19%)</title><rect x="69.1097%" y="181" width="0.1919%" height="15" fill="rgb(210,195,18)" fg:x="1801" fg:w="5"/><text x="69.3597%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.04%)</title><rect x="69.3016%" y="213" width="0.0384%" height="15" fill="rgb(249,80,12)" fg:x="1806" fg:w="1"/><text x="69.5516%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="69.3400%" y="213" width="0.0384%" height="15" fill="rgb(221,65,9)" fg:x="1807" fg:w="1"/><text x="69.5900%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (1 samples, 0.04%)</title><rect x="69.4167%" y="197" width="0.0384%" height="15" fill="rgb(235,49,36)" fg:x="1809" fg:w="1"/><text x="69.6667%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (10 samples, 0.38%)</title><rect x="69.4935%" y="165" width="0.3837%" height="15" fill="rgb(225,32,20)" fg:x="1811" fg:w="10"/><text x="69.7435%" y="175.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (14 samples, 0.54%)</title><rect x="69.3784%" y="213" width="0.5372%" height="15" fill="rgb(215,141,46)" fg:x="1808" fg:w="14"/><text x="69.6284%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (12 samples, 0.46%)</title><rect x="69.4551%" y="197" width="0.4605%" height="15" fill="rgb(250,160,47)" fg:x="1810" fg:w="12"/><text x="69.7051%" y="207.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (11 samples, 0.42%)</title><rect x="69.4935%" y="181" width="0.4221%" height="15" fill="rgb(216,222,40)" fg:x="1811" fg:w="11"/><text x="69.7435%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.04%)</title><rect x="69.8772%" y="165" width="0.0384%" height="15" fill="rgb(234,217,39)" fg:x="1821" fg:w="1"/><text x="70.1272%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (1 samples, 0.04%)</title><rect x="69.8772%" y="149" width="0.0384%" height="15" fill="rgb(207,178,40)" fg:x="1821" fg:w="1"/><text x="70.1272%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (29 samples, 1.11%)</title><rect x="70.0691%" y="165" width="1.1128%" height="15" fill="rgb(221,136,13)" fg:x="1826" fg:w="29"/><text x="70.3191%" y="175.50"></text></g><g><title>libsystem_c.dylib`nanosleep (49 samples, 1.88%)</title><rect x="69.9923%" y="197" width="1.8803%" height="15" fill="rgb(249,199,10)" fg:x="1824" fg:w="49"/><text x="70.2423%" y="207.50">l..</text></g><g><title>libsystem_kernel.dylib`clock_get_time (48 samples, 1.84%)</title><rect x="70.0307%" y="181" width="1.8419%" height="15" fill="rgb(249,222,13)" fg:x="1825" fg:w="48"/><text x="70.2807%" y="191.50">l..</text></g><g><title>libsystem_kernel.dylib`mach_reply_port (18 samples, 0.69%)</title><rect x="71.1819%" y="165" width="0.6907%" height="15" fill="rgb(244,185,38)" fg:x="1855" fg:w="18"/><text x="71.4319%" y="175.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::binary::transform_send::_{{closure}} (115 samples, 4.41%)</title><rect x="68.8028%" y="229" width="4.4129%" height="15" fill="rgb(236,202,9)" fg:x="1793" fg:w="115"/><text x="69.0528%" y="239.50">web-s..</text></g><g><title>web-server`std::thread::sleep (86 samples, 3.30%)</title><rect x="69.9156%" y="213" width="3.3001%" height="15" fill="rgb(250,229,37)" fg:x="1822" fg:w="86"/><text x="70.1656%" y="223.50">web..</text></g><g><title>libsystem_kernel.dylib`__semwait_signal (35 samples, 1.34%)</title><rect x="71.8726%" y="197" width="1.3431%" height="15" fill="rgb(206,174,23)" fg:x="1873" fg:w="35"/><text x="72.1226%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (11 samples, 0.42%)</title><rect x="73.2540%" y="213" width="0.4221%" height="15" fill="rgb(211,33,43)" fg:x="1909" fg:w="11"/><text x="73.5040%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.15%)</title><rect x="73.6761%" y="213" width="0.1535%" height="15" fill="rgb(245,58,50)" fg:x="1920" fg:w="4"/><text x="73.9261%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.12%)</title><rect x="73.7145%" y="197" width="0.1151%" height="15" fill="rgb(244,68,36)" fg:x="1921" fg:w="3"/><text x="73.9645%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.12%)</title><rect x="73.7145%" y="181" width="0.1151%" height="15" fill="rgb(232,229,15)" fg:x="1921" fg:w="3"/><text x="73.9645%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.08%)</title><rect x="73.7529%" y="165" width="0.0767%" height="15" fill="rgb(254,30,23)" fg:x="1922" fg:w="2"/><text x="74.0029%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.04%)</title><rect x="73.8296%" y="213" width="0.0384%" height="15" fill="rgb(235,160,14)" fg:x="1924" fg:w="1"/><text x="74.0796%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.23%)</title><rect x="73.8680%" y="213" width="0.2302%" height="15" fill="rgb(212,155,44)" fg:x="1925" fg:w="6"/><text x="74.1180%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="74.0599%" y="197" width="0.0384%" height="15" fill="rgb(226,2,50)" fg:x="1930" fg:w="1"/><text x="74.3099%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="74.0599%" y="181" width="0.0384%" height="15" fill="rgb(234,177,6)" fg:x="1930" fg:w="1"/><text x="74.3099%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="74.2134%" y="197" width="0.0384%" height="15" fill="rgb(217,24,9)" fg:x="1934" fg:w="1"/><text x="74.4634%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.23%)</title><rect x="74.0982%" y="213" width="0.2302%" height="15" fill="rgb(220,13,46)" fg:x="1931" fg:w="6"/><text x="74.3482%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.08%)</title><rect x="74.2517%" y="197" width="0.0767%" height="15" fill="rgb(239,221,27)" fg:x="1935" fg:w="2"/><text x="74.5017%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.04%)</title><rect x="74.3285%" y="213" width="0.0384%" height="15" fill="rgb(222,198,25)" fg:x="1937" fg:w="1"/><text x="74.5785%" y="223.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="74.3668%" y="213" width="0.0384%" height="15" fill="rgb(211,99,13)" fg:x="1938" fg:w="1"/><text x="74.6168%" y="223.50"></text></g><g><title>web-server`core::num::_&lt;impl core::str::traits::FromStr for i64&gt;::from_str (1 samples, 0.04%)</title><rect x="74.4052%" y="213" width="0.0384%" height="15" fill="rgb(232,111,31)" fg:x="1939" fg:w="1"/><text x="74.6552%" y="223.50"></text></g><g><title>web-server`core::str::pattern::StrSearcher::new (1 samples, 0.04%)</title><rect x="74.4436%" y="213" width="0.0384%" height="15" fill="rgb(245,82,37)" fg:x="1940" fg:w="1"/><text x="74.6936%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_unlock_init_slow (1 samples, 0.04%)</title><rect x="74.4820%" y="197" width="0.0384%" height="15" fill="rgb(227,149,46)" fg:x="1941" fg:w="1"/><text x="74.7320%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (25 samples, 0.96%)</title><rect x="74.5203%" y="165" width="0.9593%" height="15" fill="rgb(218,36,50)" fg:x="1942" fg:w="25"/><text x="74.7703%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (26 samples, 1.00%)</title><rect x="74.5203%" y="181" width="0.9977%" height="15" fill="rgb(226,80,48)" fg:x="1942" fg:w="26"/><text x="74.7703%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_wait (1 samples, 0.04%)</title><rect x="75.4797%" y="165" width="0.0384%" height="15" fill="rgb(238,224,15)" fg:x="1967" fg:w="1"/><text x="75.7297%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (25 samples, 0.96%)</title><rect x="75.5180%" y="181" width="0.9593%" height="15" fill="rgb(241,136,10)" fg:x="1968" fg:w="25"/><text x="75.7680%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (25 samples, 0.96%)</title><rect x="75.5180%" y="165" width="0.9593%" height="15" fill="rgb(208,32,45)" fg:x="1968" fg:w="25"/><text x="75.7680%" y="175.50"></text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="76.4774%" y="181" width="0.0384%" height="15" fill="rgb(207,135,9)" fg:x="1993" fg:w="1"/><text x="76.7274%" y="191.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (33 samples, 1.27%)</title><rect x="76.5157%" y="165" width="1.2663%" height="15" fill="rgb(206,86,44)" fg:x="1994" fg:w="33"/><text x="76.7657%" y="175.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (33 samples, 1.27%)</title><rect x="76.5157%" y="149" width="1.2663%" height="15" fill="rgb(245,177,15)" fg:x="1994" fg:w="33"/><text x="76.7657%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`write (32 samples, 1.23%)</title><rect x="76.5541%" y="133" width="1.2279%" height="15" fill="rgb(206,64,50)" fg:x="1995" fg:w="32"/><text x="76.8041%" y="143.50"></text></g><g><title>web-server`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.08%)</title><rect x="77.7820%" y="149" width="0.0767%" height="15" fill="rgb(234,36,40)" fg:x="2027" fg:w="2"/><text x="78.0320%" y="159.50"></text></g><g><title>web-server`core::fmt::Write::write_char (1 samples, 0.04%)</title><rect x="77.8588%" y="149" width="0.0384%" height="15" fill="rgb(213,64,8)" fg:x="2029" fg:w="1"/><text x="78.1088%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__getpeername (11 samples, 0.42%)</title><rect x="77.8972%" y="133" width="0.4221%" height="15" fill="rgb(210,75,36)" fg:x="2030" fg:w="11"/><text x="78.1472%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__getsockname (25 samples, 0.96%)</title><rect x="78.3193%" y="133" width="0.9593%" height="15" fill="rgb(229,88,21)" fg:x="2041" fg:w="25"/><text x="78.5693%" y="143.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.15%)</title><rect x="79.2786%" y="133" width="0.1535%" height="15" fill="rgb(252,204,47)" fg:x="2066" fg:w="4"/><text x="79.5286%" y="143.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (4 samples, 0.15%)</title><rect x="79.2786%" y="117" width="0.1535%" height="15" fill="rgb(208,77,27)" fg:x="2066" fg:w="4"/><text x="79.5286%" y="127.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (3 samples, 0.12%)</title><rect x="79.3170%" y="101" width="0.1151%" height="15" fill="rgb(221,76,26)" fg:x="2067" fg:w="3"/><text x="79.5670%" y="111.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddrV6 as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="79.5472%" y="117" width="0.0384%" height="15" fill="rgb(225,139,18)" fg:x="2073" fg:w="1"/><text x="79.7972%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="79.6239%" y="85" width="0.0767%" height="15" fill="rgb(230,137,11)" fg:x="2075" fg:w="2"/><text x="79.8739%" y="95.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (4 samples, 0.15%)</title><rect x="79.7007%" y="85" width="0.1535%" height="15" fill="rgb(212,28,1)" fg:x="2077" fg:w="4"/><text x="79.9507%" y="95.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="79.8158%" y="69" width="0.0384%" height="15" fill="rgb(248,164,17)" fg:x="2080" fg:w="1"/><text x="80.0658%" y="79.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (8 samples, 0.31%)</title><rect x="79.5856%" y="101" width="0.3070%" height="15" fill="rgb(222,171,42)" fg:x="2074" fg:w="8"/><text x="79.8356%" y="111.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="79.8542%" y="85" width="0.0384%" height="15" fill="rgb(243,84,45)" fg:x="2081" fg:w="1"/><text x="80.1042%" y="95.50"></text></g><g><title>web-server`&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.08%)</title><rect x="79.8926%" y="69" width="0.0767%" height="15" fill="rgb(252,49,23)" fg:x="2082" fg:w="2"/><text x="80.1426%" y="79.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.08%)</title><rect x="79.9693%" y="53" width="0.0767%" height="15" fill="rgb(215,19,7)" fg:x="2084" fg:w="2"/><text x="80.2193%" y="63.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="80.0077%" y="37" width="0.0384%" height="15" fill="rgb(238,81,41)" fg:x="2085" fg:w="1"/><text x="80.2577%" y="47.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddrV6 as core::fmt::Display&gt;::fmt (5 samples, 0.19%)</title><rect x="79.8926%" y="101" width="0.1919%" height="15" fill="rgb(210,199,37)" fg:x="2082" fg:w="5"/><text x="80.1426%" y="111.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (5 samples, 0.19%)</title><rect x="79.8926%" y="85" width="0.1919%" height="15" fill="rgb(244,192,49)" fg:x="2082" fg:w="5"/><text x="80.1426%" y="95.50"></text></g><g><title>web-server`core::fmt::write (3 samples, 0.12%)</title><rect x="79.9693%" y="69" width="0.1151%" height="15" fill="rgb(226,211,11)" fg:x="2084" fg:w="3"/><text x="80.2193%" y="79.50"></text></g><g><title>web-server`&lt;std::net::ip::Ipv6Addr as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="80.0460%" y="53" width="0.0384%" height="15" fill="rgb(236,162,54)" fg:x="2086" fg:w="1"/><text x="80.2960%" y="63.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (14 samples, 0.54%)</title><rect x="79.5856%" y="117" width="0.5372%" height="15" fill="rgb(220,229,9)" fg:x="2074" fg:w="14"/><text x="79.8356%" y="127.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (1 samples, 0.04%)</title><rect x="80.0844%" y="101" width="0.0384%" height="15" fill="rgb(250,87,22)" fg:x="2087" fg:w="1"/><text x="80.3344%" y="111.50"></text></g><g><title>web-server`&lt;std::sys_common::net::TcpStream as core::fmt::Debug&gt;::fmt (19 samples, 0.73%)</title><rect x="79.4321%" y="133" width="0.7291%" height="15" fill="rgb(239,43,17)" fg:x="2070" fg:w="19"/><text x="79.6821%" y="143.50"></text></g><g><title>web-server`core::fmt::num::_&lt;impl core::fmt::Debug for i32&gt;::fmt (1 samples, 0.04%)</title><rect x="80.1228%" y="117" width="0.0384%" height="15" fill="rgb(231,177,25)" fg:x="2088" fg:w="1"/><text x="80.3728%" y="127.50"></text></g><g><title>web-server`&lt;str as core::fmt::Debug&gt;::fmt (3 samples, 0.12%)</title><rect x="80.1612%" y="133" width="0.1151%" height="15" fill="rgb(219,179,1)" fg:x="2089" fg:w="3"/><text x="80.4112%" y="143.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="80.2379%" y="117" width="0.0384%" height="15" fill="rgb(238,219,53)" fg:x="2091" fg:w="1"/><text x="80.4879%" y="127.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="80.2379%" y="101" width="0.0384%" height="15" fill="rgb(232,167,36)" fg:x="2091" fg:w="1"/><text x="80.4879%" y="111.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="80.2379%" y="85" width="0.0384%" height="15" fill="rgb(244,19,51)" fg:x="2091" fg:w="1"/><text x="80.4879%" y="95.50"></text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (66 samples, 2.53%)</title><rect x="77.7820%" y="165" width="2.5326%" height="15" fill="rgb(224,6,22)" fg:x="2027" fg:w="66"/><text x="78.0320%" y="175.50">we..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (63 samples, 2.42%)</title><rect x="77.8972%" y="149" width="2.4175%" height="15" fill="rgb(224,145,5)" fg:x="2030" fg:w="63"/><text x="78.1472%" y="159.50">we..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (1 samples, 0.04%)</title><rect x="80.2763%" y="133" width="0.0384%" height="15" fill="rgb(234,130,49)" fg:x="2092" fg:w="1"/><text x="80.5263%" y="143.50"></text></g><g><title>web-server`core::fmt::Formatter::debug_struct (1 samples, 0.04%)</title><rect x="80.3147%" y="165" width="0.0384%" height="15" fill="rgb(254,6,2)" fg:x="2093" fg:w="1"/><text x="80.5647%" y="175.50"></text></g><g><title>web-server`std::io::stdio::_print (154 samples, 5.91%)</title><rect x="74.4820%" y="213" width="5.9094%" height="15" fill="rgb(208,96,46)" fg:x="1941" fg:w="154"/><text x="74.7320%" y="223.50">web-serv..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (153 samples, 5.87%)</title><rect x="74.5203%" y="197" width="5.8711%" height="15" fill="rgb(239,3,39)" fg:x="1942" fg:w="153"/><text x="74.7703%" y="207.50">web-ser..</text></g><g><title>web-server`core::fmt::write (101 samples, 3.88%)</title><rect x="76.5157%" y="181" width="3.8757%" height="15" fill="rgb(233,210,1)" fg:x="1994" fg:w="101"/><text x="76.7657%" y="191.50">web-..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (1 samples, 0.04%)</title><rect x="80.3530%" y="165" width="0.0384%" height="15" fill="rgb(244,137,37)" fg:x="2094" fg:w="1"/><text x="80.6030%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="80.4298%" y="181" width="0.0767%" height="15" fill="rgb(240,136,2)" fg:x="2096" fg:w="2"/><text x="80.6798%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.08%)</title><rect x="80.4298%" y="165" width="0.0767%" height="15" fill="rgb(239,18,37)" fg:x="2096" fg:w="2"/><text x="80.6798%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.08%)</title><rect x="80.4298%" y="149" width="0.0767%" height="15" fill="rgb(218,185,22)" fg:x="2096" fg:w="2"/><text x="80.6798%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="80.4682%" y="133" width="0.0384%" height="15" fill="rgb(225,218,4)" fg:x="2097" fg:w="1"/><text x="80.7182%" y="143.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (5 samples, 0.19%)</title><rect x="80.3914%" y="213" width="0.1919%" height="15" fill="rgb(230,182,32)" fg:x="2095" fg:w="5"/><text x="80.6414%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (5 samples, 0.19%)</title><rect x="80.3914%" y="197" width="0.1919%" height="15" fill="rgb(242,56,43)" fg:x="2095" fg:w="5"/><text x="80.6414%" y="207.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (2 samples, 0.08%)</title><rect x="80.5065%" y="181" width="0.0767%" height="15" fill="rgb(233,99,24)" fg:x="2098" fg:w="2"/><text x="80.7565%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.08%)</title><rect x="80.5065%" y="165" width="0.0767%" height="15" fill="rgb(234,209,42)" fg:x="2098" fg:w="2"/><text x="80.7565%" y="175.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__recvfrom (1 samples, 0.04%)</title><rect x="80.5833%" y="197" width="0.0384%" height="15" fill="rgb(227,7,12)" fg:x="2100" fg:w="1"/><text x="80.8333%" y="207.50"></text></g><g><title>libsystem_c.dylib`recv (1 samples, 0.04%)</title><rect x="80.6216%" y="197" width="0.0384%" height="15" fill="rgb(245,203,43)" fg:x="2101" fg:w="1"/><text x="80.8716%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (61 samples, 2.34%)</title><rect x="80.6600%" y="197" width="2.3408%" height="15" fill="rgb(238,205,33)" fg:x="2102" fg:w="61"/><text x="80.9100%" y="207.50">l..</text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.12%)</title><rect x="83.0008%" y="197" width="0.1151%" height="15" fill="rgb(231,56,7)" fg:x="2163" fg:w="3"/><text x="83.2508%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.15%)</title><rect x="83.2694%" y="165" width="0.1535%" height="15" fill="rgb(244,186,29)" fg:x="2170" fg:w="4"/><text x="83.5194%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.38%)</title><rect x="83.1159%" y="197" width="0.3837%" height="15" fill="rgb(234,111,31)" fg:x="2166" fg:w="10"/><text x="83.3659%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.27%)</title><rect x="83.2310%" y="181" width="0.2686%" height="15" fill="rgb(241,149,10)" fg:x="2169" fg:w="7"/><text x="83.4810%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.08%)</title><rect x="83.4229%" y="165" width="0.0767%" height="15" fill="rgb(249,206,44)" fg:x="2174" fg:w="2"/><text x="83.6729%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.12%)</title><rect x="83.4996%" y="197" width="0.1151%" height="15" fill="rgb(251,153,30)" fg:x="2176" fg:w="3"/><text x="83.7496%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="83.6147%" y="197" width="0.0384%" height="15" fill="rgb(239,152,38)" fg:x="2179" fg:w="1"/><text x="83.8647%" y="207.50"></text></g><g><title>web-server`core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="83.6531%" y="197" width="0.0384%" height="15" fill="rgb(249,139,47)" fg:x="2180" fg:w="1"/><text x="83.9031%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="83.7299%" y="181" width="0.0384%" height="15" fill="rgb(244,64,35)" fg:x="2182" fg:w="1"/><text x="83.9799%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (7 samples, 0.27%)</title><rect x="83.7682%" y="165" width="0.2686%" height="15" fill="rgb(216,46,15)" fg:x="2183" fg:w="7"/><text x="84.0182%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (7 samples, 0.27%)</title><rect x="83.7682%" y="149" width="0.2686%" height="15" fill="rgb(250,74,19)" fg:x="2183" fg:w="7"/><text x="84.0182%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (4 samples, 0.15%)</title><rect x="84.0368%" y="165" width="0.1535%" height="15" fill="rgb(249,42,33)" fg:x="2190" fg:w="4"/><text x="84.2868%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.12%)</title><rect x="84.0752%" y="149" width="0.1151%" height="15" fill="rgb(242,149,17)" fg:x="2191" fg:w="3"/><text x="84.3252%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`write (49 samples, 1.88%)</title><rect x="84.1903%" y="133" width="1.8803%" height="15" fill="rgb(244,29,21)" fg:x="2194" fg:w="49"/><text x="84.4403%" y="143.50">l..</text></g><g><title>web-server`std::io::stdio::_print (65 samples, 2.49%)</title><rect x="83.6915%" y="197" width="2.4942%" height="15" fill="rgb(220,130,37)" fg:x="2181" fg:w="65"/><text x="83.9415%" y="207.50">we..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (63 samples, 2.42%)</title><rect x="83.7682%" y="181" width="2.4175%" height="15" fill="rgb(211,67,2)" fg:x="2183" fg:w="63"/><text x="84.0182%" y="191.50">we..</text></g><g><title>web-server`core::fmt::write (52 samples, 2.00%)</title><rect x="84.1903%" y="165" width="1.9954%" height="15" fill="rgb(235,68,52)" fg:x="2194" fg:w="52"/><text x="84.4403%" y="175.50">w..</text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (52 samples, 2.00%)</title><rect x="84.1903%" y="149" width="1.9954%" height="15" fill="rgb(246,142,3)" fg:x="2194" fg:w="52"/><text x="84.4403%" y="159.50">w..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.12%)</title><rect x="86.0706%" y="133" width="0.1151%" height="15" fill="rgb(241,25,7)" fg:x="2243" fg:w="3"/><text x="86.3206%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.46%)</title><rect x="86.2625%" y="181" width="0.4605%" height="15" fill="rgb(242,119,39)" fg:x="2248" fg:w="12"/><text x="86.5125%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.38%)</title><rect x="86.3392%" y="165" width="0.3837%" height="15" fill="rgb(241,98,45)" fg:x="2250" fg:w="10"/><text x="86.5892%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.35%)</title><rect x="86.3776%" y="149" width="0.3454%" height="15" fill="rgb(254,28,30)" fg:x="2251" fg:w="9"/><text x="86.6276%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.23%)</title><rect x="86.4927%" y="133" width="0.2302%" height="15" fill="rgb(241,142,54)" fg:x="2254" fg:w="6"/><text x="86.7427%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="86.6846%" y="117" width="0.0384%" height="15" fill="rgb(222,85,15)" fg:x="2259" fg:w="1"/><text x="86.9346%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.08%)</title><rect x="86.7229%" y="181" width="0.0767%" height="15" fill="rgb(210,85,47)" fg:x="2260" fg:w="2"/><text x="86.9729%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.08%)</title><rect x="86.7997%" y="181" width="0.0767%" height="15" fill="rgb(224,206,25)" fg:x="2262" fg:w="2"/><text x="87.0497%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="86.8764%" y="181" width="0.0384%" height="15" fill="rgb(243,201,19)" fg:x="2264" fg:w="1"/><text x="87.1264%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="86.8764%" y="165" width="0.0384%" height="15" fill="rgb(236,59,4)" fg:x="2264" fg:w="1"/><text x="87.1264%" y="175.50"></text></g><g><title>web-server`core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="86.9148%" y="181" width="0.0384%" height="15" fill="rgb(254,179,45)" fg:x="2265" fg:w="1"/><text x="87.1648%" y="191.50"></text></g><g><title>web-server`httparse::parse_headers_iter_uninit (4 samples, 0.15%)</title><rect x="86.9532%" y="149" width="0.1535%" height="15" fill="rgb(226,14,10)" fg:x="2266" fg:w="4"/><text x="87.2032%" y="159.50"></text></g><g><title>web-server`web_server::request::Request::from_tcp_stream (172 samples, 6.60%)</title><rect x="80.5833%" y="213" width="6.6002%" height="15" fill="rgb(244,27,41)" fg:x="2100" fg:w="172"/><text x="80.8333%" y="223.50">web-serve..</text></g><g><title>web-server`web_server::header::Header::from_request (26 samples, 1.00%)</title><rect x="86.1857%" y="197" width="0.9977%" height="15" fill="rgb(235,35,32)" fg:x="2246" fg:w="26"/><text x="86.4357%" y="207.50"></text></g><g><title>web-server`httparse::Request::parse (6 samples, 0.23%)</title><rect x="86.9532%" y="181" width="0.2302%" height="15" fill="rgb(218,68,31)" fg:x="2266" fg:w="6"/><text x="87.2032%" y="191.50"></text></g><g><title>web-server`httparse::Request::parse_with_uninit_headers (6 samples, 0.23%)</title><rect x="86.9532%" y="165" width="0.2302%" height="15" fill="rgb(207,120,37)" fg:x="2266" fg:w="6"/><text x="87.2032%" y="175.50"></text></g><g><title>web-server`httparse::simd::runtime::match_uri_vectored (2 samples, 0.08%)</title><rect x="87.1067%" y="149" width="0.0767%" height="15" fill="rgb(227,98,0)" fg:x="2270" fg:w="2"/><text x="87.3567%" y="159.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (2 samples, 0.08%)</title><rect x="87.1067%" y="133" width="0.0767%" height="15" fill="rgb(207,7,3)" fg:x="2270" fg:w="2"/><text x="87.3567%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="87.2602%" y="197" width="0.0767%" height="15" fill="rgb(206,98,19)" fg:x="2274" fg:w="2"/><text x="87.5102%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.08%)</title><rect x="87.2602%" y="181" width="0.0767%" height="15" fill="rgb(217,5,26)" fg:x="2274" fg:w="2"/><text x="87.5102%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.08%)</title><rect x="87.2602%" y="165" width="0.0767%" height="15" fill="rgb(235,190,38)" fg:x="2274" fg:w="2"/><text x="87.5102%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.19%)</title><rect x="87.3369%" y="197" width="0.1919%" height="15" fill="rgb(247,86,24)" fg:x="2276" fg:w="5"/><text x="87.5869%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.15%)</title><rect x="87.3753%" y="181" width="0.1535%" height="15" fill="rgb(205,101,16)" fg:x="2277" fg:w="4"/><text x="87.6253%" y="191.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="87.5288%" y="197" width="0.0767%" height="15" fill="rgb(246,168,33)" fg:x="2281" fg:w="2"/><text x="87.7788%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="87.5288%" y="181" width="0.0767%" height="15" fill="rgb(231,114,1)" fg:x="2281" fg:w="2"/><text x="87.7788%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.08%)</title><rect x="87.5288%" y="165" width="0.0767%" height="15" fill="rgb(207,184,53)" fg:x="2281" fg:w="2"/><text x="87.7788%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.08%)</title><rect x="87.5288%" y="149" width="0.0767%" height="15" fill="rgb(224,95,51)" fg:x="2281" fg:w="2"/><text x="87.7788%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="87.5672%" y="133" width="0.0384%" height="15" fill="rgb(212,188,45)" fg:x="2282" fg:w="1"/><text x="87.8172%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="87.6055%" y="181" width="0.0384%" height="15" fill="rgb(223,154,38)" fg:x="2283" fg:w="1"/><text x="87.8555%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="87.6055%" y="165" width="0.0384%" height="15" fill="rgb(251,22,52)" fg:x="2283" fg:w="1"/><text x="87.8555%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="87.6055%" y="149" width="0.0384%" height="15" fill="rgb(229,209,22)" fg:x="2283" fg:w="1"/><text x="87.8555%" y="159.50"></text></g><g><title>web-server`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="87.6439%" y="181" width="0.0384%" height="15" fill="rgb(234,138,34)" fg:x="2284" fg:w="1"/><text x="87.8939%" y="191.50"></text></g><g><title>web-server`core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="87.6439%" y="165" width="0.0384%" height="15" fill="rgb(212,95,11)" fg:x="2284" fg:w="1"/><text x="87.8939%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="87.7974%" y="101" width="0.0384%" height="15" fill="rgb(240,179,47)" fg:x="2288" fg:w="1"/><text x="88.0474%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="87.8358%" y="101" width="0.0384%" height="15" fill="rgb(240,163,11)" fg:x="2289" fg:w="1"/><text x="88.0858%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (7 samples, 0.27%)</title><rect x="87.6823%" y="133" width="0.2686%" height="15" fill="rgb(236,37,12)" fg:x="2285" fg:w="7"/><text x="87.9323%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.23%)</title><rect x="87.7206%" y="117" width="0.2302%" height="15" fill="rgb(232,164,16)" fg:x="2286" fg:w="6"/><text x="87.9706%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.08%)</title><rect x="87.8741%" y="101" width="0.0767%" height="15" fill="rgb(244,205,15)" fg:x="2290" fg:w="2"/><text x="88.1241%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="87.9509%" y="133" width="0.0384%" height="15" fill="rgb(223,117,47)" fg:x="2292" fg:w="1"/><text x="88.2009%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="87.9509%" y="117" width="0.0384%" height="15" fill="rgb(244,107,35)" fg:x="2292" fg:w="1"/><text x="88.2009%" y="127.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.35%)</title><rect x="87.6823%" y="181" width="0.3454%" height="15" fill="rgb(205,140,8)" fg:x="2285" fg:w="9"/><text x="87.9323%" y="191.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (9 samples, 0.35%)</title><rect x="87.6823%" y="165" width="0.3454%" height="15" fill="rgb(228,84,46)" fg:x="2285" fg:w="9"/><text x="87.9323%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (9 samples, 0.35%)</title><rect x="87.6823%" y="149" width="0.3454%" height="15" fill="rgb(254,188,9)" fg:x="2285" fg:w="9"/><text x="87.9323%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="87.9893%" y="133" width="0.0384%" height="15" fill="rgb(206,112,54)" fg:x="2293" fg:w="1"/><text x="88.2393%" y="143.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.46%)</title><rect x="87.6055%" y="197" width="0.4605%" height="15" fill="rgb(216,84,49)" fg:x="2283" fg:w="12"/><text x="87.8555%" y="207.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="88.0276%" y="181" width="0.0384%" height="15" fill="rgb(214,194,35)" fg:x="2294" fg:w="1"/><text x="88.2776%" y="191.50"></text></g><g><title>web-server`__rdl_dealloc (1 samples, 0.04%)</title><rect x="88.0660%" y="197" width="0.0384%" height="15" fill="rgb(249,28,3)" fg:x="2295" fg:w="1"/><text x="88.3160%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="88.1044%" y="181" width="0.0384%" height="15" fill="rgb(222,56,52)" fg:x="2296" fg:w="1"/><text x="88.3544%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="88.1044%" y="165" width="0.0384%" height="15" fill="rgb(245,217,50)" fg:x="2296" fg:w="1"/><text x="88.3544%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="88.1044%" y="149" width="0.0384%" height="15" fill="rgb(213,201,24)" fg:x="2296" fg:w="1"/><text x="88.3544%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="88.1044%" y="133" width="0.0384%" height="15" fill="rgb(248,116,28)" fg:x="2296" fg:w="1"/><text x="88.3544%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (1 samples, 0.04%)</title><rect x="88.1427%" y="181" width="0.0384%" height="15" fill="rgb(219,72,43)" fg:x="2297" fg:w="1"/><text x="88.3927%" y="191.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.08%)</title><rect x="88.1811%" y="165" width="0.0767%" height="15" fill="rgb(209,138,14)" fg:x="2298" fg:w="2"/><text x="88.4311%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="88.1811%" y="149" width="0.0767%" height="15" fill="rgb(222,18,33)" fg:x="2298" fg:w="2"/><text x="88.4311%" y="159.50"></text></g><g><title>web-server`alloc::fmt::format (6 samples, 0.23%)</title><rect x="88.1044%" y="197" width="0.2302%" height="15" fill="rgb(213,199,7)" fg:x="2296" fg:w="6"/><text x="88.3544%" y="207.50"></text></g><g><title>web-server`core::fmt::write (4 samples, 0.15%)</title><rect x="88.1811%" y="181" width="0.1535%" height="15" fill="rgb(250,110,10)" fg:x="2298" fg:w="4"/><text x="88.4311%" y="191.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for i64&gt;::fmt (2 samples, 0.08%)</title><rect x="88.2579%" y="165" width="0.0767%" height="15" fill="rgb(248,123,6)" fg:x="2300" fg:w="2"/><text x="88.5079%" y="175.50"></text></g><g><title>web-server`core::fmt::Formatter::pad_integral (1 samples, 0.04%)</title><rect x="88.2962%" y="149" width="0.0384%" height="15" fill="rgb(206,91,31)" fg:x="2301" fg:w="1"/><text x="88.5462%" y="159.50"></text></g><g><title>web-server`core::str::pattern::StrSearcher::new (1 samples, 0.04%)</title><rect x="88.3346%" y="197" width="0.0384%" height="15" fill="rgb(211,154,13)" fg:x="2302" fg:w="1"/><text x="88.5846%" y="207.50"></text></g><g><title>web-server`std::os::unix::net::stream::UnixStream::try_clone (21 samples, 0.81%)</title><rect x="88.3730%" y="197" width="0.8058%" height="15" fill="rgb(225,148,7)" fg:x="2303" fg:w="21"/><text x="88.6230%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (21 samples, 0.81%)</title><rect x="88.3730%" y="181" width="0.8058%" height="15" fill="rgb(220,160,43)" fg:x="2303" fg:w="21"/><text x="88.6230%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="89.2172%" y="165" width="0.0767%" height="15" fill="rgb(213,52,39)" fg:x="2325" fg:w="2"/><text x="89.4672%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="89.2556%" y="149" width="0.0384%" height="15" fill="rgb(243,137,7)" fg:x="2326" fg:w="1"/><text x="89.5056%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="89.2556%" y="133" width="0.0384%" height="15" fill="rgb(230,79,13)" fg:x="2326" fg:w="1"/><text x="89.5056%" y="143.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (9 samples, 0.35%)</title><rect x="89.1788%" y="197" width="0.3454%" height="15" fill="rgb(247,105,23)" fg:x="2324" fg:w="9"/><text x="89.4288%" y="207.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (9 samples, 0.35%)</title><rect x="89.1788%" y="181" width="0.3454%" height="15" fill="rgb(223,179,41)" fg:x="2324" fg:w="9"/><text x="89.4288%" y="191.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (6 samples, 0.23%)</title><rect x="89.2939%" y="165" width="0.2302%" height="15" fill="rgb(218,9,34)" fg:x="2327" fg:w="6"/><text x="89.5439%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (5 samples, 0.19%)</title><rect x="89.3323%" y="149" width="0.1919%" height="15" fill="rgb(222,106,8)" fg:x="2328" fg:w="5"/><text x="89.5823%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (90 samples, 3.45%)</title><rect x="89.5242%" y="181" width="3.4536%" height="15" fill="rgb(211,220,0)" fg:x="2333" fg:w="90"/><text x="89.7742%" y="191.50">lib..</text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.08%)</title><rect x="92.9777%" y="181" width="0.0767%" height="15" fill="rgb(229,52,16)" fg:x="2423" fg:w="2"/><text x="93.2277%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="93.0161%" y="165" width="0.0384%" height="15" fill="rgb(212,155,18)" fg:x="2424" fg:w="1"/><text x="93.2661%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="93.0161%" y="149" width="0.0384%" height="15" fill="rgb(242,21,14)" fg:x="2424" fg:w="1"/><text x="93.2661%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="93.0545%" y="165" width="0.0384%" height="15" fill="rgb(222,19,48)" fg:x="2425" fg:w="1"/><text x="93.3045%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="93.0545%" y="149" width="0.0384%" height="15" fill="rgb(232,45,27)" fg:x="2425" fg:w="1"/><text x="93.3045%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="93.0545%" y="133" width="0.0384%" height="15" fill="rgb(249,103,42)" fg:x="2425" fg:w="1"/><text x="93.3045%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="93.0545%" y="117" width="0.0384%" height="15" fill="rgb(246,81,33)" fg:x="2425" fg:w="1"/><text x="93.3045%" y="127.50"></text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (1,380 samples, 52.95%)</title><rect x="40.2916%" y="245" width="52.9547%" height="15" fill="rgb(252,33,42)" fg:x="1050" fg:w="1380"/><text x="40.5416%" y="255.50">web-server`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (522 samples, 20.03%)</title><rect x="73.2157%" y="229" width="20.0307%" height="15" fill="rgb(209,212,41)" fg:x="1908" fg:w="522"/><text x="73.4657%" y="239.50">web-server`rusty_junctions::fun..</text></g><g><title>web-server`web_server::request::Request::handle_pooled (158 samples, 6.06%)</title><rect x="87.1834%" y="213" width="6.0629%" height="15" fill="rgb(207,154,6)" fg:x="2272" fg:w="158"/><text x="87.4334%" y="223.50">web-serv..</text></g><g><title>web-server`web_server::request::Request::respond_ok (97 samples, 3.72%)</title><rect x="89.5242%" y="197" width="3.7222%" height="15" fill="rgb(223,64,47)" fg:x="2333" fg:w="97"/><text x="89.7742%" y="207.50">web-..</text></g><g><title>web-server`alloc::fmt::format (5 samples, 0.19%)</title><rect x="93.0545%" y="181" width="0.1919%" height="15" fill="rgb(211,161,38)" fg:x="2425" fg:w="5"/><text x="93.3045%" y="191.50"></text></g><g><title>web-server`core::fmt::write (4 samples, 0.15%)</title><rect x="93.0929%" y="165" width="0.1535%" height="15" fill="rgb(219,138,40)" fg:x="2426" fg:w="4"/><text x="93.3429%" y="175.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.15%)</title><rect x="93.0929%" y="149" width="0.1535%" height="15" fill="rgb(241,228,46)" fg:x="2426" fg:w="4"/><text x="93.3429%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.15%)</title><rect x="93.0929%" y="133" width="0.1535%" height="15" fill="rgb(223,209,38)" fg:x="2426" fg:w="4"/><text x="93.3429%" y="143.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (3 samples, 0.12%)</title><rect x="93.2847%" y="229" width="0.1151%" height="15" fill="rgb(236,164,45)" fg:x="2431" fg:w="3"/><text x="93.5347%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.12%)</title><rect x="93.2847%" y="213" width="0.1151%" height="15" fill="rgb(231,15,5)" fg:x="2431" fg:w="3"/><text x="93.5347%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.12%)</title><rect x="93.2847%" y="197" width="0.1151%" height="15" fill="rgb(252,35,15)" fg:x="2431" fg:w="3"/><text x="93.5347%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.12%)</title><rect x="93.2847%" y="181" width="0.1151%" height="15" fill="rgb(248,181,18)" fg:x="2431" fg:w="3"/><text x="93.5347%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.08%)</title><rect x="93.3231%" y="165" width="0.0767%" height="15" fill="rgb(233,39,42)" fg:x="2432" fg:w="2"/><text x="93.5731%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.23%)</title><rect x="94.0522%" y="197" width="0.2302%" height="15" fill="rgb(238,110,33)" fg:x="2451" fg:w="6"/><text x="94.3022%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.19%)</title><rect x="94.0906%" y="181" width="0.1919%" height="15" fill="rgb(233,195,10)" fg:x="2452" fg:w="5"/><text x="94.3406%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.19%)</title><rect x="94.0906%" y="165" width="0.1919%" height="15" fill="rgb(254,105,3)" fg:x="2452" fg:w="5"/><text x="94.3406%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.08%)</title><rect x="94.2057%" y="149" width="0.0767%" height="15" fill="rgb(221,225,9)" fg:x="2455" fg:w="2"/><text x="94.4557%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.04%)</title><rect x="94.2824%" y="197" width="0.0384%" height="15" fill="rgb(224,227,45)" fg:x="2457" fg:w="1"/><text x="94.5324%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (1 samples, 0.04%)</title><rect x="94.3208%" y="197" width="0.0384%" height="15" fill="rgb(229,198,43)" fg:x="2458" fg:w="1"/><text x="94.5708%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_allocate_and_initialize_for_key (18 samples, 0.69%)</title><rect x="93.8219%" y="213" width="0.6907%" height="15" fill="rgb(206,209,35)" fg:x="2445" fg:w="18"/><text x="94.0719%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.15%)</title><rect x="94.3592%" y="197" width="0.1535%" height="15" fill="rgb(245,195,53)" fg:x="2459" fg:w="4"/><text x="94.6092%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.12%)</title><rect x="94.5127%" y="213" width="0.1151%" height="15" fill="rgb(240,92,26)" fg:x="2463" fg:w="3"/><text x="94.7627%" y="223.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (2 samples, 0.08%)</title><rect x="94.6278%" y="213" width="0.0767%" height="15" fill="rgb(207,40,23)" fg:x="2466" fg:w="2"/><text x="94.8778%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="94.7045%" y="213" width="0.0384%" height="15" fill="rgb(223,111,35)" fg:x="2468" fg:w="1"/><text x="94.9545%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (36 samples, 1.38%)</title><rect x="93.3998%" y="229" width="1.3814%" height="15" fill="rgb(229,147,28)" fg:x="2434" fg:w="36"/><text x="93.6498%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_setspecific (1 samples, 0.04%)</title><rect x="94.7429%" y="213" width="0.0384%" height="15" fill="rgb(211,29,28)" fg:x="2469" fg:w="1"/><text x="94.9929%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.15%)</title><rect x="94.7813%" y="229" width="0.1535%" height="15" fill="rgb(228,72,33)" fg:x="2470" fg:w="4"/><text x="95.0313%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.12%)</title><rect x="94.8196%" y="213" width="0.1151%" height="15" fill="rgb(205,214,31)" fg:x="2471" fg:w="3"/><text x="95.0696%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.12%)</title><rect x="94.8196%" y="197" width="0.1151%" height="15" fill="rgb(224,111,15)" fg:x="2471" fg:w="3"/><text x="95.0696%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.08%)</title><rect x="94.8580%" y="181" width="0.0767%" height="15" fill="rgb(253,21,26)" fg:x="2472" fg:w="2"/><text x="95.1080%" y="191.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.08%)</title><rect x="94.9348%" y="229" width="0.0767%" height="15" fill="rgb(245,139,43)" fg:x="2474" fg:w="2"/><text x="95.1848%" y="239.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (2 samples, 0.08%)</title><rect x="94.9348%" y="213" width="0.0767%" height="15" fill="rgb(252,170,7)" fg:x="2474" fg:w="2"/><text x="95.1848%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="94.9348%" y="197" width="0.0767%" height="15" fill="rgb(231,118,14)" fg:x="2474" fg:w="2"/><text x="95.1848%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.08%)</title><rect x="94.9348%" y="181" width="0.0767%" height="15" fill="rgb(238,83,0)" fg:x="2474" fg:w="2"/><text x="95.1848%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.08%)</title><rect x="94.9348%" y="165" width="0.0767%" height="15" fill="rgb(221,39,39)" fg:x="2474" fg:w="2"/><text x="95.1848%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.08%)</title><rect x="94.9348%" y="149" width="0.0767%" height="15" fill="rgb(222,119,46)" fg:x="2474" fg:w="2"/><text x="95.1848%" y="159.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,445 samples, 55.45%)</title><rect x="39.6777%" y="261" width="55.4490%" height="15" fill="rgb(222,165,49)" fg:x="1034" fg:w="1445"/><text x="39.9277%" y="271.50">web-server`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>web-server`std::sys_common::thread_info::set (49 samples, 1.88%)</title><rect x="93.2464%" y="245" width="1.8803%" height="15" fill="rgb(219,113,52)" fg:x="2430" fg:w="49"/><text x="93.4964%" y="255.50">w..</text></g><g><title>web-server`alloc::raw_vec::finish_grow (3 samples, 0.12%)</title><rect x="95.0115%" y="229" width="0.1151%" height="15" fill="rgb(214,7,15)" fg:x="2476" fg:w="3"/><text x="95.2615%" y="239.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.04%)</title><rect x="96.6232%" y="245" width="0.0384%" height="15" fill="rgb(235,32,4)" fg:x="2518" fg:w="1"/><text x="96.8732%" y="255.50"></text></g><g><title>libsystem_c.dylib`sysconf (2 samples, 0.08%)</title><rect x="96.6616%" y="245" width="0.0767%" height="15" fill="rgb(238,90,54)" fg:x="2519" fg:w="2"/><text x="96.9116%" y="255.50"></text></g><g><title>libsystem_c.dylib`getpagesize (2 samples, 0.08%)</title><rect x="96.6616%" y="229" width="0.0767%" height="15" fill="rgb(213,208,19)" fg:x="2519" fg:w="2"/><text x="96.9116%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (77 samples, 2.95%)</title><rect x="96.7383%" y="245" width="2.9547%" height="15" fill="rgb(233,156,4)" fg:x="2521" fg:w="77"/><text x="96.9883%" y="255.50">lib..</text></g><g><title>web-server`std::sys::unix::stack_overflow::imp::make_handler (122 samples, 4.68%)</title><rect x="95.1266%" y="261" width="4.6815%" height="15" fill="rgb(207,194,5)" fg:x="2479" fg:w="122"/><text x="95.3766%" y="271.50">web-s..</text></g><g><title>libsystem_kernel.dylib`mmap (3 samples, 0.12%)</title><rect x="99.6930%" y="245" width="0.1151%" height="15" fill="rgb(206,111,30)" fg:x="2598" fg:w="3"/><text x="99.9430%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (2,020 samples, 77.51%)</title><rect x="22.3331%" y="293" width="77.5134%" height="15" fill="rgb(243,70,54)" fg:x="582" fg:w="2020"/><text x="22.5831%" y="303.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (1,693 samples, 64.97%)</title><rect x="34.8810%" y="277" width="64.9655%" height="15" fill="rgb(242,28,8)" fg:x="909" fg:w="1693"/><text x="35.1310%" y="287.50">web-server`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>web-server`std::sys_common::thread_info::set (1 samples, 0.04%)</title><rect x="99.8081%" y="261" width="0.0384%" height="15" fill="rgb(219,106,18)" fg:x="2601" fg:w="1"/><text x="100.0581%" y="271.50"></text></g><g><title>all (2,606 samples, 100%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(244,222,10)" fg:x="0" fg:w="2606"/><text x="0.2500%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (2,288 samples, 87.80%)</title><rect x="12.2026%" y="309" width="87.7974%" height="15" fill="rgb(236,179,52)" fg:x="318" fg:w="2288"/><text x="12.4526%" y="319.50">libsystem_pthread.dylib`thread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (4 samples, 0.15%)</title><rect x="99.8465%" y="293" width="0.1535%" height="15" fill="rgb(213,23,39)" fg:x="2602" fg:w="4"/><text x="100.0965%" y="303.50"></text></g></svg></svg>