<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="453.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="453.00"> </text><svg id="frames" x="10" width="1180" total_samples="2247"><g><title>web-server`_dyld_private (1 samples, 0.04%)</title><rect x="0.0000%" y="341" width="0.0445%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>libdyld.dylib`dyld_stub_binder (1 samples, 0.04%)</title><rect x="0.0000%" y="325" width="0.0445%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>libdyld.dylib`_dyld_fast_stub_entry(void*, long) (1 samples, 0.04%)</title><rect x="0.0000%" y="309" width="0.0445%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>dyld`dyld::fastBindLazySymbol (1 samples, 0.04%)</title><rect x="0.0000%" y="293" width="0.0445%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::doBindFastLazySymbol(unsigned int, ImageLoader::LinkContext const&amp;, void (*)(), void (*) (1 samples, 0.04%)</title><rect x="0.0000%" y="277" width="0.0445%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolve (1 samples, 0.04%)</title><rect x="0.0000%" y="261" width="0.0445%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolveTwolevel (1 samples, 0.04%)</title><rect x="0.0000%" y="245" width="0.0445%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolAddress (1 samples, 0.04%)</title><rect x="0.0000%" y="229" width="0.0445%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="239.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.04%)</title><rect x="0.0000%" y="213" width="0.0445%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.04%)</title><rect x="0.0000%" y="197" width="0.0445%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="207.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::findShallowExportedSymbol (1 samples, 0.04%)</title><rect x="0.0000%" y="181" width="0.0445%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="191.50"></text></g><g><title>dyld`ImageLoader::trieWalk (1 samples, 0.04%)</title><rect x="0.0000%" y="165" width="0.0445%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="175.50"></text></g><g><title>web-server`__rdl_alloc (1 samples, 0.04%)</title><rect x="0.0445%" y="309" width="0.0445%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.2945%" y="319.50"></text></g><g><title>web-server`std::io::stdio::_print (1 samples, 0.04%)</title><rect x="0.0890%" y="309" width="0.0445%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="0.3390%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="0.1780%" y="293" width="0.0890%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="2"/><text x="0.4280%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="0.1780%" y="277" width="0.0890%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="2"/><text x="0.4280%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.09%)</title><rect x="0.1780%" y="261" width="0.0890%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="2"/><text x="0.4280%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="0.2225%" y="245" width="0.0445%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="0.4725%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__accept (99 samples, 4.41%)</title><rect x="0.8901%" y="261" width="4.4059%" height="15" fill="rgb(221,200,47)" fg:x="20" fg:w="99"/><text x="1.1401%" y="271.50">libsy..</text></g><g><title>web-server`DYLD-STUB$$ioctl (1 samples, 0.04%)</title><rect x="5.2960%" y="261" width="0.0445%" height="15" fill="rgb(226,26,5)" fg:x="119" fg:w="1"/><text x="5.5460%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (7 samples, 0.31%)</title><rect x="5.3405%" y="245" width="0.3115%" height="15" fill="rgb(249,33,26)" fg:x="120" fg:w="7"/><text x="5.5905%" y="255.50"></text></g><g><title>web-server`&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 5.43%)</title><rect x="0.2670%" y="293" width="5.4295%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="122"/><text x="0.5170%" y="303.50">web-ser..</text></g><g><title>web-server`std::net::tcp::TcpListener::accept (121 samples, 5.38%)</title><rect x="0.3115%" y="277" width="5.3850%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="121"/><text x="0.5615%" y="287.50">web-ser..</text></g><g><title>web-server`std::sys::unix::net::Socket::accept (8 samples, 0.36%)</title><rect x="5.3405%" y="261" width="0.3560%" height="15" fill="rgb(247,18,42)" fg:x="120" fg:w="8"/><text x="5.5905%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`ioctl (1 samples, 0.04%)</title><rect x="5.6520%" y="245" width="0.0445%" height="15" fill="rgb(241,131,45)" fg:x="127" fg:w="1"/><text x="5.9020%" y="255.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo (1 samples, 0.04%)</title><rect x="5.6965%" y="213" width="0.0445%" height="15" fill="rgb(249,31,29)" fg:x="128" fg:w="1"/><text x="5.9465%" y="223.50"></text></g><g><title>libsystem_info.dylib`search_addrinfo (1 samples, 0.04%)</title><rect x="5.6965%" y="197" width="0.0445%" height="15" fill="rgb(225,111,53)" fg:x="128" fg:w="1"/><text x="5.9465%" y="207.50"></text></g><g><title>libsystem_info.dylib`mdns_addrinfo (1 samples, 0.04%)</title><rect x="5.6965%" y="181" width="0.0445%" height="15" fill="rgb(238,160,17)" fg:x="128" fg:w="1"/><text x="5.9465%" y="191.50"></text></g><g><title>libsystem_info.dylib`_mdns_search_ex (1 samples, 0.04%)</title><rect x="5.6965%" y="165" width="0.0445%" height="15" fill="rgb(214,148,48)" fg:x="128" fg:w="1"/><text x="5.9465%" y="175.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_start (1 samples, 0.04%)</title><rect x="5.6965%" y="149" width="0.0445%" height="15" fill="rgb(232,36,49)" fg:x="128" fg:w="1"/><text x="5.9465%" y="159.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceQueryRecord (1 samples, 0.04%)</title><rect x="5.6965%" y="133" width="0.0445%" height="15" fill="rgb(209,103,24)" fg:x="128" fg:w="1"/><text x="5.9465%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__select_nocancel (1 samples, 0.04%)</title><rect x="5.6965%" y="117" width="0.0445%" height="15" fill="rgb(229,88,8)" fg:x="128" fg:w="1"/><text x="5.9465%" y="127.50"></text></g><g><title>web-server`std::net::tcp::TcpListener::bind (2 samples, 0.09%)</title><rect x="5.6965%" y="293" width="0.0890%" height="15" fill="rgb(213,181,19)" fg:x="128" fg:w="2"/><text x="5.9465%" y="303.50"></text></g><g><title>web-server`&lt;str as std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (2 samples, 0.09%)</title><rect x="5.6965%" y="277" width="0.0890%" height="15" fill="rgb(254,191,54)" fg:x="128" fg:w="2"/><text x="5.9465%" y="287.50"></text></g><g><title>web-server`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (2 samples, 0.09%)</title><rect x="5.6965%" y="261" width="0.0890%" height="15" fill="rgb(241,83,37)" fg:x="128" fg:w="2"/><text x="5.9465%" y="271.50"></text></g><g><title>web-server`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (2 samples, 0.09%)</title><rect x="5.6965%" y="245" width="0.0890%" height="15" fill="rgb(233,36,39)" fg:x="128" fg:w="2"/><text x="5.9465%" y="255.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (2 samples, 0.09%)</title><rect x="5.6965%" y="229" width="0.0890%" height="15" fill="rgb(226,3,54)" fg:x="128" fg:w="2"/><text x="5.9465%" y="239.50"></text></g><g><title>libsystem_info.dylib`si_module_with_name (1 samples, 0.04%)</title><rect x="5.7410%" y="213" width="0.0445%" height="15" fill="rgb(245,192,40)" fg:x="129" fg:w="1"/><text x="5.9910%" y="223.50"></text></g><g><title>libsystem_info.dylib`si_module_static_search (1 samples, 0.04%)</title><rect x="5.7410%" y="197" width="0.0445%" height="15" fill="rgb(238,167,29)" fg:x="129" fg:w="1"/><text x="5.9910%" y="207.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="5.7410%" y="181" width="0.0445%" height="15" fill="rgb(232,182,51)" fg:x="129" fg:w="1"/><text x="5.9910%" y="191.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="5.7410%" y="165" width="0.0445%" height="15" fill="rgb(231,60,39)" fg:x="129" fg:w="1"/><text x="5.9910%" y="175.50"></text></g><g><title>libsystem_info.dylib`__si_module_static_search_block_invoke (1 samples, 0.04%)</title><rect x="5.7410%" y="149" width="0.0445%" height="15" fill="rgb(208,69,12)" fg:x="129" fg:w="1"/><text x="5.9910%" y="159.50"></text></g><g><title>libsystem_info.dylib`si_module_config_modules_for_category (1 samples, 0.04%)</title><rect x="5.7410%" y="133" width="0.0445%" height="15" fill="rgb(235,93,37)" fg:x="129" fg:w="1"/><text x="5.9910%" y="143.50"></text></g><g><title>libsystem_info.dylib`si_module_with_name (1 samples, 0.04%)</title><rect x="5.7410%" y="117" width="0.0445%" height="15" fill="rgb(213,116,39)" fg:x="129" fg:w="1"/><text x="5.9910%" y="127.50"></text></g><g><title>libsystem_info.dylib`si_module_static_ds (1 samples, 0.04%)</title><rect x="5.7410%" y="101" width="0.0445%" height="15" fill="rgb(222,207,29)" fg:x="129" fg:w="1"/><text x="5.9910%" y="111.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="5.7410%" y="85" width="0.0445%" height="15" fill="rgb(206,96,30)" fg:x="129" fg:w="1"/><text x="5.9910%" y="95.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="5.7410%" y="69" width="0.0445%" height="15" fill="rgb(218,138,4)" fg:x="129" fg:w="1"/><text x="5.9910%" y="79.50"></text></g><g><title>libsystem_info.dylib`__si_module_static_ds_block_invoke (1 samples, 0.04%)</title><rect x="5.7410%" y="53" width="0.0445%" height="15" fill="rgb(250,191,14)" fg:x="129" fg:w="1"/><text x="5.9910%" y="63.50"></text></g><g><title>libsystem_notify.dylib`notify_register_check (1 samples, 0.04%)</title><rect x="5.7410%" y="37" width="0.0445%" height="15" fill="rgb(239,60,40)" fg:x="129" fg:w="1"/><text x="5.9910%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="5.8300%" y="261" width="0.0890%" height="15" fill="rgb(206,27,48)" fg:x="131" fg:w="2"/><text x="6.0800%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="5.8300%" y="245" width="0.0890%" height="15" fill="rgb(225,35,8)" fg:x="131" fg:w="2"/><text x="6.0800%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.09%)</title><rect x="5.8300%" y="229" width="0.0890%" height="15" fill="rgb(250,213,24)" fg:x="131" fg:w="2"/><text x="6.0800%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.09%)</title><rect x="5.8300%" y="213" width="0.0890%" height="15" fill="rgb(247,123,22)" fg:x="131" fg:w="2"/><text x="6.0800%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (13 samples, 0.58%)</title><rect x="5.9190%" y="245" width="0.5785%" height="15" fill="rgb(231,138,38)" fg:x="133" fg:w="13"/><text x="6.1690%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (17 samples, 0.76%)</title><rect x="5.7855%" y="293" width="0.7566%" height="15" fill="rgb(231,145,46)" fg:x="130" fg:w="17"/><text x="6.0355%" y="303.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (17 samples, 0.76%)</title><rect x="5.7855%" y="277" width="0.7566%" height="15" fill="rgb(251,118,11)" fg:x="130" fg:w="17"/><text x="6.0355%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (14 samples, 0.62%)</title><rect x="5.9190%" y="261" width="0.6231%" height="15" fill="rgb(217,147,25)" fg:x="133" fg:w="14"/><text x="6.1690%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (1 samples, 0.04%)</title><rect x="6.4976%" y="245" width="0.0445%" height="15" fill="rgb(247,81,37)" fg:x="146" fg:w="1"/><text x="6.7476%" y="255.50"></text></g><g><title>web-server`std::rt::lang_start::_{{closure}} (147 samples, 6.54%)</title><rect x="0.0445%" y="341" width="6.5421%" height="15" fill="rgb(209,12,38)" fg:x="1" fg:w="147"/><text x="0.2945%" y="351.50">web-serve..</text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (147 samples, 6.54%)</title><rect x="0.0445%" y="325" width="6.5421%" height="15" fill="rgb(227,1,9)" fg:x="1" fg:w="147"/><text x="0.2945%" y="335.50">web-serve..</text></g><g><title>web-server`web_server::web_server::WebServer::start_with_single_handler (145 samples, 6.45%)</title><rect x="0.1335%" y="309" width="6.4530%" height="15" fill="rgb(248,47,43)" fg:x="3" fg:w="145"/><text x="0.3835%" y="319.50">web-serv..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (1 samples, 0.04%)</title><rect x="6.5421%" y="293" width="0.0445%" height="15" fill="rgb(221,10,30)" fg:x="147" fg:w="1"/><text x="6.7921%" y="303.50"></text></g><g><title>libdyld.dylib`start (149 samples, 6.63%)</title><rect x="0.0000%" y="389" width="6.6311%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="149"/><text x="0.2500%" y="399.50">libdyld.d..</text></g><g><title>web-server`main (149 samples, 6.63%)</title><rect x="0.0000%" y="373" width="6.6311%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="149"/><text x="0.2500%" y="383.50">web-serve..</text></g><g><title>web-server`std::rt::lang_start_internal (149 samples, 6.63%)</title><rect x="0.0000%" y="357" width="6.6311%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="149"/><text x="0.2500%" y="367.50">web-serve..</text></g><g><title>web-server`std::thread::Thread::new (1 samples, 0.04%)</title><rect x="6.5866%" y="341" width="0.0445%" height="15" fill="rgb(247,98,35)" fg:x="148" fg:w="1"/><text x="6.8366%" y="351.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (1 samples, 0.04%)</title><rect x="6.5866%" y="325" width="0.0445%" height="15" fill="rgb(247,138,52)" fg:x="148" fg:w="1"/><text x="6.8366%" y="335.50"></text></g><g><title>0x1 (150 samples, 6.68%)</title><rect x="0.0000%" y="405" width="6.6756%" height="15" fill="rgb(213,79,30)" fg:x="0" fg:w="150"/><text x="0.2500%" y="415.50">0x1</text></g><g><title>web-server`main (1 samples, 0.04%)</title><rect x="6.6311%" y="389" width="0.0445%" height="15" fill="rgb(246,177,23)" fg:x="149" fg:w="1"/><text x="6.8811%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (174 samples, 7.74%)</title><rect x="6.6756%" y="405" width="7.7437%" height="15" fill="rgb(230,62,27)" fg:x="150" fg:w="174"/><text x="6.9256%" y="415.50">libsystem_k..</text></g><g><title>libsystem_kernel.dylib`__thread_selfid (18 samples, 0.80%)</title><rect x="20.8278%" y="389" width="0.8011%" height="15" fill="rgb(216,154,8)" fg:x="468" fg:w="18"/><text x="21.0778%" y="399.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (1 samples, 0.04%)</title><rect x="21.8959%" y="373" width="0.0445%" height="15" fill="rgb(244,35,45)" fg:x="492" fg:w="1"/><text x="22.1459%" y="383.50"></text></g><g><title>libsystem_c.dylib`sysconf (2 samples, 0.09%)</title><rect x="21.9404%" y="373" width="0.0890%" height="15" fill="rgb(251,115,12)" fg:x="493" fg:w="2"/><text x="22.1904%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__disable_threadsignal (15 samples, 0.67%)</title><rect x="22.0294%" y="373" width="0.6676%" height="15" fill="rgb(240,54,50)" fg:x="495" fg:w="15"/><text x="22.2794%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (54 samples, 2.40%)</title><rect x="22.6969%" y="373" width="2.4032%" height="15" fill="rgb(233,84,52)" fg:x="510" fg:w="54"/><text x="22.9469%" y="383.50">li..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (16 samples, 0.71%)</title><rect x="25.1001%" y="373" width="0.7121%" height="15" fill="rgb(207,117,47)" fg:x="564" fg:w="16"/><text x="25.3501%" y="383.50"></text></g><g><title>libdyld.dylib`DYLD-STUB$$free (1 samples, 0.04%)</title><rect x="25.8122%" y="357" width="0.0445%" height="15" fill="rgb(249,43,39)" fg:x="580" fg:w="1"/><text x="26.0622%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_free (1 samples, 0.04%)</title><rect x="25.8567%" y="357" width="0.0445%" height="15" fill="rgb(209,38,44)" fg:x="581" fg:w="1"/><text x="26.1067%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.04%)</title><rect x="26.2572%" y="325" width="0.0445%" height="15" fill="rgb(236,212,23)" fg:x="590" fg:w="1"/><text x="26.5072%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="26.3017%" y="309" width="0.0445%" height="15" fill="rgb(242,79,21)" fg:x="591" fg:w="1"/><text x="26.5517%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="26.3462%" y="309" width="0.0445%" height="15" fill="rgb(211,96,35)" fg:x="592" fg:w="1"/><text x="26.5962%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="26.3462%" y="293" width="0.0445%" height="15" fill="rgb(253,215,40)" fg:x="592" fg:w="1"/><text x="26.5962%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="26.3462%" y="277" width="0.0445%" height="15" fill="rgb(211,81,21)" fg:x="592" fg:w="1"/><text x="26.5962%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="26.3907%" y="293" width="0.0445%" height="15" fill="rgb(208,190,38)" fg:x="593" fg:w="1"/><text x="26.6407%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="26.4798%" y="277" width="0.0445%" height="15" fill="rgb(235,213,38)" fg:x="595" fg:w="1"/><text x="26.7298%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.18%)</title><rect x="26.3907%" y="309" width="0.1780%" height="15" fill="rgb(237,122,38)" fg:x="593" fg:w="4"/><text x="26.6407%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.13%)</title><rect x="26.4352%" y="293" width="0.1335%" height="15" fill="rgb(244,218,35)" fg:x="594" fg:w="3"/><text x="26.6852%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="26.5243%" y="277" width="0.0445%" height="15" fill="rgb(240,68,47)" fg:x="596" fg:w="1"/><text x="26.7743%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.04%)</title><rect x="26.5688%" y="309" width="0.0445%" height="15" fill="rgb(210,16,53)" fg:x="597" fg:w="1"/><text x="26.8188%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="26.6133%" y="293" width="0.0445%" height="15" fill="rgb(235,124,12)" fg:x="598" fg:w="1"/><text x="26.8633%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="26.6578%" y="293" width="0.0445%" height="15" fill="rgb(224,169,11)" fg:x="599" fg:w="1"/><text x="26.9078%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="26.6578%" y="277" width="0.0445%" height="15" fill="rgb(250,166,2)" fg:x="599" fg:w="1"/><text x="26.9078%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="26.6578%" y="261" width="0.0445%" height="15" fill="rgb(242,216,29)" fg:x="599" fg:w="1"/><text x="26.9078%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.09%)</title><rect x="26.7023%" y="293" width="0.0890%" height="15" fill="rgb(230,116,27)" fg:x="600" fg:w="2"/><text x="26.9523%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="26.7468%" y="277" width="0.0445%" height="15" fill="rgb(228,99,48)" fg:x="601" fg:w="1"/><text x="26.9968%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (1 samples, 0.04%)</title><rect x="26.7913%" y="293" width="0.0445%" height="15" fill="rgb(253,11,6)" fg:x="602" fg:w="1"/><text x="27.0413%" y="303.50"></text></g><g><title>web-server`alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.27%)</title><rect x="26.6133%" y="309" width="0.2670%" height="15" fill="rgb(247,143,39)" fg:x="598" fg:w="6"/><text x="26.8633%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.04%)</title><rect x="26.8358%" y="293" width="0.0445%" height="15" fill="rgb(236,97,10)" fg:x="603" fg:w="1"/><text x="27.0858%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_finalize_list (15 samples, 0.67%)</title><rect x="26.2572%" y="341" width="0.6676%" height="15" fill="rgb(233,208,19)" fg:x="590" fg:w="15"/><text x="26.5072%" y="351.50"></text></g><g><title>web-server`std::sys::unix::thread_local_dtor::register_dtor::run_dtors (14 samples, 0.62%)</title><rect x="26.3017%" y="325" width="0.6231%" height="15" fill="rgb(216,164,2)" fg:x="591" fg:w="14"/><text x="26.5517%" y="335.50"></text></g><g><title>web-server`std::sys_common::thread_info::THREAD_INFO::__getit::destroy (1 samples, 0.04%)</title><rect x="26.8803%" y="309" width="0.0445%" height="15" fill="rgb(220,129,5)" fg:x="604" fg:w="1"/><text x="27.1303%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.13%)</title><rect x="26.9248%" y="341" width="0.1335%" height="15" fill="rgb(242,17,10)" fg:x="605" fg:w="3"/><text x="27.1748%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.09%)</title><rect x="26.9693%" y="325" width="0.0890%" height="15" fill="rgb(242,107,0)" fg:x="606" fg:w="2"/><text x="27.2193%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.09%)</title><rect x="26.9693%" y="309" width="0.0890%" height="15" fill="rgb(251,28,31)" fg:x="606" fg:w="2"/><text x="27.2193%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.09%)</title><rect x="27.2363%" y="309" width="0.0890%" height="15" fill="rgb(233,223,10)" fg:x="612" fg:w="2"/><text x="27.4863%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.22%)</title><rect x="27.1473%" y="325" width="0.2225%" height="15" fill="rgb(215,21,27)" fg:x="610" fg:w="5"/><text x="27.3973%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="27.3253%" y="309" width="0.0445%" height="15" fill="rgb(232,23,21)" fg:x="614" fg:w="1"/><text x="27.5753%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.36%)</title><rect x="27.0583%" y="341" width="0.3560%" height="15" fill="rgb(244,5,23)" fg:x="608" fg:w="8"/><text x="27.3083%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.04%)</title><rect x="27.3698%" y="325" width="0.0445%" height="15" fill="rgb(226,81,46)" fg:x="615" fg:w="1"/><text x="27.6198%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (38 samples, 1.69%)</title><rect x="25.8122%" y="373" width="1.6911%" height="15" fill="rgb(247,70,30)" fg:x="580" fg:w="38"/><text x="26.0622%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (36 samples, 1.60%)</title><rect x="25.9012%" y="357" width="1.6021%" height="15" fill="rgb(212,68,19)" fg:x="582" fg:w="36"/><text x="26.1512%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.09%)</title><rect x="27.4143%" y="341" width="0.0890%" height="15" fill="rgb(240,187,13)" fg:x="616" fg:w="2"/><text x="27.6643%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_setcancelstate_exit (1 samples, 0.04%)</title><rect x="27.5033%" y="373" width="0.0445%" height="15" fill="rgb(223,113,26)" fg:x="618" fg:w="1"/><text x="27.7533%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (79 samples, 3.52%)</title><rect x="27.5478%" y="341" width="3.5158%" height="15" fill="rgb(206,192,2)" fg:x="619" fg:w="79"/><text x="27.7978%" y="351.50">lib..</text></g><g><title>libsystem_kernel.dylib`mig_dealloc_reply_port (1 samples, 0.04%)</title><rect x="31.0636%" y="341" width="0.0445%" height="15" fill="rgb(241,108,4)" fg:x="698" fg:w="1"/><text x="31.3136%" y="351.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (2 samples, 0.09%)</title><rect x="31.1081%" y="341" width="0.0890%" height="15" fill="rgb(247,173,49)" fg:x="699" fg:w="2"/><text x="31.3581%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mig_dealloc_reply_port (22 samples, 0.98%)</title><rect x="31.3752%" y="325" width="0.9791%" height="15" fill="rgb(224,114,35)" fg:x="705" fg:w="22"/><text x="31.6252%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (22 samples, 0.98%)</title><rect x="31.3752%" y="309" width="0.9791%" height="15" fill="rgb(245,159,27)" fg:x="705" fg:w="22"/><text x="31.6252%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_join$NOCANCEL (109 samples, 4.85%)</title><rect x="27.5478%" y="373" width="4.8509%" height="15" fill="rgb(245,172,44)" fg:x="619" fg:w="109"/><text x="27.7978%" y="383.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (109 samples, 4.85%)</title><rect x="27.5478%" y="357" width="4.8509%" height="15" fill="rgb(236,23,11)" fg:x="619" fg:w="109"/><text x="27.7978%" y="367.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (27 samples, 1.20%)</title><rect x="31.1972%" y="341" width="1.2016%" height="15" fill="rgb(205,117,38)" fg:x="701" fg:w="27"/><text x="31.4472%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.04%)</title><rect x="32.3543%" y="325" width="0.0445%" height="15" fill="rgb(237,72,25)" fg:x="727" fg:w="1"/><text x="32.6043%" y="335.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (3 samples, 0.13%)</title><rect x="32.4433%" y="357" width="0.1335%" height="15" fill="rgb(244,70,9)" fg:x="729" fg:w="3"/><text x="32.6933%" y="367.50"></text></g><g><title>libsystem_c.dylib`sysconf (2 samples, 0.09%)</title><rect x="32.5768%" y="357" width="0.0890%" height="15" fill="rgb(217,125,39)" fg:x="732" fg:w="2"/><text x="32.8268%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (33 samples, 1.47%)</title><rect x="32.6658%" y="357" width="1.4686%" height="15" fill="rgb(235,36,10)" fg:x="734" fg:w="33"/><text x="32.9158%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__sigaltstack (34 samples, 1.51%)</title><rect x="34.1344%" y="357" width="1.5131%" height="15" fill="rgb(251,123,47)" fg:x="767" fg:w="34"/><text x="34.3844%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mmap (1 samples, 0.04%)</title><rect x="35.6475%" y="357" width="0.0445%" height="15" fill="rgb(221,13,13)" fg:x="801" fg:w="1"/><text x="35.8975%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="35.6920%" y="357" width="0.0445%" height="15" fill="rgb(238,131,9)" fg:x="802" fg:w="1"/><text x="35.9420%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.13%)</title><rect x="35.7365%" y="357" width="0.1335%" height="15" fill="rgb(211,50,8)" fg:x="803" fg:w="3"/><text x="35.9865%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.09%)</title><rect x="35.7810%" y="341" width="0.0890%" height="15" fill="rgb(245,182,24)" fg:x="804" fg:w="2"/><text x="36.0310%" y="351.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.04%)</title><rect x="35.8700%" y="357" width="0.0445%" height="15" fill="rgb(242,14,37)" fg:x="806" fg:w="1"/><text x="36.1200%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.18%)</title><rect x="36.0926%" y="341" width="0.1780%" height="15" fill="rgb(246,228,12)" fg:x="811" fg:w="4"/><text x="36.3426%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="36.2706%" y="341" width="0.0445%" height="15" fill="rgb(213,55,15)" fg:x="815" fg:w="1"/><text x="36.5206%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="36.3151%" y="341" width="0.0445%" height="15" fill="rgb(209,9,3)" fg:x="816" fg:w="1"/><text x="36.5651%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="36.3596%" y="341" width="0.0445%" height="15" fill="rgb(230,59,30)" fg:x="817" fg:w="1"/><text x="36.6096%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stackaddr_np (1 samples, 0.04%)</title><rect x="36.4041%" y="341" width="0.0445%" height="15" fill="rgb(209,121,21)" fg:x="818" fg:w="1"/><text x="36.6541%" y="351.50"></text></g><g><title>web-server`__rust_alloc (1 samples, 0.04%)</title><rect x="36.4486%" y="341" width="0.0445%" height="15" fill="rgb(220,109,13)" fg:x="819" fg:w="1"/><text x="36.6986%" y="351.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::binary::transform_recv&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},i64,i64&gt;::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="36.4931%" y="341" width="0.0445%" height="15" fill="rgb(232,18,1)" fg:x="820" fg:w="1"/><text x="36.7431%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stacksize_np (1 samples, 0.04%)</title><rect x="36.5376%" y="325" width="0.0445%" height="15" fill="rgb(215,41,42)" fg:x="821" fg:w="1"/><text x="36.7876%" y="335.50"></text></g><g><title>web-server`std::sys::unix::thread::guard::current (2 samples, 0.09%)</title><rect x="36.5376%" y="341" width="0.0890%" height="15" fill="rgb(224,123,36)" fg:x="821" fg:w="2"/><text x="36.7876%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (1 samples, 0.04%)</title><rect x="36.5821%" y="325" width="0.0445%" height="15" fill="rgb(240,125,3)" fg:x="822" fg:w="1"/><text x="36.8321%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (84 samples, 3.74%)</title><rect x="36.6711%" y="325" width="3.7383%" height="15" fill="rgb(205,98,50)" fg:x="824" fg:w="84"/><text x="36.9211%" y="335.50">libs..</text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.09%)</title><rect x="40.4094%" y="325" width="0.0890%" height="15" fill="rgb(205,185,37)" fg:x="908" fg:w="2"/><text x="40.6594%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.09%)</title><rect x="40.4094%" y="309" width="0.0890%" height="15" fill="rgb(238,207,15)" fg:x="908" fg:w="2"/><text x="40.6594%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.09%)</title><rect x="40.4094%" y="293" width="0.0890%" height="15" fill="rgb(213,199,42)" fg:x="908" fg:w="2"/><text x="40.6594%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.13%)</title><rect x="40.6765%" y="309" width="0.1335%" height="15" fill="rgb(235,201,11)" fg:x="914" fg:w="3"/><text x="40.9265%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.09%)</title><rect x="40.7210%" y="293" width="0.0890%" height="15" fill="rgb(207,46,11)" fg:x="915" fg:w="2"/><text x="40.9710%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.36%)</title><rect x="40.4984%" y="325" width="0.3560%" height="15" fill="rgb(241,35,35)" fg:x="910" fg:w="8"/><text x="40.7484%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.04%)</title><rect x="40.8100%" y="309" width="0.0445%" height="15" fill="rgb(243,32,47)" fg:x="917" fg:w="1"/><text x="41.0600%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.13%)</title><rect x="40.8545%" y="325" width="0.1335%" height="15" fill="rgb(247,202,23)" fg:x="918" fg:w="3"/><text x="41.1045%" y="335.50"></text></g><g><title>web-server`&lt;T as core::any::Any&gt;::type_id (2 samples, 0.09%)</title><rect x="40.9880%" y="325" width="0.0890%" height="15" fill="rgb(219,102,11)" fg:x="921" fg:w="2"/><text x="41.2380%" y="335.50"></text></g><g><title>web-server`__rust_alloc (1 samples, 0.04%)</title><rect x="41.0770%" y="325" width="0.0445%" height="15" fill="rgb(243,110,44)" fg:x="923" fg:w="1"/><text x="41.3270%" y="335.50"></text></g><g><title>web-server`core::slice::sort::recurse (1 samples, 0.04%)</title><rect x="41.1215%" y="325" width="0.0445%" height="15" fill="rgb(222,74,54)" fg:x="924" fg:w="1"/><text x="41.3715%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="41.4775%" y="261" width="0.0445%" height="15" fill="rgb(216,99,12)" fg:x="932" fg:w="1"/><text x="41.7275%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.22%)</title><rect x="41.3440%" y="309" width="0.2225%" height="15" fill="rgb(226,22,26)" fg:x="929" fg:w="5"/><text x="41.5940%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.22%)</title><rect x="41.3440%" y="293" width="0.2225%" height="15" fill="rgb(217,163,10)" fg:x="929" fg:w="5"/><text x="41.5940%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.22%)</title><rect x="41.3440%" y="277" width="0.2225%" height="15" fill="rgb(213,25,53)" fg:x="929" fg:w="5"/><text x="41.5940%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="41.5220%" y="261" width="0.0445%" height="15" fill="rgb(252,105,26)" fg:x="933" fg:w="1"/><text x="41.7720%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.13%)</title><rect x="41.5665%" y="309" width="0.1335%" height="15" fill="rgb(220,39,43)" fg:x="934" fg:w="3"/><text x="41.8165%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.13%)</title><rect x="41.5665%" y="293" width="0.1335%" height="15" fill="rgb(229,68,48)" fg:x="934" fg:w="3"/><text x="41.8165%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.13%)</title><rect x="41.5665%" y="277" width="0.1335%" height="15" fill="rgb(252,8,32)" fg:x="934" fg:w="3"/><text x="41.8165%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.09%)</title><rect x="41.7000%" y="309" width="0.0890%" height="15" fill="rgb(223,20,43)" fg:x="937" fg:w="2"/><text x="41.9500%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="41.7445%" y="293" width="0.0445%" height="15" fill="rgb(229,81,49)" fg:x="938" fg:w="1"/><text x="41.9945%" y="303.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::binary::FnBoxClone&gt;::clone_box (1 samples, 0.04%)</title><rect x="41.7891%" y="309" width="0.0445%" height="15" fill="rgb(236,28,36)" fg:x="939" fg:w="1"/><text x="42.0391%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="41.9226%" y="293" width="0.0890%" height="15" fill="rgb(249,185,26)" fg:x="942" fg:w="2"/><text x="42.1726%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="41.9226%" y="277" width="0.0890%" height="15" fill="rgb(249,174,33)" fg:x="942" fg:w="2"/><text x="42.1726%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.09%)</title><rect x="41.9226%" y="261" width="0.0890%" height="15" fill="rgb(233,201,37)" fg:x="942" fg:w="2"/><text x="42.1726%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="41.9671%" y="245" width="0.0445%" height="15" fill="rgb(221,78,26)" fg:x="943" fg:w="1"/><text x="42.2171%" y="255.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.40%)</title><rect x="41.8336%" y="309" width="0.4005%" height="15" fill="rgb(250,127,30)" fg:x="940" fg:w="9"/><text x="42.0836%" y="319.50"></text></g><g><title>web-server`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.22%)</title><rect x="42.0116%" y="293" width="0.2225%" height="15" fill="rgb(230,49,44)" fg:x="944" fg:w="5"/><text x="42.2616%" y="303.50"></text></g><g><title>web-server`hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="42.1896%" y="277" width="0.0445%" height="15" fill="rgb(229,67,23)" fg:x="948" fg:w="1"/><text x="42.4396%" y="287.50"></text></g><g><title>web-server`&lt;std::sys::unix::thread::Thread as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="42.2341%" y="309" width="0.0445%" height="15" fill="rgb(249,83,47)" fg:x="949" fg:w="1"/><text x="42.4841%" y="319.50"></text></g><g><title>web-server`hashbrown::map::make_hash (2 samples, 0.09%)</title><rect x="42.2786%" y="309" width="0.0890%" height="15" fill="rgb(215,43,3)" fg:x="950" fg:w="2"/><text x="42.5286%" y="319.50"></text></g><g><title>web-server`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="42.3231%" y="293" width="0.0445%" height="15" fill="rgb(238,154,13)" fg:x="951" fg:w="1"/><text x="42.5731%" y="303.50"></text></g><g><title>web-server`hashbrown::map::make_insert_hash (2 samples, 0.09%)</title><rect x="42.3676%" y="309" width="0.0890%" height="15" fill="rgb(219,56,2)" fg:x="952" fg:w="2"/><text x="42.6176%" y="319.50"></text></g><g><title>web-server`rusty_junctions::bag::Bag&lt;K,V&gt;::add (13 samples, 0.58%)</title><rect x="42.4566%" y="309" width="0.5785%" height="15" fill="rgb(233,0,4)" fg:x="954" fg:w="13"/><text x="42.7066%" y="319.50"></text></g><g><title>web-server`hashbrown::map::make_hash (11 samples, 0.49%)</title><rect x="42.5456%" y="293" width="0.4895%" height="15" fill="rgb(235,30,7)" fg:x="956" fg:w="11"/><text x="42.7956%" y="303.50"></text></g><g><title>web-server`std::thread::Builder::new (1 samples, 0.04%)</title><rect x="43.0352%" y="293" width="0.0445%" height="15" fill="rgb(250,79,13)" fg:x="967" fg:w="1"/><text x="43.2852%" y="303.50"></text></g><g><title>web-server`std::thread::Thread::new (1 samples, 0.04%)</title><rect x="43.0797%" y="293" width="0.0445%" height="15" fill="rgb(211,146,34)" fg:x="968" fg:w="1"/><text x="43.3297%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="43.1242%" y="277" width="0.0890%" height="15" fill="rgb(228,22,38)" fg:x="969" fg:w="2"/><text x="43.3742%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="43.1242%" y="261" width="0.0890%" height="15" fill="rgb(235,168,5)" fg:x="969" fg:w="2"/><text x="43.3742%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.09%)</title><rect x="43.1242%" y="245" width="0.0890%" height="15" fill="rgb(221,155,16)" fg:x="969" fg:w="2"/><text x="43.3742%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="43.1687%" y="229" width="0.0445%" height="15" fill="rgb(215,215,53)" fg:x="970" fg:w="1"/><text x="43.4187%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="43.1687%" y="213" width="0.0445%" height="15" fill="rgb(223,4,10)" fg:x="970" fg:w="1"/><text x="43.4187%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_init (1 samples, 0.04%)</title><rect x="43.2132%" y="277" width="0.0445%" height="15" fill="rgb(234,103,6)" fg:x="971" fg:w="1"/><text x="43.4632%" y="287.50"></text></g><g><title>web-server`DYLD-STUB$$pthread_attr_destroy (1 samples, 0.04%)</title><rect x="43.2577%" y="277" width="0.0445%" height="15" fill="rgb(227,97,0)" fg:x="972" fg:w="1"/><text x="43.5077%" y="287.50"></text></g><g><title>web-server`std::io::stdio::set_output_capture (1 samples, 0.04%)</title><rect x="43.3022%" y="277" width="0.0445%" height="15" fill="rgb(234,150,53)" fg:x="973" fg:w="1"/><text x="43.5522%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (62 samples, 2.76%)</title><rect x="43.4357%" y="261" width="2.7592%" height="15" fill="rgb(228,201,54)" fg:x="976" fg:w="62"/><text x="43.6857%" y="271.50">li..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (48 samples, 2.14%)</title><rect x="48.9097%" y="245" width="2.1362%" height="15" fill="rgb(222,22,37)" fg:x="1099" fg:w="48"/><text x="49.1597%" y="255.50">l..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (32 samples, 1.42%)</title><rect x="51.0458%" y="245" width="1.4241%" height="15" fill="rgb(237,53,32)" fg:x="1147" fg:w="32"/><text x="51.2958%" y="255.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (207 samples, 9.21%)</title><rect x="43.3467%" y="277" width="9.2123%" height="15" fill="rgb(233,25,53)" fg:x="974" fg:w="207"/><text x="43.5967%" y="287.50">web-server`st..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (143 samples, 6.36%)</title><rect x="46.1949%" y="261" width="6.3640%" height="15" fill="rgb(210,40,34)" fg:x="1038" fg:w="143"/><text x="46.4449%" y="271.50">libsyste..</text></g><g><title>libsystem_kernel.dylib`mach_vm_protect (2 samples, 0.09%)</title><rect x="52.4700%" y="245" width="0.0890%" height="15" fill="rgb(241,220,44)" fg:x="1179" fg:w="2"/><text x="52.7200%" y="255.50"></text></g><g><title>web-server`std::sys_common::thread::min_stack (1 samples, 0.04%)</title><rect x="52.5590%" y="277" width="0.0445%" height="15" fill="rgb(235,28,35)" fg:x="1181" fg:w="1"/><text x="52.8090%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="52.6035%" y="261" width="0.0890%" height="15" fill="rgb(210,56,17)" fg:x="1182" fg:w="2"/><text x="52.8535%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="52.6035%" y="245" width="0.0890%" height="15" fill="rgb(224,130,29)" fg:x="1182" fg:w="2"/><text x="52.8535%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.09%)</title><rect x="52.6035%" y="229" width="0.0890%" height="15" fill="rgb(235,212,8)" fg:x="1182" fg:w="2"/><text x="52.8535%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="52.6480%" y="213" width="0.0445%" height="15" fill="rgb(223,33,50)" fg:x="1183" fg:w="1"/><text x="52.8980%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="52.6925%" y="261" width="0.0445%" height="15" fill="rgb(219,149,13)" fg:x="1184" fg:w="1"/><text x="52.9425%" y="271.50"></text></g><g><title>web-server`rusty_junctions::patterns::binary::SendJoinPattern::fire (219 samples, 9.75%)</title><rect x="43.0352%" y="309" width="9.7463%" height="15" fill="rgb(250,156,29)" fg:x="967" fg:w="219"/><text x="43.2852%" y="319.50">web-server`rus..</text></g><g><title>web-server`std::thread::spawn (217 samples, 9.66%)</title><rect x="43.1242%" y="293" width="9.6573%" height="15" fill="rgb(216,193,19)" fg:x="969" fg:w="217"/><text x="43.3742%" y="303.50">web-server`std..</text></g><g><title>web-server`std::thread::Thread::new (4 samples, 0.18%)</title><rect x="52.6035%" y="277" width="0.1780%" height="15" fill="rgb(216,135,14)" fg:x="1182" fg:w="4"/><text x="52.8535%" y="287.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (1 samples, 0.04%)</title><rect x="52.7370%" y="261" width="0.0445%" height="15" fill="rgb(241,47,5)" fg:x="1185" fg:w="1"/><text x="52.9870%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="52.7370%" y="245" width="0.0445%" height="15" fill="rgb(233,42,35)" fg:x="1185" fg:w="1"/><text x="52.9870%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="52.7370%" y="229" width="0.0445%" height="15" fill="rgb(231,13,6)" fg:x="1185" fg:w="1"/><text x="52.9870%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="52.7370%" y="213" width="0.0445%" height="15" fill="rgb(207,181,40)" fg:x="1185" fg:w="1"/><text x="52.9870%" y="223.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (2 samples, 0.09%)</title><rect x="52.7815%" y="293" width="0.0890%" height="15" fill="rgb(254,173,49)" fg:x="1186" fg:w="2"/><text x="53.0315%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (4 samples, 0.18%)</title><rect x="52.8705%" y="293" width="0.1780%" height="15" fill="rgb(221,1,38)" fg:x="1188" fg:w="4"/><text x="53.1205%" y="303.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (1 samples, 0.04%)</title><rect x="53.0485%" y="293" width="0.0445%" height="15" fill="rgb(206,124,46)" fg:x="1192" fg:w="1"/><text x="53.2985%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="53.1820%" y="277" width="0.0890%" height="15" fill="rgb(249,21,11)" fg:x="1195" fg:w="2"/><text x="53.4320%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="53.1820%" y="261" width="0.0890%" height="15" fill="rgb(222,201,40)" fg:x="1195" fg:w="2"/><text x="53.4320%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.09%)</title><rect x="53.1820%" y="245" width="0.0890%" height="15" fill="rgb(235,61,29)" fg:x="1195" fg:w="2"/><text x="53.4320%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="53.2265%" y="229" width="0.0445%" height="15" fill="rgb(219,207,3)" fg:x="1196" fg:w="1"/><text x="53.4765%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (57 samples, 2.54%)</title><rect x="53.2710%" y="261" width="2.5367%" height="15" fill="rgb(222,56,46)" fg:x="1197" fg:w="57"/><text x="53.5210%" y="271.50">li..</text></g><g><title>libsystem_kernel.dylib`mach_vm_map (1 samples, 0.04%)</title><rect x="55.8077%" y="261" width="0.0445%" height="15" fill="rgb(239,76,54)" fg:x="1254" fg:w="1"/><text x="56.0577%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="55.8522%" y="261" width="0.0445%" height="15" fill="rgb(231,124,27)" fg:x="1255" fg:w="1"/><text x="56.1022%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="55.8522%" y="245" width="0.0445%" height="15" fill="rgb(249,195,6)" fg:x="1255" fg:w="1"/><text x="56.1022%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="55.8522%" y="229" width="0.0445%" height="15" fill="rgb(237,174,47)" fg:x="1255" fg:w="1"/><text x="56.1022%" y="239.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_no_tsd (1 samples, 0.04%)</title><rect x="55.8968%" y="261" width="0.0445%" height="15" fill="rgb(206,201,31)" fg:x="1256" fg:w="1"/><text x="56.1468%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (33 samples, 1.47%)</title><rect x="57.0984%" y="245" width="1.4686%" height="15" fill="rgb(231,57,52)" fg:x="1283" fg:w="33"/><text x="57.3484%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (27 samples, 1.20%)</title><rect x="58.5670%" y="245" width="1.2016%" height="15" fill="rgb(248,177,22)" fg:x="1316" fg:w="27"/><text x="58.8170%" y="255.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (147 samples, 6.54%)</title><rect x="53.2710%" y="277" width="6.5421%" height="15" fill="rgb(215,211,37)" fg:x="1197" fg:w="147"/><text x="53.5210%" y="287.50">web-serve..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (87 samples, 3.87%)</title><rect x="55.9413%" y="261" width="3.8718%" height="15" fill="rgb(241,128,51)" fg:x="1257" fg:w="87"/><text x="56.1913%" y="271.50">libs..</text></g><g><title>libsystem_kernel.dylib`mach_vm_map (1 samples, 0.04%)</title><rect x="59.7686%" y="245" width="0.0445%" height="15" fill="rgb(227,165,31)" fg:x="1343" fg:w="1"/><text x="60.0186%" y="255.50"></text></g><g><title>web-server`std::sys_common::thread::min_stack (1 samples, 0.04%)</title><rect x="59.8131%" y="277" width="0.0445%" height="15" fill="rgb(228,167,24)" fg:x="1344" fg:w="1"/><text x="60.0631%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="59.9911%" y="213" width="0.0445%" height="15" fill="rgb(228,143,12)" fg:x="1348" fg:w="1"/><text x="60.2411%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="59.9911%" y="197" width="0.0445%" height="15" fill="rgb(249,149,8)" fg:x="1348" fg:w="1"/><text x="60.2411%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.18%)</title><rect x="59.9021%" y="261" width="0.1780%" height="15" fill="rgb(243,35,44)" fg:x="1346" fg:w="4"/><text x="60.1521%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.18%)</title><rect x="59.9021%" y="245" width="0.1780%" height="15" fill="rgb(246,89,9)" fg:x="1346" fg:w="4"/><text x="60.1521%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.18%)</title><rect x="59.9021%" y="229" width="0.1780%" height="15" fill="rgb(233,213,13)" fg:x="1346" fg:w="4"/><text x="60.1521%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.04%)</title><rect x="60.0356%" y="213" width="0.0445%" height="15" fill="rgb(233,141,41)" fg:x="1349" fg:w="1"/><text x="60.2856%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="60.0801%" y="261" width="0.0445%" height="15" fill="rgb(239,167,4)" fg:x="1350" fg:w="1"/><text x="60.3301%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutexattr_init (1 samples, 0.04%)</title><rect x="60.1246%" y="261" width="0.0445%" height="15" fill="rgb(209,217,16)" fg:x="1351" fg:w="1"/><text x="60.3746%" y="271.50"></text></g><g><title>web-server`rusty_junctions::patterns::unary::SendJoinPattern::fire (167 samples, 7.43%)</title><rect x="52.7815%" y="309" width="7.4321%" height="15" fill="rgb(219,88,35)" fg:x="1186" fg:w="167"/><text x="53.0315%" y="319.50">web-server..</text></g><g><title>web-server`std::thread::spawn (160 samples, 7.12%)</title><rect x="53.0930%" y="293" width="7.1206%" height="15" fill="rgb(220,193,23)" fg:x="1193" fg:w="160"/><text x="53.3430%" y="303.50">web-server..</text></g><g><title>web-server`std::thread::Thread::new (8 samples, 0.36%)</title><rect x="59.8576%" y="277" width="0.3560%" height="15" fill="rgb(230,90,52)" fg:x="1345" fg:w="8"/><text x="60.1076%" y="287.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (1 samples, 0.04%)</title><rect x="60.1691%" y="261" width="0.0445%" height="15" fill="rgb(252,106,19)" fg:x="1352" fg:w="1"/><text x="60.4191%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$os_unfair_lock_lock_with_options (1 samples, 0.04%)</title><rect x="60.3916%" y="261" width="0.0445%" height="15" fill="rgb(206,74,20)" fg:x="1357" fg:w="1"/><text x="60.6416%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.13%)</title><rect x="60.4361%" y="261" width="0.1335%" height="15" fill="rgb(230,138,44)" fg:x="1358" fg:w="3"/><text x="60.6861%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.09%)</title><rect x="60.4806%" y="245" width="0.0890%" height="15" fill="rgb(235,182,43)" fg:x="1359" fg:w="2"/><text x="60.7306%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.09%)</title><rect x="60.4806%" y="229" width="0.0890%" height="15" fill="rgb(242,16,51)" fg:x="1359" fg:w="2"/><text x="60.7306%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="60.5696%" y="261" width="0.0445%" height="15" fill="rgb(248,9,4)" fg:x="1361" fg:w="1"/><text x="60.8196%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="60.5696%" y="245" width="0.0445%" height="15" fill="rgb(210,31,22)" fg:x="1361" fg:w="1"/><text x="60.8196%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="60.5696%" y="229" width="0.0445%" height="15" fill="rgb(239,54,39)" fg:x="1361" fg:w="1"/><text x="60.8196%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="60.6142%" y="261" width="0.0445%" height="15" fill="rgb(230,99,41)" fg:x="1362" fg:w="1"/><text x="60.8642%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.09%)</title><rect x="60.6587%" y="261" width="0.0890%" height="15" fill="rgb(253,106,12)" fg:x="1363" fg:w="2"/><text x="60.9087%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (59 samples, 2.63%)</title><rect x="60.8812%" y="245" width="2.6257%" height="15" fill="rgb(213,46,41)" fg:x="1368" fg:w="59"/><text x="61.1312%" y="255.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (6 samples, 0.27%)</title><rect x="63.5069%" y="245" width="0.2670%" height="15" fill="rgb(215,133,35)" fg:x="1427" fg:w="6"/><text x="63.7569%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (2 samples, 0.09%)</title><rect x="63.6849%" y="229" width="0.0890%" height="15" fill="rgb(213,28,5)" fg:x="1431" fg:w="2"/><text x="63.9349%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::WaitToken::wait (79 samples, 3.52%)</title><rect x="60.3026%" y="277" width="3.5158%" height="15" fill="rgb(215,77,49)" fg:x="1355" fg:w="79"/><text x="60.5526%" y="287.50">web..</text></g><g><title>web-server`std::thread::park (69 samples, 3.07%)</title><rect x="60.7477%" y="261" width="3.0708%" height="15" fill="rgb(248,100,22)" fg:x="1365" fg:w="69"/><text x="60.9977%" y="271.50">web..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.04%)</title><rect x="63.7739%" y="245" width="0.0445%" height="15" fill="rgb(208,67,9)" fg:x="1433" fg:w="1"/><text x="64.0239%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.04%)</title><rect x="63.8184%" y="261" width="0.0445%" height="15" fill="rgb(219,133,21)" fg:x="1434" fg:w="1"/><text x="64.0684%" y="271.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::tokens (2 samples, 0.09%)</title><rect x="63.8184%" y="277" width="0.0890%" height="15" fill="rgb(246,46,29)" fg:x="1434" fg:w="2"/><text x="64.0684%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="63.8629%" y="261" width="0.0445%" height="15" fill="rgb(246,185,52)" fg:x="1435" fg:w="1"/><text x="64.1129%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="63.8629%" y="245" width="0.0445%" height="15" fill="rgb(252,136,11)" fg:x="1435" fg:w="1"/><text x="64.1129%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="63.8629%" y="229" width="0.0445%" height="15" fill="rgb(219,138,53)" fg:x="1435" fg:w="1"/><text x="64.1129%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="64.2635%" y="245" width="0.0445%" height="15" fill="rgb(211,51,23)" fg:x="1444" fg:w="1"/><text x="64.5135%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="64.2635%" y="229" width="0.0445%" height="15" fill="rgb(247,221,28)" fg:x="1444" fg:w="1"/><text x="64.5135%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="64.2635%" y="213" width="0.0445%" height="15" fill="rgb(251,222,45)" fg:x="1444" fg:w="1"/><text x="64.5135%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.18%)</title><rect x="64.3080%" y="245" width="0.1780%" height="15" fill="rgb(217,162,53)" fg:x="1445" fg:w="4"/><text x="64.5580%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.09%)</title><rect x="64.3970%" y="229" width="0.0890%" height="15" fill="rgb(229,93,14)" fg:x="1447" fg:w="2"/><text x="64.6470%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="64.4415%" y="213" width="0.0445%" height="15" fill="rgb(209,67,49)" fg:x="1448" fg:w="1"/><text x="64.6915%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (14 samples, 0.62%)</title><rect x="63.9074%" y="277" width="0.6231%" height="15" fill="rgb(213,87,29)" fg:x="1436" fg:w="14"/><text x="64.1574%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (11 samples, 0.49%)</title><rect x="64.0409%" y="261" width="0.4895%" height="15" fill="rgb(205,151,52)" fg:x="1439" fg:w="11"/><text x="64.2909%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="64.4860%" y="245" width="0.0445%" height="15" fill="rgb(253,215,39)" fg:x="1449" fg:w="1"/><text x="64.7360%" y="255.50"></text></g><g><title>web-server`rusty_junctions::controller::Controller::handle_packets (526 samples, 23.41%)</title><rect x="41.1660%" y="325" width="23.4090%" height="15" fill="rgb(221,220,41)" fg:x="925" fg:w="526"/><text x="41.4160%" y="335.50">web-server`rusty_junctions::controlle..</text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (98 samples, 4.36%)</title><rect x="60.2136%" y="309" width="4.3614%" height="15" fill="rgb(218,133,21)" fg:x="1353" fg:w="98"/><text x="60.4636%" y="319.50">web-s..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (98 samples, 4.36%)</title><rect x="60.2136%" y="293" width="4.3614%" height="15" fill="rgb(221,193,43)" fg:x="1353" fg:w="98"/><text x="60.4636%" y="303.50">web-s..</text></g><g><title>web-server`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="64.5305%" y="277" width="0.0445%" height="15" fill="rgb(240,128,52)" fg:x="1450" fg:w="1"/><text x="64.7805%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="64.7085%" y="309" width="0.0445%" height="15" fill="rgb(253,114,12)" fg:x="1454" fg:w="1"/><text x="64.9585%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="64.7085%" y="293" width="0.0445%" height="15" fill="rgb(215,223,47)" fg:x="1454" fg:w="1"/><text x="64.9585%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="64.7085%" y="277" width="0.0445%" height="15" fill="rgb(248,225,23)" fg:x="1454" fg:w="1"/><text x="64.9585%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.22%)</title><rect x="64.7530%" y="309" width="0.2225%" height="15" fill="rgb(250,108,0)" fg:x="1455" fg:w="5"/><text x="65.0030%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.22%)</title><rect x="64.7530%" y="293" width="0.2225%" height="15" fill="rgb(228,208,7)" fg:x="1455" fg:w="5"/><text x="65.0030%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.22%)</title><rect x="64.7530%" y="277" width="0.2225%" height="15" fill="rgb(244,45,10)" fg:x="1455" fg:w="5"/><text x="65.0030%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.13%)</title><rect x="65.0645%" y="277" width="0.1335%" height="15" fill="rgb(207,125,25)" fg:x="1462" fg:w="3"/><text x="65.3145%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.13%)</title><rect x="65.0645%" y="261" width="0.1335%" height="15" fill="rgb(210,195,18)" fg:x="1462" fg:w="3"/><text x="65.3145%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.09%)</title><rect x="65.1090%" y="245" width="0.0890%" height="15" fill="rgb(249,80,12)" fg:x="1463" fg:w="2"/><text x="65.3590%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="65.1535%" y="229" width="0.0445%" height="15" fill="rgb(221,65,9)" fg:x="1464" fg:w="1"/><text x="65.4035%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (21 samples, 0.93%)</title><rect x="64.9755%" y="309" width="0.9346%" height="15" fill="rgb(235,49,36)" fg:x="1460" fg:w="21"/><text x="65.2255%" y="319.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (21 samples, 0.93%)</title><rect x="64.9755%" y="293" width="0.9346%" height="15" fill="rgb(225,32,20)" fg:x="1460" fg:w="21"/><text x="65.2255%" y="303.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (16 samples, 0.71%)</title><rect x="65.1980%" y="277" width="0.7121%" height="15" fill="rgb(215,141,46)" fg:x="1465" fg:w="16"/><text x="65.4480%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (16 samples, 0.71%)</title><rect x="65.1980%" y="261" width="0.7121%" height="15" fill="rgb(250,160,47)" fg:x="1465" fg:w="16"/><text x="65.4480%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (34 samples, 1.51%)</title><rect x="65.9101%" y="261" width="1.5131%" height="15" fill="rgb(216,222,40)" fg:x="1481" fg:w="34"/><text x="66.1601%" y="271.50"></text></g><g><title>libsystem_c.dylib`nanosleep (46 samples, 2.05%)</title><rect x="65.9101%" y="293" width="2.0472%" height="15" fill="rgb(234,217,39)" fg:x="1481" fg:w="46"/><text x="66.1601%" y="303.50">l..</text></g><g><title>libsystem_kernel.dylib`clock_get_time (46 samples, 2.05%)</title><rect x="65.9101%" y="277" width="2.0472%" height="15" fill="rgb(207,178,40)" fg:x="1481" fg:w="46"/><text x="66.1601%" y="287.50">l..</text></g><g><title>libsystem_kernel.dylib`mach_reply_port (12 samples, 0.53%)</title><rect x="67.4232%" y="261" width="0.5340%" height="15" fill="rgb(221,136,13)" fg:x="1515" fg:w="12"/><text x="67.6732%" y="271.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::binary::transform_send::_{{closure}} (119 samples, 5.30%)</title><rect x="64.5750%" y="325" width="5.2960%" height="15" fill="rgb(249,199,10)" fg:x="1451" fg:w="119"/><text x="64.8250%" y="335.50">web-se..</text></g><g><title>web-server`std::thread::sleep (89 samples, 3.96%)</title><rect x="65.9101%" y="309" width="3.9608%" height="15" fill="rgb(249,222,13)" fg:x="1481" fg:w="89"/><text x="66.1601%" y="319.50">web-..</text></g><g><title>libsystem_kernel.dylib`__semwait_signal (43 samples, 1.91%)</title><rect x="67.9573%" y="293" width="1.9137%" height="15" fill="rgb(244,185,38)" fg:x="1527" fg:w="43"/><text x="68.2073%" y="303.50">l..</text></g><g><title>libsystem_kernel.dylib`__close_nocancel (12 samples, 0.53%)</title><rect x="70.0045%" y="309" width="0.5340%" height="15" fill="rgb(236,202,9)" fg:x="1573" fg:w="12"/><text x="70.2545%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.13%)</title><rect x="70.5385%" y="309" width="0.1335%" height="15" fill="rgb(250,229,37)" fg:x="1585" fg:w="3"/><text x="70.7885%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.09%)</title><rect x="70.5830%" y="293" width="0.0890%" height="15" fill="rgb(206,174,23)" fg:x="1586" fg:w="2"/><text x="70.8330%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.09%)</title><rect x="70.5830%" y="277" width="0.0890%" height="15" fill="rgb(211,33,43)" fg:x="1586" fg:w="2"/><text x="70.8330%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.18%)</title><rect x="70.6720%" y="309" width="0.1780%" height="15" fill="rgb(245,58,50)" fg:x="1588" fg:w="4"/><text x="70.9220%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.09%)</title><rect x="70.7610%" y="293" width="0.0890%" height="15" fill="rgb(244,68,36)" fg:x="1590" fg:w="2"/><text x="71.0110%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="70.8055%" y="277" width="0.0445%" height="15" fill="rgb(232,229,15)" fg:x="1591" fg:w="1"/><text x="71.0555%" y="287.50"></text></g><g><title>web-server`&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="70.8500%" y="309" width="0.0445%" height="15" fill="rgb(254,30,23)" fg:x="1592" fg:w="1"/><text x="71.1000%" y="319.50"></text></g><g><title>web-server`__rdl_dealloc (1 samples, 0.04%)</title><rect x="70.8945%" y="309" width="0.0445%" height="15" fill="rgb(235,160,14)" fg:x="1593" fg:w="1"/><text x="71.1445%" y="319.50"></text></g><g><title>web-server`core::fmt::Formatter::pad (1 samples, 0.04%)</title><rect x="70.9390%" y="309" width="0.0445%" height="15" fill="rgb(212,155,44)" fg:x="1594" fg:w="1"/><text x="71.1890%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="71.0280%" y="293" width="0.0445%" height="15" fill="rgb(226,2,50)" fg:x="1596" fg:w="1"/><text x="71.2780%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="71.0725%" y="293" width="0.0445%" height="15" fill="rgb(234,177,6)" fg:x="1597" fg:w="1"/><text x="71.3225%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (30 samples, 1.34%)</title><rect x="71.2506%" y="261" width="1.3351%" height="15" fill="rgb(217,24,9)" fg:x="1601" fg:w="30"/><text x="71.5006%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (32 samples, 1.42%)</title><rect x="71.2061%" y="277" width="1.4241%" height="15" fill="rgb(220,13,46)" fg:x="1600" fg:w="32"/><text x="71.4561%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_wait (1 samples, 0.04%)</title><rect x="72.5857%" y="261" width="0.0445%" height="15" fill="rgb(239,221,27)" fg:x="1631" fg:w="1"/><text x="72.8357%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (22 samples, 0.98%)</title><rect x="72.6302%" y="261" width="0.9791%" height="15" fill="rgb(222,198,25)" fg:x="1632" fg:w="22"/><text x="72.8802%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (23 samples, 1.02%)</title><rect x="72.6302%" y="277" width="1.0236%" height="15" fill="rgb(211,99,13)" fg:x="1632" fg:w="23"/><text x="72.8802%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_wake (1 samples, 0.04%)</title><rect x="73.6093%" y="261" width="0.0445%" height="15" fill="rgb(232,111,31)" fg:x="1654" fg:w="1"/><text x="73.8593%" y="271.50"></text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="73.6538%" y="277" width="0.0445%" height="15" fill="rgb(245,82,37)" fg:x="1655" fg:w="1"/><text x="73.9038%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.09%)</title><rect x="73.7873%" y="245" width="0.0890%" height="15" fill="rgb(227,149,46)" fg:x="1658" fg:w="2"/><text x="74.0373%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`write (33 samples, 1.47%)</title><rect x="73.9208%" y="229" width="1.4686%" height="15" fill="rgb(218,36,50)" fg:x="1661" fg:w="33"/><text x="74.1708%" y="239.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (37 samples, 1.65%)</title><rect x="73.7873%" y="261" width="1.6466%" height="15" fill="rgb(226,80,48)" fg:x="1658" fg:w="37"/><text x="74.0373%" y="271.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (35 samples, 1.56%)</title><rect x="73.8763%" y="245" width="1.5576%" height="15" fill="rgb(238,224,15)" fg:x="1660" fg:w="35"/><text x="74.1263%" y="255.50"></text></g><g><title>web-server`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.04%)</title><rect x="75.3894%" y="229" width="0.0445%" height="15" fill="rgb(241,136,10)" fg:x="1694" fg:w="1"/><text x="75.6394%" y="239.50"></text></g><g><title>web-server`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.09%)</title><rect x="75.4339%" y="245" width="0.0890%" height="15" fill="rgb(208,32,45)" fg:x="1695" fg:w="2"/><text x="75.6839%" y="255.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="75.5229%" y="245" width="0.0445%" height="15" fill="rgb(207,135,9)" fg:x="1697" fg:w="1"/><text x="75.7729%" y="255.50"></text></g><g><title>web-server`core::fmt::Formatter::debug_struct (2 samples, 0.09%)</title><rect x="75.5674%" y="245" width="0.0890%" height="15" fill="rgb(206,86,44)" fg:x="1698" fg:w="2"/><text x="75.8174%" y="255.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="75.6119%" y="229" width="0.0445%" height="15" fill="rgb(245,177,15)" fg:x="1699" fg:w="1"/><text x="75.8619%" y="239.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="75.6119%" y="213" width="0.0445%" height="15" fill="rgb(206,64,50)" fg:x="1699" fg:w="1"/><text x="75.8619%" y="223.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="75.6119%" y="197" width="0.0445%" height="15" fill="rgb(234,36,40)" fg:x="1699" fg:w="1"/><text x="75.8619%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__getpeername (7 samples, 0.31%)</title><rect x="75.7009%" y="229" width="0.3115%" height="15" fill="rgb(213,64,8)" fg:x="1701" fg:w="7"/><text x="75.9509%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__getsockname (19 samples, 0.85%)</title><rect x="76.0125%" y="229" width="0.8456%" height="15" fill="rgb(210,75,36)" fg:x="1708" fg:w="19"/><text x="76.2625%" y="239.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="76.8580%" y="229" width="0.0445%" height="15" fill="rgb(229,88,21)" fg:x="1727" fg:w="1"/><text x="77.1080%" y="239.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="76.8580%" y="213" width="0.0445%" height="15" fill="rgb(252,204,47)" fg:x="1727" fg:w="1"/><text x="77.1080%" y="223.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="76.8580%" y="197" width="0.0445%" height="15" fill="rgb(208,77,27)" fg:x="1727" fg:w="1"/><text x="77.1080%" y="207.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="76.9915%" y="213" width="0.0445%" height="15" fill="rgb(221,76,26)" fg:x="1730" fg:w="1"/><text x="77.2415%" y="223.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddr as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="77.0360%" y="213" width="0.0445%" height="15" fill="rgb(225,139,18)" fg:x="1731" fg:w="1"/><text x="77.2860%" y="223.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="77.0806%" y="197" width="0.0445%" height="15" fill="rgb(230,137,11)" fg:x="1732" fg:w="1"/><text x="77.3306%" y="207.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="77.0806%" y="181" width="0.0445%" height="15" fill="rgb(212,28,1)" fg:x="1732" fg:w="1"/><text x="77.3306%" y="191.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="77.0806%" y="165" width="0.0445%" height="15" fill="rgb(248,164,17)" fg:x="1732" fg:w="1"/><text x="77.3306%" y="175.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="77.2141%" y="149" width="0.0445%" height="15" fill="rgb(222,171,42)" fg:x="1735" fg:w="1"/><text x="77.4641%" y="159.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="77.2141%" y="133" width="0.0445%" height="15" fill="rgb(243,84,45)" fg:x="1735" fg:w="1"/><text x="77.4641%" y="143.50"></text></g><g><title>web-server`&lt;std::net::ip::Ipv6Addr as core::fmt::Display&gt;::fmt (3 samples, 0.13%)</title><rect x="77.2586%" y="149" width="0.1335%" height="15" fill="rgb(252,49,23)" fg:x="1736" fg:w="3"/><text x="77.5086%" y="159.50"></text></g><g><title>web-server`core::fmt::Formatter::width (1 samples, 0.04%)</title><rect x="77.3921%" y="149" width="0.0445%" height="15" fill="rgb(215,19,7)" fg:x="1739" fg:w="1"/><text x="77.6421%" y="159.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddrV6 as core::fmt::Display&gt;::fmt (8 samples, 0.36%)</title><rect x="77.1251%" y="197" width="0.3560%" height="15" fill="rgb(238,81,41)" fg:x="1733" fg:w="8"/><text x="77.3751%" y="207.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (8 samples, 0.36%)</title><rect x="77.1251%" y="181" width="0.3560%" height="15" fill="rgb(210,199,37)" fg:x="1733" fg:w="8"/><text x="77.3751%" y="191.50"></text></g><g><title>web-server`core::fmt::write (7 samples, 0.31%)</title><rect x="77.1696%" y="165" width="0.3115%" height="15" fill="rgb(244,192,49)" fg:x="1734" fg:w="7"/><text x="77.4196%" y="175.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (1 samples, 0.04%)</title><rect x="77.4366%" y="149" width="0.0445%" height="15" fill="rgb(226,211,11)" fg:x="1740" fg:w="1"/><text x="77.6866%" y="159.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="77.4366%" y="133" width="0.0445%" height="15" fill="rgb(236,162,54)" fg:x="1740" fg:w="1"/><text x="77.6866%" y="143.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="77.4366%" y="117" width="0.0445%" height="15" fill="rgb(220,229,9)" fg:x="1740" fg:w="1"/><text x="77.6866%" y="127.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="77.4366%" y="101" width="0.0445%" height="15" fill="rgb(250,87,22)" fg:x="1740" fg:w="1"/><text x="77.6866%" y="111.50"></text></g><g><title>web-server`&lt;std::sys_common::net::TcpStream as core::fmt::Debug&gt;::fmt (14 samples, 0.62%)</title><rect x="76.9025%" y="229" width="0.6231%" height="15" fill="rgb(239,43,17)" fg:x="1728" fg:w="14"/><text x="77.1525%" y="239.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (10 samples, 0.45%)</title><rect x="77.0806%" y="213" width="0.4450%" height="15" fill="rgb(231,177,25)" fg:x="1732" fg:w="10"/><text x="77.3306%" y="223.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 0.04%)</title><rect x="77.4811%" y="197" width="0.0445%" height="15" fill="rgb(219,179,1)" fg:x="1741" fg:w="1"/><text x="77.7311%" y="207.50"></text></g><g><title>web-server`core::fmt::Formatter::pad_integral (1 samples, 0.04%)</title><rect x="77.4811%" y="181" width="0.0445%" height="15" fill="rgb(238,219,53)" fg:x="1741" fg:w="1"/><text x="77.7311%" y="191.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="77.5256%" y="213" width="0.0445%" height="15" fill="rgb(232,167,36)" fg:x="1742" fg:w="1"/><text x="77.7756%" y="223.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="77.5256%" y="197" width="0.0445%" height="15" fill="rgb(244,19,51)" fg:x="1742" fg:w="1"/><text x="77.7756%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="77.5256%" y="181" width="0.0445%" height="15" fill="rgb(224,6,22)" fg:x="1742" fg:w="1"/><text x="77.7756%" y="191.50"></text></g><g><title>web-server`core::unicode::printable::check (3 samples, 0.13%)</title><rect x="77.5701%" y="213" width="0.1335%" height="15" fill="rgb(224,145,5)" fg:x="1743" fg:w="3"/><text x="77.8201%" y="223.50"></text></g><g><title>web-server`&lt;str as core::fmt::Debug&gt;::fmt (5 samples, 0.22%)</title><rect x="77.5256%" y="229" width="0.2225%" height="15" fill="rgb(234,130,49)" fg:x="1742" fg:w="5"/><text x="77.7756%" y="239.50"></text></g><g><title>web-server`core::unicode::unicode_data::grapheme_extend::lookup (1 samples, 0.04%)</title><rect x="77.7036%" y="213" width="0.0445%" height="15" fill="rgb(254,6,2)" fg:x="1746" fg:w="1"/><text x="77.9536%" y="223.50"></text></g><g><title>web-server`core::fmt::Write::write_char (1 samples, 0.04%)</title><rect x="77.7481%" y="229" width="0.0445%" height="15" fill="rgb(208,96,46)" fg:x="1747" fg:w="1"/><text x="77.9981%" y="239.50"></text></g><g><title>web-server`std::io::stdio::_print (154 samples, 6.85%)</title><rect x="70.9835%" y="309" width="6.8536%" height="15" fill="rgb(239,3,39)" fg:x="1595" fg:w="154"/><text x="71.2335%" y="319.50">web-serve..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (151 samples, 6.72%)</title><rect x="71.1170%" y="293" width="6.7201%" height="15" fill="rgb(233,210,1)" fg:x="1598" fg:w="151"/><text x="71.3670%" y="303.50">web-serve..</text></g><g><title>web-server`core::fmt::write (93 samples, 4.14%)</title><rect x="73.6983%" y="277" width="4.1389%" height="15" fill="rgb(244,137,37)" fg:x="1656" fg:w="93"/><text x="73.9483%" y="287.50">web-s..</text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (54 samples, 2.40%)</title><rect x="75.4339%" y="261" width="2.4032%" height="15" fill="rgb(240,136,2)" fg:x="1695" fg:w="54"/><text x="75.6839%" y="271.50">we..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (49 samples, 2.18%)</title><rect x="75.6564%" y="245" width="2.1807%" height="15" fill="rgb(239,18,37)" fg:x="1700" fg:w="49"/><text x="75.9064%" y="255.50">w..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::finish (1 samples, 0.04%)</title><rect x="77.7926%" y="229" width="0.0445%" height="15" fill="rgb(218,185,22)" fg:x="1748" fg:w="1"/><text x="78.0426%" y="239.50"></text></g><g><title>web-server`web_server::header::Header::from_request (1 samples, 0.04%)</title><rect x="77.8371%" y="309" width="0.0445%" height="15" fill="rgb(225,218,4)" fg:x="1749" fg:w="1"/><text x="78.0871%" y="319.50"></text></g><g><title>libsystem_c.dylib`recv (1 samples, 0.04%)</title><rect x="77.9261%" y="293" width="0.0445%" height="15" fill="rgb(230,182,32)" fg:x="1751" fg:w="1"/><text x="78.1761%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (67 samples, 2.98%)</title><rect x="77.9706%" y="293" width="2.9818%" height="15" fill="rgb(242,56,43)" fg:x="1752" fg:w="67"/><text x="78.2206%" y="303.50">lib..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.22%)</title><rect x="80.9524%" y="293" width="0.2225%" height="15" fill="rgb(233,99,24)" fg:x="1819" fg:w="5"/><text x="81.2024%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="81.1304%" y="277" width="0.0445%" height="15" fill="rgb(234,209,42)" fg:x="1823" fg:w="1"/><text x="81.3804%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="81.1304%" y="261" width="0.0445%" height="15" fill="rgb(227,7,12)" fg:x="1823" fg:w="1"/><text x="81.3804%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.40%)</title><rect x="81.1749%" y="293" width="0.4005%" height="15" fill="rgb(245,203,43)" fg:x="1824" fg:w="9"/><text x="81.4249%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.40%)</title><rect x="81.1749%" y="277" width="0.4005%" height="15" fill="rgb(238,205,33)" fg:x="1824" fg:w="9"/><text x="81.4249%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.18%)</title><rect x="81.3974%" y="261" width="0.1780%" height="15" fill="rgb(231,56,7)" fg:x="1829" fg:w="4"/><text x="81.6474%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.09%)</title><rect x="81.5754%" y="293" width="0.0890%" height="15" fill="rgb(244,186,29)" fg:x="1833" fg:w="2"/><text x="81.8254%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.09%)</title><rect x="81.6644%" y="293" width="0.0890%" height="15" fill="rgb(234,111,31)" fg:x="1835" fg:w="2"/><text x="81.9144%" y="303.50"></text></g><g><title>web-server`DYLD-STUB$$malloc (1 samples, 0.04%)</title><rect x="81.7534%" y="293" width="0.0445%" height="15" fill="rgb(241,149,10)" fg:x="1837" fg:w="1"/><text x="82.0034%" y="303.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="81.7980%" y="293" width="0.0445%" height="15" fill="rgb(249,206,44)" fg:x="1838" fg:w="1"/><text x="82.0480%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="81.8425%" y="277" width="0.0445%" height="15" fill="rgb(251,153,30)" fg:x="1839" fg:w="1"/><text x="82.0925%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (15 samples, 0.67%)</title><rect x="81.9315%" y="261" width="0.6676%" height="15" fill="rgb(239,152,38)" fg:x="1841" fg:w="15"/><text x="82.1815%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (14 samples, 0.62%)</title><rect x="81.9760%" y="245" width="0.6231%" height="15" fill="rgb(249,139,47)" fg:x="1842" fg:w="14"/><text x="82.2260%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (7 samples, 0.31%)</title><rect x="82.5990%" y="261" width="0.3115%" height="15" fill="rgb(244,64,35)" fg:x="1856" fg:w="7"/><text x="82.8490%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (7 samples, 0.31%)</title><rect x="82.5990%" y="245" width="0.3115%" height="15" fill="rgb(216,46,15)" fg:x="1856" fg:w="7"/><text x="82.8490%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`write (49 samples, 2.18%)</title><rect x="82.9551%" y="229" width="2.1807%" height="15" fill="rgb(250,74,19)" fg:x="1864" fg:w="49"/><text x="83.2051%" y="239.50">l..</text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.09%)</title><rect x="85.1357%" y="229" width="0.0890%" height="15" fill="rgb(249,42,33)" fg:x="1913" fg:w="2"/><text x="85.3857%" y="239.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="85.1802%" y="213" width="0.0445%" height="15" fill="rgb(242,149,17)" fg:x="1914" fg:w="1"/><text x="85.4302%" y="223.50"></text></g><g><title>web-server`std::io::stdio::_print (77 samples, 3.43%)</title><rect x="81.8425%" y="293" width="3.4268%" height="15" fill="rgb(244,29,21)" fg:x="1839" fg:w="77"/><text x="82.0925%" y="303.50">web..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (76 samples, 3.38%)</title><rect x="81.8870%" y="277" width="3.3823%" height="15" fill="rgb(220,130,37)" fg:x="1840" fg:w="76"/><text x="82.1370%" y="287.50">web..</text></g><g><title>web-server`core::fmt::write (53 samples, 2.36%)</title><rect x="82.9105%" y="261" width="2.3587%" height="15" fill="rgb(211,67,2)" fg:x="1863" fg:w="53"/><text x="83.1605%" y="271.50">w..</text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (52 samples, 2.31%)</title><rect x="82.9551%" y="245" width="2.3142%" height="15" fill="rgb(235,68,52)" fg:x="1864" fg:w="52"/><text x="83.2051%" y="255.50">w..</text></g><g><title>web-server`DYLD-STUB$$write (1 samples, 0.04%)</title><rect x="85.2247%" y="229" width="0.0445%" height="15" fill="rgb(246,142,3)" fg:x="1915" fg:w="1"/><text x="85.4747%" y="239.50"></text></g><g><title>web-server`std::net::udp::UdpSocket::recv (3 samples, 0.13%)</title><rect x="85.2692%" y="293" width="0.1335%" height="15" fill="rgb(241,25,7)" fg:x="1916" fg:w="3"/><text x="85.5192%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.27%)</title><rect x="85.4028%" y="277" width="0.2670%" height="15" fill="rgb(242,119,39)" fg:x="1919" fg:w="6"/><text x="85.6528%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.27%)</title><rect x="85.4028%" y="261" width="0.2670%" height="15" fill="rgb(241,98,45)" fg:x="1919" fg:w="6"/><text x="85.6528%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.27%)</title><rect x="85.4028%" y="245" width="0.2670%" height="15" fill="rgb(254,28,30)" fg:x="1919" fg:w="6"/><text x="85.6528%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.09%)</title><rect x="85.5808%" y="229" width="0.0890%" height="15" fill="rgb(241,142,54)" fg:x="1923" fg:w="2"/><text x="85.8308%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.04%)</title><rect x="85.6698%" y="277" width="0.0445%" height="15" fill="rgb(222,85,15)" fg:x="1925" fg:w="1"/><text x="85.9198%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="85.7143%" y="277" width="0.0445%" height="15" fill="rgb(210,85,47)" fg:x="1926" fg:w="1"/><text x="85.9643%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="85.7143%" y="261" width="0.0445%" height="15" fill="rgb(224,206,25)" fg:x="1926" fg:w="1"/><text x="85.9643%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="85.7143%" y="245" width="0.0445%" height="15" fill="rgb(243,201,19)" fg:x="1926" fg:w="1"/><text x="85.9643%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="85.7588%" y="277" width="0.0445%" height="15" fill="rgb(236,59,4)" fg:x="1927" fg:w="1"/><text x="86.0088%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="85.8033%" y="277" width="0.0445%" height="15" fill="rgb(254,179,45)" fg:x="1928" fg:w="1"/><text x="86.0533%" y="287.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.09%)</title><rect x="85.8478%" y="277" width="0.0890%" height="15" fill="rgb(226,14,10)" fg:x="1929" fg:w="2"/><text x="86.0978%" y="287.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (2 samples, 0.09%)</title><rect x="85.8478%" y="261" width="0.0890%" height="15" fill="rgb(244,27,41)" fg:x="1929" fg:w="2"/><text x="86.0978%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="85.8478%" y="245" width="0.0890%" height="15" fill="rgb(235,35,32)" fg:x="1929" fg:w="2"/><text x="86.0978%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="85.8478%" y="229" width="0.0890%" height="15" fill="rgb(218,68,31)" fg:x="1929" fg:w="2"/><text x="86.0978%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.09%)</title><rect x="85.8478%" y="213" width="0.0890%" height="15" fill="rgb(207,120,37)" fg:x="1929" fg:w="2"/><text x="86.0978%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="85.8923%" y="197" width="0.0445%" height="15" fill="rgb(227,98,0)" fg:x="1930" fg:w="1"/><text x="86.1423%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="85.8923%" y="181" width="0.0445%" height="15" fill="rgb(207,7,3)" fg:x="1930" fg:w="1"/><text x="86.1423%" y="191.50"></text></g><g><title>web-server`httparse::parse_headers_iter_uninit (2 samples, 0.09%)</title><rect x="86.0258%" y="245" width="0.0890%" height="15" fill="rgb(206,98,19)" fg:x="1933" fg:w="2"/><text x="86.2758%" y="255.50"></text></g><g><title>web-server`httparse::simd::runtime::match_header_value_vectored (1 samples, 0.04%)</title><rect x="86.0703%" y="229" width="0.0445%" height="15" fill="rgb(217,5,26)" fg:x="1934" fg:w="1"/><text x="86.3203%" y="239.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (1 samples, 0.04%)</title><rect x="86.1148%" y="245" width="0.0445%" height="15" fill="rgb(235,190,38)" fg:x="1935" fg:w="1"/><text x="86.3648%" y="255.50"></text></g><g><title>web-server`web_server::header::Header::from_request (23 samples, 1.02%)</title><rect x="85.4028%" y="293" width="1.0236%" height="15" fill="rgb(247,86,24)" fg:x="1919" fg:w="23"/><text x="85.6528%" y="303.50"></text></g><g><title>web-server`httparse::Request::parse (11 samples, 0.49%)</title><rect x="85.9368%" y="277" width="0.4895%" height="15" fill="rgb(205,101,16)" fg:x="1931" fg:w="11"/><text x="86.1868%" y="287.50"></text></g><g><title>web-server`httparse::Request::parse_with_uninit_headers (10 samples, 0.45%)</title><rect x="85.9813%" y="261" width="0.4450%" height="15" fill="rgb(246,168,33)" fg:x="1932" fg:w="10"/><text x="86.2313%" y="271.50"></text></g><g><title>web-server`httparse::simd::runtime::match_uri_vectored (6 samples, 0.27%)</title><rect x="86.1593%" y="245" width="0.2670%" height="15" fill="rgb(231,114,1)" fg:x="1936" fg:w="6"/><text x="86.4093%" y="255.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (5 samples, 0.22%)</title><rect x="86.2038%" y="229" width="0.2225%" height="15" fill="rgb(207,184,53)" fg:x="1937" fg:w="5"/><text x="86.4538%" y="239.50"></text></g><g><title>web-server`web_server::request::Request::from_tcp_stream (193 samples, 8.59%)</title><rect x="77.8816%" y="309" width="8.5892%" height="15" fill="rgb(224,95,51)" fg:x="1750" fg:w="193"/><text x="78.1316%" y="319.50">web-server`w..</text></g><g><title>web-server`web_server::request::Request::respond_err (1 samples, 0.04%)</title><rect x="86.4263%" y="293" width="0.0445%" height="15" fill="rgb(212,188,45)" fg:x="1942" fg:w="1"/><text x="86.6763%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (1 samples, 0.04%)</title><rect x="86.4263%" y="277" width="0.0445%" height="15" fill="rgb(223,154,38)" fg:x="1942" fg:w="1"/><text x="86.6763%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`fcntl (1 samples, 0.04%)</title><rect x="86.5154%" y="293" width="0.0445%" height="15" fill="rgb(251,22,52)" fg:x="1944" fg:w="1"/><text x="86.7654%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="86.5599%" y="293" width="0.0445%" height="15" fill="rgb(229,209,22)" fg:x="1945" fg:w="1"/><text x="86.8099%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="86.5599%" y="277" width="0.0445%" height="15" fill="rgb(234,138,34)" fg:x="1945" fg:w="1"/><text x="86.8099%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="86.5599%" y="261" width="0.0445%" height="15" fill="rgb(212,95,11)" fg:x="1945" fg:w="1"/><text x="86.8099%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="86.6044%" y="293" width="0.0445%" height="15" fill="rgb(240,179,47)" fg:x="1946" fg:w="1"/><text x="86.8544%" y="303.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="86.6489%" y="293" width="0.1335%" height="15" fill="rgb(240,163,11)" fg:x="1947" fg:w="3"/><text x="86.8989%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.13%)</title><rect x="86.6489%" y="277" width="0.1335%" height="15" fill="rgb(236,37,12)" fg:x="1947" fg:w="3"/><text x="86.8989%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.13%)</title><rect x="86.6489%" y="261" width="0.1335%" height="15" fill="rgb(232,164,16)" fg:x="1947" fg:w="3"/><text x="86.8989%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.13%)</title><rect x="86.6489%" y="245" width="0.1335%" height="15" fill="rgb(244,205,15)" fg:x="1947" fg:w="3"/><text x="86.8989%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.09%)</title><rect x="86.6934%" y="229" width="0.0890%" height="15" fill="rgb(223,117,47)" fg:x="1948" fg:w="2"/><text x="86.9434%" y="239.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.09%)</title><rect x="86.7824%" y="293" width="0.0890%" height="15" fill="rgb(244,107,35)" fg:x="1950" fg:w="2"/><text x="87.0324%" y="303.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.09%)</title><rect x="86.7824%" y="277" width="0.0890%" height="15" fill="rgb(205,140,8)" fg:x="1950" fg:w="2"/><text x="87.0324%" y="287.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (2 samples, 0.09%)</title><rect x="86.7824%" y="261" width="0.0890%" height="15" fill="rgb(228,84,46)" fg:x="1950" fg:w="2"/><text x="87.0324%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="86.8269%" y="245" width="0.0445%" height="15" fill="rgb(254,188,9)" fg:x="1951" fg:w="1"/><text x="87.0769%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="86.8269%" y="229" width="0.0445%" height="15" fill="rgb(206,112,54)" fg:x="1951" fg:w="1"/><text x="87.0769%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="86.8269%" y="213" width="0.0445%" height="15" fill="rgb(216,84,49)" fg:x="1951" fg:w="1"/><text x="87.0769%" y="223.50"></text></g><g><title>web-server`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="86.9159%" y="277" width="0.0890%" height="15" fill="rgb(214,194,35)" fg:x="1953" fg:w="2"/><text x="87.1659%" y="287.50"></text></g><g><title>web-server`core::str::pattern::TwoWaySearcher::next (2 samples, 0.09%)</title><rect x="86.9159%" y="261" width="0.0890%" height="15" fill="rgb(249,28,3)" fg:x="1953" fg:w="2"/><text x="87.1659%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.18%)</title><rect x="87.0049%" y="197" width="0.1780%" height="15" fill="rgb(222,56,52)" fg:x="1955" fg:w="4"/><text x="87.2549%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.09%)</title><rect x="87.0939%" y="181" width="0.0890%" height="15" fill="rgb(245,217,50)" fg:x="1957" fg:w="2"/><text x="87.3439%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="87.1384%" y="165" width="0.0445%" height="15" fill="rgb(213,201,24)" fg:x="1958" fg:w="1"/><text x="87.3884%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.40%)</title><rect x="87.0049%" y="213" width="0.4005%" height="15" fill="rgb(248,116,28)" fg:x="1955" fg:w="9"/><text x="87.2549%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.22%)</title><rect x="87.1829%" y="197" width="0.2225%" height="15" fill="rgb(219,72,43)" fg:x="1959" fg:w="5"/><text x="87.4329%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.22%)</title><rect x="87.1829%" y="181" width="0.2225%" height="15" fill="rgb(209,138,14)" fg:x="1959" fg:w="5"/><text x="87.4329%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.13%)</title><rect x="87.2719%" y="165" width="0.1335%" height="15" fill="rgb(222,18,33)" fg:x="1961" fg:w="3"/><text x="87.5219%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="87.4054%" y="213" width="0.0445%" height="15" fill="rgb(213,199,7)" fg:x="1964" fg:w="1"/><text x="87.6554%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (11 samples, 0.49%)</title><rect x="87.0049%" y="245" width="0.4895%" height="15" fill="rgb(250,110,10)" fg:x="1955" fg:w="11"/><text x="87.2549%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (11 samples, 0.49%)</title><rect x="87.0049%" y="229" width="0.4895%" height="15" fill="rgb(248,123,6)" fg:x="1955" fg:w="11"/><text x="87.2549%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="87.4499%" y="213" width="0.0445%" height="15" fill="rgb(206,91,31)" fg:x="1965" fg:w="1"/><text x="87.6999%" y="223.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.53%)</title><rect x="87.0049%" y="277" width="0.5340%" height="15" fill="rgb(211,154,13)" fg:x="1955" fg:w="12"/><text x="87.2549%" y="287.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (12 samples, 0.53%)</title><rect x="87.0049%" y="261" width="0.5340%" height="15" fill="rgb(225,148,7)" fg:x="1955" fg:w="12"/><text x="87.2549%" y="271.50"></text></g><g><title>web-server`__rdl_realloc (1 samples, 0.04%)</title><rect x="87.4944%" y="245" width="0.0445%" height="15" fill="rgb(220,160,43)" fg:x="1966" fg:w="1"/><text x="87.7444%" y="255.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.71%)</title><rect x="86.8714%" y="293" width="0.7121%" height="15" fill="rgb(213,52,39)" fg:x="1952" fg:w="16"/><text x="87.1214%" y="303.50"></text></g><g><title>web-server`core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="87.5389%" y="277" width="0.0445%" height="15" fill="rgb(243,137,7)" fg:x="1967" fg:w="1"/><text x="87.7889%" y="287.50"></text></g><g><title>web-server`DYLD-STUB$$free (1 samples, 0.04%)</title><rect x="87.5834%" y="293" width="0.0445%" height="15" fill="rgb(230,79,13)" fg:x="1968" fg:w="1"/><text x="87.8334%" y="303.50"></text></g><g><title>web-server`__rdl_alloc (1 samples, 0.04%)</title><rect x="87.6279%" y="293" width="0.0445%" height="15" fill="rgb(247,105,23)" fg:x="1969" fg:w="1"/><text x="87.8779%" y="303.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for i64&gt;::fmt (1 samples, 0.04%)</title><rect x="87.7170%" y="277" width="0.0445%" height="15" fill="rgb(223,179,41)" fg:x="1971" fg:w="1"/><text x="87.9670%" y="287.50"></text></g><g><title>web-server`alloc::fmt::format (3 samples, 0.13%)</title><rect x="87.6725%" y="293" width="0.1335%" height="15" fill="rgb(218,9,34)" fg:x="1970" fg:w="3"/><text x="87.9225%" y="303.50"></text></g><g><title>web-server`core::fmt::write (1 samples, 0.04%)</title><rect x="87.7615%" y="277" width="0.0445%" height="15" fill="rgb(222,106,8)" fg:x="1972" fg:w="1"/><text x="88.0115%" y="287.50"></text></g><g><title>web-server`core::fmt::Formatter::pad (1 samples, 0.04%)</title><rect x="87.8060%" y="293" width="0.0445%" height="15" fill="rgb(211,220,0)" fg:x="1973" fg:w="1"/><text x="88.0560%" y="303.50"></text></g><g><title>web-server`core::str::pattern::StrSearcher::new (1 samples, 0.04%)</title><rect x="87.8505%" y="293" width="0.0445%" height="15" fill="rgb(229,52,16)" fg:x="1974" fg:w="1"/><text x="88.1005%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.04%)</title><rect x="87.8505%" y="277" width="0.0445%" height="15" fill="rgb(212,155,18)" fg:x="1974" fg:w="1"/><text x="88.1005%" y="287.50"></text></g><g><title>web-server`std::os::unix::net::stream::UnixStream::try_clone (28 samples, 1.25%)</title><rect x="87.8950%" y="293" width="1.2461%" height="15" fill="rgb(242,21,14)" fg:x="1975" fg:w="28"/><text x="88.1450%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (27 samples, 1.20%)</title><rect x="87.9395%" y="277" width="1.2016%" height="15" fill="rgb(222,19,48)" fg:x="1976" fg:w="27"/><text x="88.1895%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (7 samples, 0.31%)</title><rect x="89.1411%" y="293" width="0.3115%" height="15" fill="rgb(232,45,27)" fg:x="2003" fg:w="7"/><text x="89.3911%" y="303.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (6 samples, 0.27%)</title><rect x="89.1856%" y="277" width="0.2670%" height="15" fill="rgb(249,103,42)" fg:x="2004" fg:w="6"/><text x="89.4356%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (5 samples, 0.22%)</title><rect x="89.2301%" y="261" width="0.2225%" height="15" fill="rgb(246,81,33)" fg:x="2005" fg:w="5"/><text x="89.4801%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.18%)</title><rect x="89.2746%" y="245" width="0.1780%" height="15" fill="rgb(252,33,42)" fg:x="2006" fg:w="4"/><text x="89.5246%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sendto (1 samples, 0.04%)</title><rect x="89.4971%" y="277" width="0.0445%" height="15" fill="rgb(209,212,41)" fg:x="2011" fg:w="1"/><text x="89.7471%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (105 samples, 4.67%)</title><rect x="89.5416%" y="277" width="4.6729%" height="15" fill="rgb(207,154,6)" fg:x="2012" fg:w="105"/><text x="89.7916%" y="287.50">libsy..</text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.09%)</title><rect x="94.2145%" y="277" width="0.0890%" height="15" fill="rgb(223,64,47)" fg:x="2117" fg:w="2"/><text x="94.4645%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="94.2590%" y="261" width="0.0445%" height="15" fill="rgb(211,161,38)" fg:x="2118" fg:w="1"/><text x="94.5090%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="94.3035%" y="277" width="0.0445%" height="15" fill="rgb(219,138,40)" fg:x="2119" fg:w="1"/><text x="94.5535%" y="287.50"></text></g><g><title>web-server`alloc::fmt::format (1 samples, 0.04%)</title><rect x="94.3480%" y="277" width="0.0445%" height="15" fill="rgb(241,228,46)" fg:x="2120" fg:w="1"/><text x="94.5980%" y="287.50"></text></g><g><title>web-server`core::fmt::write (1 samples, 0.04%)</title><rect x="94.3480%" y="261" width="0.0445%" height="15" fill="rgb(223,209,38)" fg:x="2120" fg:w="1"/><text x="94.5980%" y="271.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="94.3480%" y="245" width="0.0445%" height="15" fill="rgb(236,164,45)" fg:x="2120" fg:w="1"/><text x="94.5980%" y="255.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (552 samples, 24.57%)</title><rect x="69.8709%" y="325" width="24.5661%" height="15" fill="rgb(231,15,5)" fg:x="1570" fg:w="552"/><text x="70.1209%" y="335.50">web-server`rusty_junctions::function_tr..</text></g><g><title>web-server`web_server::request::Request::handle_pooled (179 samples, 7.97%)</title><rect x="86.4709%" y="309" width="7.9662%" height="15" fill="rgb(252,35,15)" fg:x="1943" fg:w="179"/><text x="86.7209%" y="319.50">web-server`..</text></g><g><title>web-server`web_server::request::Request::respond_ok (112 samples, 4.98%)</title><rect x="89.4526%" y="293" width="4.9844%" height="15" fill="rgb(248,181,18)" fg:x="2010" fg:w="112"/><text x="89.7026%" y="303.50">web-se..</text></g><g><title>web-server`std::net::udp::UdpSocket::send (1 samples, 0.04%)</title><rect x="94.3925%" y="277" width="0.0445%" height="15" fill="rgb(233,39,42)" fg:x="2121" fg:w="1"/><text x="94.6425%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (2 samples, 0.09%)</title><rect x="94.4370%" y="325" width="0.0890%" height="15" fill="rgb(238,110,33)" fg:x="2122" fg:w="2"/><text x="94.6870%" y="335.50"></text></g><g><title>web-server`web_server::request::Request::from_tcp_stream (1 samples, 0.04%)</title><rect x="94.5260%" y="325" width="0.0445%" height="15" fill="rgb(233,195,10)" fg:x="2124" fg:w="1"/><text x="94.7760%" y="335.50"></text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (1,303 samples, 57.99%)</title><rect x="36.6266%" y="341" width="57.9884%" height="15" fill="rgb(254,105,3)" fg:x="823" fg:w="1303"/><text x="36.8766%" y="351.50">web-server`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>web-server`web_server::request::Request::handle_pooled (1 samples, 0.04%)</title><rect x="94.5705%" y="325" width="0.0445%" height="15" fill="rgb(221,225,9)" fg:x="2125" fg:w="1"/><text x="94.8205%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="94.6150%" y="261" width="0.0445%" height="15" fill="rgb(224,227,45)" fg:x="2126" fg:w="1"/><text x="94.8650%" y="271.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (4 samples, 0.18%)</title><rect x="94.6150%" y="325" width="0.1780%" height="15" fill="rgb(229,198,43)" fg:x="2126" fg:w="4"/><text x="94.8650%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.18%)</title><rect x="94.6150%" y="309" width="0.1780%" height="15" fill="rgb(206,209,35)" fg:x="2126" fg:w="4"/><text x="94.8650%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.18%)</title><rect x="94.6150%" y="293" width="0.1780%" height="15" fill="rgb(245,195,53)" fg:x="2126" fg:w="4"/><text x="94.8650%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.18%)</title><rect x="94.6150%" y="277" width="0.1780%" height="15" fill="rgb(240,92,26)" fg:x="2126" fg:w="4"/><text x="94.8650%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.13%)</title><rect x="94.6595%" y="261" width="0.1335%" height="15" fill="rgb(207,40,23)" fg:x="2127" fg:w="3"/><text x="94.9095%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.09%)</title><rect x="95.3716%" y="293" width="0.0890%" height="15" fill="rgb(223,111,35)" fg:x="2143" fg:w="2"/><text x="95.6216%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.09%)</title><rect x="95.3716%" y="277" width="0.0890%" height="15" fill="rgb(229,147,28)" fg:x="2143" fg:w="2"/><text x="95.6216%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.09%)</title><rect x="95.3716%" y="261" width="0.0890%" height="15" fill="rgb(211,29,28)" fg:x="2143" fg:w="2"/><text x="95.6216%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.09%)</title><rect x="95.3716%" y="245" width="0.0890%" height="15" fill="rgb(228,72,33)" fg:x="2143" fg:w="2"/><text x="95.6216%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="95.4161%" y="229" width="0.0445%" height="15" fill="rgb(205,214,31)" fg:x="2144" fg:w="1"/><text x="95.6661%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_allocate_and_initialize_for_key (16 samples, 0.71%)</title><rect x="94.8821%" y="309" width="0.7121%" height="15" fill="rgb(224,111,15)" fg:x="2132" fg:w="16"/><text x="95.1321%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.13%)</title><rect x="95.4606%" y="293" width="0.1335%" height="15" fill="rgb(253,21,26)" fg:x="2145" fg:w="3"/><text x="95.7106%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (19 samples, 0.85%)</title><rect x="94.7931%" y="325" width="0.8456%" height="15" fill="rgb(245,139,43)" fg:x="2130" fg:w="19"/><text x="95.0431%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="95.5941%" y="309" width="0.0445%" height="15" fill="rgb(252,170,7)" fg:x="2148" fg:w="1"/><text x="95.8441%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="95.6386%" y="325" width="0.0445%" height="15" fill="rgb(231,118,14)" fg:x="2149" fg:w="1"/><text x="95.8886%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="95.6386%" y="309" width="0.0445%" height="15" fill="rgb(238,83,0)" fg:x="2149" fg:w="1"/><text x="95.8886%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.04%)</title><rect x="95.6831%" y="325" width="0.0445%" height="15" fill="rgb(221,39,39)" fg:x="2150" fg:w="1"/><text x="95.9331%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="95.7276%" y="309" width="0.0445%" height="15" fill="rgb(222,119,46)" fg:x="2151" fg:w="1"/><text x="95.9776%" y="319.50"></text></g><g><title>web-server`std::sys_common::thread_info::set (27 samples, 1.20%)</title><rect x="94.6150%" y="341" width="1.2016%" height="15" fill="rgb(222,165,49)" fg:x="2126" fg:w="27"/><text x="94.8650%" y="351.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.09%)</title><rect x="95.7276%" y="325" width="0.0890%" height="15" fill="rgb(219,113,52)" fg:x="2151" fg:w="2"/><text x="95.9776%" y="335.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="95.7721%" y="309" width="0.0445%" height="15" fill="rgb(214,7,15)" fg:x="2152" fg:w="1"/><text x="96.0221%" y="319.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,347 samples, 59.95%)</title><rect x="35.9146%" y="357" width="59.9466%" height="15" fill="rgb(235,32,4)" fg:x="807" fg:w="1347"/><text x="36.1646%" y="367.50">web-server`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>web-server`std::thread::Thread::cname (1 samples, 0.04%)</title><rect x="95.8166%" y="341" width="0.0445%" height="15" fill="rgb(238,90,54)" fg:x="2153" fg:w="1"/><text x="96.0666%" y="351.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (1 samples, 0.04%)</title><rect x="96.9737%" y="341" width="0.0445%" height="15" fill="rgb(213,208,19)" fg:x="2179" fg:w="1"/><text x="97.2237%" y="351.50"></text></g><g><title>libsystem_c.dylib`sysconf (2 samples, 0.09%)</title><rect x="97.0182%" y="341" width="0.0890%" height="15" fill="rgb(233,156,4)" fg:x="2180" fg:w="2"/><text x="97.2682%" y="351.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.04%)</title><rect x="97.0628%" y="325" width="0.0445%" height="15" fill="rgb(207,194,5)" fg:x="2181" fg:w="1"/><text x="97.3128%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (60 samples, 2.67%)</title><rect x="97.1073%" y="341" width="2.6702%" height="15" fill="rgb(206,111,30)" fg:x="2182" fg:w="60"/><text x="97.3573%" y="351.50">li..</text></g><g><title>web-server`std::sys::unix::stack_overflow::imp::make_handler (90 samples, 4.01%)</title><rect x="95.8611%" y="357" width="4.0053%" height="15" fill="rgb(243,70,54)" fg:x="2154" fg:w="90"/><text x="96.1111%" y="367.50">web-..</text></g><g><title>libsystem_kernel.dylib`mmap (2 samples, 0.09%)</title><rect x="99.7775%" y="341" width="0.0890%" height="15" fill="rgb(242,28,8)" fg:x="2242" fg:w="2"/><text x="100.0275%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (1,759 samples, 78.28%)</title><rect x="21.6288%" y="389" width="78.2822%" height="15" fill="rgb(219,106,18)" fg:x="486" fg:w="1759"/><text x="21.8788%" y="399.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (1,517 samples, 67.51%)</title><rect x="32.3988%" y="373" width="67.5122%" height="15" fill="rgb(244,222,10)" fg:x="728" fg:w="1517"/><text x="32.6488%" y="383.50">web-server`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.04%)</title><rect x="99.8665%" y="357" width="0.0445%" height="15" fill="rgb(236,179,52)" fg:x="2244" fg:w="1"/><text x="100.1165%" y="367.50"></text></g><g><title>all (2,247 samples, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(213,23,39)" fg:x="0" fg:w="2247"/><text x="0.2500%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (1,923 samples, 85.58%)</title><rect x="14.4192%" y="405" width="85.5808%" height="15" fill="rgb(238,48,10)" fg:x="324" fg:w="1923"/><text x="14.6692%" y="415.50">libsystem_pthread.dylib`thread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.09%)</title><rect x="99.9110%" y="389" width="0.0890%" height="15" fill="rgb(251,196,23)" fg:x="2245" fg:w="2"/><text x="100.1610%" y="399.50"></text></g></svg></svg>