<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="501.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="3329"><g><title>web-server`__rdl_alloc (1 samples, 0.03%)</title><rect x="0.0000%" y="357" width="0.0300%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.15%)</title><rect x="0.0601%" y="341" width="0.1502%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="5"/><text x="0.3101%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.15%)</title><rect x="0.0601%" y="325" width="0.1502%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="5"/><text x="0.3101%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.15%)</title><rect x="0.0601%" y="309" width="0.1502%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="5"/><text x="0.3101%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="0.1502%" y="293" width="0.0601%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="2"/><text x="0.4002%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__accept (62 samples, 1.86%)</title><rect x="0.3605%" y="309" width="1.8624%" height="15" fill="rgb(232,128,0)" fg:x="12" fg:w="62"/><text x="0.6105%" y="319.50">l..</text></g><g><title>libsystem_kernel.dylib`__ioctl (8 samples, 0.24%)</title><rect x="2.2830%" y="293" width="0.2403%" height="15" fill="rgb(207,160,47)" fg:x="76" fg:w="8"/><text x="2.5330%" y="303.50"></text></g><g><title>web-server`&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 2.34%)</title><rect x="0.2103%" y="341" width="2.3430%" height="15" fill="rgb(228,23,34)" fg:x="7" fg:w="78"/><text x="0.4603%" y="351.50">w..</text></g><g><title>web-server`std::net::tcp::TcpListener::accept (78 samples, 2.34%)</title><rect x="0.2103%" y="325" width="2.3430%" height="15" fill="rgb(218,30,26)" fg:x="7" fg:w="78"/><text x="0.4603%" y="335.50">w..</text></g><g><title>web-server`std::sys::unix::net::Socket::accept (11 samples, 0.33%)</title><rect x="2.2229%" y="309" width="0.3304%" height="15" fill="rgb(220,122,19)" fg:x="74" fg:w="11"/><text x="2.4729%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`ioctl (1 samples, 0.03%)</title><rect x="2.5233%" y="293" width="0.0300%" height="15" fill="rgb(250,228,42)" fg:x="84" fg:w="1"/><text x="2.7733%" y="303.50"></text></g><g><title>web-server`rusty_junctions::junction::Junction::new_channel_id (1 samples, 0.03%)</title><rect x="2.5533%" y="341" width="0.0300%" height="15" fill="rgb(240,193,28)" fg:x="85" fg:w="1"/><text x="2.8033%" y="351.50"></text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (1 samples, 0.03%)</title><rect x="2.5533%" y="325" width="0.0300%" height="15" fill="rgb(216,20,37)" fg:x="85" fg:w="1"/><text x="2.8033%" y="335.50"></text></g><g><title>web-server`std::sync::mpsc::oneshot::Packet&lt;T&gt;::recv (1 samples, 0.03%)</title><rect x="2.5533%" y="309" width="0.0300%" height="15" fill="rgb(206,188,39)" fg:x="85" fg:w="1"/><text x="2.8033%" y="319.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::WaitToken::wait (1 samples, 0.03%)</title><rect x="2.5533%" y="293" width="0.0300%" height="15" fill="rgb(217,207,13)" fg:x="85" fg:w="1"/><text x="2.8033%" y="303.50"></text></g><g><title>web-server`std::thread::park (1 samples, 0.03%)</title><rect x="2.5533%" y="277" width="0.0300%" height="15" fill="rgb(231,73,38)" fg:x="85" fg:w="1"/><text x="2.8033%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1 samples, 0.03%)</title><rect x="2.5533%" y="261" width="0.0300%" height="15" fill="rgb(225,20,46)" fg:x="85" fg:w="1"/><text x="2.8033%" y="271.50"></text></g><g><title>web-server`std::net::tcp::TcpListener::bind (1 samples, 0.03%)</title><rect x="2.5834%" y="341" width="0.0300%" height="15" fill="rgb(210,31,41)" fg:x="86" fg:w="1"/><text x="2.8334%" y="351.50"></text></g><g><title>web-server`&lt;str as std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (1 samples, 0.03%)</title><rect x="2.5834%" y="325" width="0.0300%" height="15" fill="rgb(221,200,47)" fg:x="86" fg:w="1"/><text x="2.8334%" y="335.50"></text></g><g><title>web-server`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (1 samples, 0.03%)</title><rect x="2.5834%" y="309" width="0.0300%" height="15" fill="rgb(226,26,5)" fg:x="86" fg:w="1"/><text x="2.8334%" y="319.50"></text></g><g><title>web-server`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (1 samples, 0.03%)</title><rect x="2.5834%" y="293" width="0.0300%" height="15" fill="rgb(249,33,26)" fg:x="86" fg:w="1"/><text x="2.8334%" y="303.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (1 samples, 0.03%)</title><rect x="2.5834%" y="277" width="0.0300%" height="15" fill="rgb(235,183,28)" fg:x="86" fg:w="1"/><text x="2.8334%" y="287.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo (1 samples, 0.03%)</title><rect x="2.5834%" y="261" width="0.0300%" height="15" fill="rgb(221,5,38)" fg:x="86" fg:w="1"/><text x="2.8334%" y="271.50"></text></g><g><title>libsystem_info.dylib`_gai_sort_list (1 samples, 0.03%)</title><rect x="2.5834%" y="245" width="0.0300%" height="15" fill="rgb(247,18,42)" fg:x="86" fg:w="1"/><text x="2.8334%" y="255.50"></text></g><g><title>libsystem_c.dylib`_qsort (1 samples, 0.03%)</title><rect x="2.5834%" y="229" width="0.0300%" height="15" fill="rgb(241,131,45)" fg:x="86" fg:w="1"/><text x="2.8334%" y="239.50"></text></g><g><title>libsystem_c.dylib`_isort (1 samples, 0.03%)</title><rect x="2.5834%" y="213" width="0.0300%" height="15" fill="rgb(249,31,29)" fg:x="86" fg:w="1"/><text x="2.8334%" y="223.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare (1 samples, 0.03%)</title><rect x="2.5834%" y="197" width="0.0300%" height="15" fill="rgb(225,111,53)" fg:x="86" fg:w="1"/><text x="2.8334%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.03%)</title><rect x="2.5834%" y="181" width="0.0300%" height="15" fill="rgb(238,160,17)" fg:x="86" fg:w="1"/><text x="2.8334%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.03%)</title><rect x="2.5834%" y="165" width="0.0300%" height="15" fill="rgb(214,148,48)" fg:x="86" fg:w="1"/><text x="2.8334%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.03%)</title><rect x="2.5834%" y="149" width="0.0300%" height="15" fill="rgb(232,36,49)" fg:x="86" fg:w="1"/><text x="2.8334%" y="159.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare_init_once (1 samples, 0.03%)</title><rect x="2.5834%" y="133" width="0.0300%" height="15" fill="rgb(209,103,24)" fg:x="86" fg:w="1"/><text x="2.8334%" y="143.50"></text></g><g><title>libsystem_trace.dylib`os_log_create (1 samples, 0.03%)</title><rect x="2.5834%" y="117" width="0.0300%" height="15" fill="rgb(229,88,8)" fg:x="86" fg:w="1"/><text x="2.8334%" y="127.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.03%)</title><rect x="2.5834%" y="101" width="0.0300%" height="15" fill="rgb(213,181,19)" fg:x="86" fg:w="1"/><text x="2.8334%" y="111.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.03%)</title><rect x="2.5834%" y="85" width="0.0300%" height="15" fill="rgb(254,191,54)" fg:x="86" fg:w="1"/><text x="2.8334%" y="95.50"></text></g><g><title>libsystem_trace.dylib`_os_trace_init_slow (1 samples, 0.03%)</title><rect x="2.5834%" y="69" width="0.0300%" height="15" fill="rgb(241,83,37)" fg:x="86" fg:w="1"/><text x="2.8334%" y="79.50"></text></g><g><title>libdispatch.dylib`firehose_client_reconnect (1 samples, 0.03%)</title><rect x="2.5834%" y="53" width="0.0300%" height="15" fill="rgb(233,36,39)" fg:x="86" fg:w="1"/><text x="2.8334%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_construct_trap (1 samples, 0.03%)</title><rect x="2.5834%" y="37" width="0.0300%" height="15" fill="rgb(226,3,54)" fg:x="86" fg:w="1"/><text x="2.8334%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="2.6434%" y="309" width="0.0300%" height="15" fill="rgb(245,192,40)" fg:x="88" fg:w="1"/><text x="2.8934%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="2.6434%" y="293" width="0.0300%" height="15" fill="rgb(238,167,29)" fg:x="88" fg:w="1"/><text x="2.8934%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="2.6434%" y="277" width="0.0300%" height="15" fill="rgb(232,182,51)" fg:x="88" fg:w="1"/><text x="2.8934%" y="287.50"></text></g><g><title>0x1 (95 samples, 2.85%)</title><rect x="0.0000%" y="453" width="2.8537%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="95"/><text x="0.2500%" y="463.50">0x1</text></g><g><title>libdyld.dylib`start (95 samples, 2.85%)</title><rect x="0.0000%" y="437" width="2.8537%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="95"/><text x="0.2500%" y="447.50">li..</text></g><g><title>web-server`main (95 samples, 2.85%)</title><rect x="0.0000%" y="421" width="2.8537%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="95"/><text x="0.2500%" y="431.50">we..</text></g><g><title>web-server`std::rt::lang_start_internal (95 samples, 2.85%)</title><rect x="0.0000%" y="405" width="2.8537%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="95"/><text x="0.2500%" y="415.50">we..</text></g><g><title>web-server`std::rt::lang_start::_{{closure}} (95 samples, 2.85%)</title><rect x="0.0000%" y="389" width="2.8537%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="95"/><text x="0.2500%" y="399.50">we..</text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (95 samples, 2.85%)</title><rect x="0.0000%" y="373" width="2.8537%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="95"/><text x="0.2500%" y="383.50">we..</text></g><g><title>web-server`web_server::web_server::WebServer::start_with_single_handler (94 samples, 2.82%)</title><rect x="0.0300%" y="357" width="2.8237%" height="15" fill="rgb(218,138,4)" fg:x="1" fg:w="94"/><text x="0.2800%" y="367.50">we..</text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (8 samples, 0.24%)</title><rect x="2.6134%" y="341" width="0.2403%" height="15" fill="rgb(250,191,14)" fg:x="87" fg:w="8"/><text x="2.8634%" y="351.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (8 samples, 0.24%)</title><rect x="2.6134%" y="325" width="0.2403%" height="15" fill="rgb(239,60,40)" fg:x="87" fg:w="8"/><text x="2.8634%" y="335.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (6 samples, 0.18%)</title><rect x="2.6735%" y="309" width="0.1802%" height="15" fill="rgb(206,27,48)" fg:x="89" fg:w="6"/><text x="2.9235%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (6 samples, 0.18%)</title><rect x="2.6735%" y="293" width="0.1802%" height="15" fill="rgb(225,35,8)" fg:x="89" fg:w="6"/><text x="2.9235%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (47 samples, 1.41%)</title><rect x="2.8537%" y="453" width="1.4118%" height="15" fill="rgb(250,213,24)" fg:x="95" fg:w="47"/><text x="3.1037%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__thread_selfid (8 samples, 0.24%)</title><rect x="8.7414%" y="437" width="0.2403%" height="15" fill="rgb(247,123,22)" fg:x="291" fg:w="8"/><text x="8.9914%" y="447.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sigaltstack (1 samples, 0.03%)</title><rect x="9.0718%" y="421" width="0.0300%" height="15" fill="rgb(231,138,38)" fg:x="302" fg:w="1"/><text x="9.3218%" y="431.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (1 samples, 0.03%)</title><rect x="9.1018%" y="421" width="0.0300%" height="15" fill="rgb(231,145,46)" fg:x="303" fg:w="1"/><text x="9.3518%" y="431.50"></text></g><g><title>libsystem_c.dylib`sysconf (2 samples, 0.06%)</title><rect x="9.1319%" y="421" width="0.0601%" height="15" fill="rgb(251,118,11)" fg:x="304" fg:w="2"/><text x="9.3819%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__disable_threadsignal (12 samples, 0.36%)</title><rect x="9.1919%" y="421" width="0.3605%" height="15" fill="rgb(217,147,25)" fg:x="306" fg:w="12"/><text x="9.4419%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (81 samples, 2.43%)</title><rect x="9.5524%" y="421" width="2.4332%" height="15" fill="rgb(247,81,37)" fg:x="318" fg:w="81"/><text x="9.8024%" y="431.50">li..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (12 samples, 0.36%)</title><rect x="11.9856%" y="421" width="0.3605%" height="15" fill="rgb(209,12,38)" fg:x="399" fg:w="12"/><text x="12.2356%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`munmap (1 samples, 0.03%)</title><rect x="12.3460%" y="421" width="0.0300%" height="15" fill="rgb(227,1,9)" fg:x="411" fg:w="1"/><text x="12.5960%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_free (1 samples, 0.03%)</title><rect x="12.4061%" y="405" width="0.0300%" height="15" fill="rgb(248,47,43)" fg:x="413" fg:w="1"/><text x="12.6561%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="12.4362%" y="405" width="0.0300%" height="15" fill="rgb(221,10,30)" fg:x="414" fg:w="1"/><text x="12.6862%" y="415.50"></text></g><g><title>libdyld.dylib`DYLD-STUB$$pthread_getspecific (1 samples, 0.03%)</title><rect x="12.7366%" y="389" width="0.0300%" height="15" fill="rgb(210,229,1)" fg:x="424" fg:w="1"/><text x="12.9866%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="12.7666%" y="373" width="0.0300%" height="15" fill="rgb(222,148,37)" fg:x="425" fg:w="1"/><text x="13.0166%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="12.8567%" y="357" width="0.0300%" height="15" fill="rgb(234,67,33)" fg:x="428" fg:w="1"/><text x="13.1067%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.09%)</title><rect x="12.8868%" y="357" width="0.0901%" height="15" fill="rgb(247,98,35)" fg:x="429" fg:w="3"/><text x="13.1368%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.06%)</title><rect x="12.9168%" y="341" width="0.0601%" height="15" fill="rgb(247,138,52)" fg:x="430" fg:w="2"/><text x="13.1668%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.06%)</title><rect x="12.9168%" y="325" width="0.0601%" height="15" fill="rgb(213,79,30)" fg:x="430" fg:w="2"/><text x="13.1668%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.09%)</title><rect x="12.9769%" y="357" width="0.0901%" height="15" fill="rgb(246,177,23)" fg:x="432" fg:w="3"/><text x="13.2269%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="13.0369%" y="341" width="0.0300%" height="15" fill="rgb(230,62,27)" fg:x="434" fg:w="1"/><text x="13.2869%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="13.0670%" y="341" width="0.0300%" height="15" fill="rgb(216,154,8)" fg:x="435" fg:w="1"/><text x="13.3170%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="13.0970%" y="341" width="0.0300%" height="15" fill="rgb(244,35,45)" fg:x="436" fg:w="1"/><text x="13.3470%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.09%)</title><rect x="13.2472%" y="309" width="0.0901%" height="15" fill="rgb(251,115,12)" fg:x="441" fg:w="3"/><text x="13.4972%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_finalize_list (20 samples, 0.60%)</title><rect x="12.7666%" y="389" width="0.6008%" height="15" fill="rgb(240,54,50)" fg:x="425" fg:w="20"/><text x="13.0166%" y="399.50"></text></g><g><title>web-server`std::sys::unix::thread_local_dtor::register_dtor::run_dtors (19 samples, 0.57%)</title><rect x="12.7966%" y="373" width="0.5707%" height="15" fill="rgb(233,84,52)" fg:x="426" fg:w="19"/><text x="13.0466%" y="383.50"></text></g><g><title>web-server`alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.30%)</title><rect x="13.0670%" y="357" width="0.3004%" height="15" fill="rgb(207,117,47)" fg:x="435" fg:w="10"/><text x="13.3170%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.24%)</title><rect x="13.1271%" y="341" width="0.2403%" height="15" fill="rgb(249,43,39)" fg:x="437" fg:w="8"/><text x="13.3771%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.15%)</title><rect x="13.2172%" y="325" width="0.1502%" height="15" fill="rgb(209,38,44)" fg:x="440" fg:w="5"/><text x="13.4672%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="13.3373%" y="309" width="0.0300%" height="15" fill="rgb(236,212,23)" fg:x="444" fg:w="1"/><text x="13.5873%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.21%)</title><rect x="13.3674%" y="389" width="0.2103%" height="15" fill="rgb(242,79,21)" fg:x="445" fg:w="7"/><text x="13.6174%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.12%)</title><rect x="13.4575%" y="373" width="0.1202%" height="15" fill="rgb(211,96,35)" fg:x="448" fg:w="4"/><text x="13.7075%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="13.5476%" y="357" width="0.0300%" height="15" fill="rgb(253,215,40)" fg:x="451" fg:w="1"/><text x="13.7976%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (41 samples, 1.23%)</title><rect x="12.3761%" y="421" width="1.2316%" height="15" fill="rgb(211,81,21)" fg:x="412" fg:w="41"/><text x="12.6261%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (38 samples, 1.14%)</title><rect x="12.4662%" y="405" width="1.1415%" height="15" fill="rgb(208,190,38)" fg:x="415" fg:w="38"/><text x="12.7162%" y="415.50"></text></g><g><title>web-server`std::sys::unix::thread_local_dtor::register_dtor::run_dtors (1 samples, 0.03%)</title><rect x="13.5777%" y="389" width="0.0300%" height="15" fill="rgb(235,213,38)" fg:x="452" fg:w="1"/><text x="13.8277%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (41 samples, 1.23%)</title><rect x="13.6077%" y="389" width="1.2316%" height="15" fill="rgb(237,122,38)" fg:x="453" fg:w="41"/><text x="13.8577%" y="399.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.03%)</title><rect x="14.8393%" y="389" width="0.0300%" height="15" fill="rgb(244,218,35)" fg:x="494" fg:w="1"/><text x="15.0893%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="14.9294%" y="373" width="0.0300%" height="15" fill="rgb(240,68,47)" fg:x="497" fg:w="1"/><text x="15.1794%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_join$NOCANCEL (60 samples, 1.80%)</title><rect x="13.6077%" y="421" width="1.8023%" height="15" fill="rgb(210,16,53)" fg:x="453" fg:w="60"/><text x="13.8577%" y="431.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (60 samples, 1.80%)</title><rect x="13.6077%" y="405" width="1.8023%" height="15" fill="rgb(235,124,12)" fg:x="453" fg:w="60"/><text x="13.8577%" y="415.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (18 samples, 0.54%)</title><rect x="14.8693%" y="389" width="0.5407%" height="15" fill="rgb(224,169,11)" fg:x="495" fg:w="18"/><text x="15.1193%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mig_dealloc_reply_port (15 samples, 0.45%)</title><rect x="14.9594%" y="373" width="0.4506%" height="15" fill="rgb(250,166,2)" fg:x="498" fg:w="15"/><text x="15.2094%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (15 samples, 0.45%)</title><rect x="14.9594%" y="357" width="0.4506%" height="15" fill="rgb(242,216,29)" fg:x="498" fg:w="15"/><text x="15.2094%" y="367.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.06%)</title><rect x="15.4100%" y="421" width="0.0601%" height="15" fill="rgb(230,116,27)" fg:x="513" fg:w="2"/><text x="15.6600%" y="431.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sigaltstack (1 samples, 0.03%)</title><rect x="15.5302%" y="405" width="0.0300%" height="15" fill="rgb(228,99,48)" fg:x="517" fg:w="1"/><text x="15.7802%" y="415.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (1 samples, 0.03%)</title><rect x="15.5602%" y="405" width="0.0300%" height="15" fill="rgb(253,11,6)" fg:x="518" fg:w="1"/><text x="15.8102%" y="415.50"></text></g><g><title>libsystem_c.dylib`sysconf (5 samples, 0.15%)</title><rect x="15.5903%" y="405" width="0.1502%" height="15" fill="rgb(247,143,39)" fg:x="519" fg:w="5"/><text x="15.8403%" y="415.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.03%)</title><rect x="15.7104%" y="389" width="0.0300%" height="15" fill="rgb(236,97,10)" fg:x="523" fg:w="1"/><text x="15.9604%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (34 samples, 1.02%)</title><rect x="15.7405%" y="405" width="1.0213%" height="15" fill="rgb(233,208,19)" fg:x="524" fg:w="34"/><text x="15.9905%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__sigaltstack (25 samples, 0.75%)</title><rect x="16.7618%" y="405" width="0.7510%" height="15" fill="rgb(216,164,2)" fg:x="558" fg:w="25"/><text x="17.0118%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="17.5128%" y="405" width="0.0300%" height="15" fill="rgb(220,129,5)" fg:x="583" fg:w="1"/><text x="17.7628%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="17.5128%" y="389" width="0.0300%" height="15" fill="rgb(242,17,10)" fg:x="583" fg:w="1"/><text x="17.7628%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="17.5128%" y="373" width="0.0300%" height="15" fill="rgb(242,107,0)" fg:x="583" fg:w="1"/><text x="17.7628%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.21%)</title><rect x="17.5428%" y="405" width="0.2103%" height="15" fill="rgb(251,28,31)" fg:x="584" fg:w="7"/><text x="17.7928%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.09%)</title><rect x="17.6630%" y="389" width="0.0901%" height="15" fill="rgb(233,223,10)" fg:x="588" fg:w="3"/><text x="17.9130%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.06%)</title><rect x="17.6930%" y="373" width="0.0601%" height="15" fill="rgb(215,21,27)" fg:x="589" fg:w="2"/><text x="17.9430%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.06%)</title><rect x="17.7531%" y="389" width="0.0601%" height="15" fill="rgb(232,23,21)" fg:x="591" fg:w="2"/><text x="18.0031%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="17.8132%" y="389" width="0.0300%" height="15" fill="rgb(244,5,23)" fg:x="593" fg:w="1"/><text x="18.0632%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.09%)</title><rect x="17.8432%" y="389" width="0.0901%" height="15" fill="rgb(226,81,46)" fg:x="594" fg:w="3"/><text x="18.0932%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="17.9033%" y="373" width="0.0300%" height="15" fill="rgb(247,70,30)" fg:x="596" fg:w="1"/><text x="18.1533%" y="383.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::unary::transform_send&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},std::net::tcp::TcpStream&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="17.9333%" y="389" width="0.0300%" height="15" fill="rgb(212,68,19)" fg:x="597" fg:w="1"/><text x="18.1833%" y="399.50"></text></g><g><title>web-server`std::sys::unix::thread::guard::current (3 samples, 0.09%)</title><rect x="17.9634%" y="389" width="0.0901%" height="15" fill="rgb(240,187,13)" fg:x="598" fg:w="3"/><text x="18.2134%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stacksize_np (2 samples, 0.06%)</title><rect x="17.9934%" y="373" width="0.0601%" height="15" fill="rgb(223,113,26)" fg:x="599" fg:w="2"/><text x="18.2434%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (252 samples, 7.57%)</title><rect x="18.0535%" y="373" width="7.5698%" height="15" fill="rgb(206,192,2)" fg:x="601" fg:w="252"/><text x="18.3035%" y="383.50">libsystem_..</text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.12%)</title><rect x="25.6233%" y="373" width="0.1202%" height="15" fill="rgb(241,108,4)" fg:x="853" fg:w="4"/><text x="25.8733%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.09%)</title><rect x="25.6533%" y="357" width="0.0901%" height="15" fill="rgb(247,173,49)" fg:x="854" fg:w="3"/><text x="25.9033%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.09%)</title><rect x="25.6533%" y="341" width="0.0901%" height="15" fill="rgb(224,114,35)" fg:x="854" fg:w="3"/><text x="25.9033%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.12%)</title><rect x="25.7435%" y="373" width="0.1202%" height="15" fill="rgb(245,159,27)" fg:x="857" fg:w="4"/><text x="25.9935%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.06%)</title><rect x="25.8035%" y="357" width="0.0601%" height="15" fill="rgb(245,172,44)" fg:x="859" fg:w="2"/><text x="26.0535%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.06%)</title><rect x="25.8035%" y="341" width="0.0601%" height="15" fill="rgb(236,23,11)" fg:x="859" fg:w="2"/><text x="26.0535%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="25.8636%" y="373" width="0.0300%" height="15" fill="rgb(205,117,38)" fg:x="861" fg:w="1"/><text x="26.1136%" y="383.50"></text></g><g><title>web-server`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.03%)</title><rect x="25.8937%" y="373" width="0.0300%" height="15" fill="rgb(237,72,25)" fg:x="862" fg:w="1"/><text x="26.1437%" y="383.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="25.9237%" y="357" width="0.0300%" height="15" fill="rgb(244,70,9)" fg:x="863" fg:w="1"/><text x="26.1737%" y="367.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::unary::transform_send&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},std::net::tcp::TcpStream&gt;::{{closure}}&gt; (2 samples, 0.06%)</title><rect x="25.9237%" y="373" width="0.0601%" height="15" fill="rgb(217,125,39)" fg:x="863" fg:w="2"/><text x="26.1737%" y="383.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (1 samples, 0.03%)</title><rect x="25.9537%" y="357" width="0.0300%" height="15" fill="rgb(235,36,10)" fg:x="864" fg:w="1"/><text x="26.2037%" y="367.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (2 samples, 0.06%)</title><rect x="25.9838%" y="373" width="0.0601%" height="15" fill="rgb(251,123,47)" fg:x="865" fg:w="2"/><text x="26.2338%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.15%)</title><rect x="26.4043%" y="357" width="0.1502%" height="15" fill="rgb(221,13,13)" fg:x="879" fg:w="5"/><text x="26.6543%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.09%)</title><rect x="26.4644%" y="341" width="0.0901%" height="15" fill="rgb(238,131,9)" fg:x="881" fg:w="3"/><text x="26.7144%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.09%)</title><rect x="26.4644%" y="325" width="0.0901%" height="15" fill="rgb(211,50,8)" fg:x="881" fg:w="3"/><text x="26.7144%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.06%)</title><rect x="26.4944%" y="309" width="0.0601%" height="15" fill="rgb(245,182,24)" fg:x="882" fg:w="2"/><text x="26.7444%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.03%)</title><rect x="26.5545%" y="357" width="0.0300%" height="15" fill="rgb(242,14,37)" fg:x="884" fg:w="1"/><text x="26.8045%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.15%)</title><rect x="26.5846%" y="357" width="0.1502%" height="15" fill="rgb(246,228,12)" fg:x="885" fg:w="5"/><text x="26.8346%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.15%)</title><rect x="26.5846%" y="341" width="0.1502%" height="15" fill="rgb(213,55,15)" fg:x="885" fg:w="5"/><text x="26.8346%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.12%)</title><rect x="26.6146%" y="325" width="0.1202%" height="15" fill="rgb(209,9,3)" fg:x="886" fg:w="4"/><text x="26.8646%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="26.7948%" y="341" width="0.0300%" height="15" fill="rgb(230,59,30)" fg:x="892" fg:w="1"/><text x="27.0448%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.18%)</title><rect x="26.7348%" y="357" width="0.1802%" height="15" fill="rgb(209,121,21)" fg:x="890" fg:w="6"/><text x="26.9848%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.09%)</title><rect x="26.8249%" y="341" width="0.0901%" height="15" fill="rgb(220,109,13)" fg:x="893" fg:w="3"/><text x="27.0749%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="26.8850%" y="325" width="0.0300%" height="15" fill="rgb(232,18,1)" fg:x="895" fg:w="1"/><text x="27.1350%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="26.9150%" y="357" width="0.0300%" height="15" fill="rgb(215,41,42)" fg:x="896" fg:w="1"/><text x="27.1650%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (1 samples, 0.03%)</title><rect x="26.9450%" y="357" width="0.0300%" height="15" fill="rgb(224,123,36)" fg:x="897" fg:w="1"/><text x="27.1950%" y="367.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::binary::FnBoxClone&gt;::clone_box (1 samples, 0.03%)</title><rect x="26.9751%" y="357" width="0.0300%" height="15" fill="rgb(240,125,3)" fg:x="898" fg:w="1"/><text x="27.2251%" y="367.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (1 samples, 0.03%)</title><rect x="27.0051%" y="357" width="0.0300%" height="15" fill="rgb(205,98,50)" fg:x="899" fg:w="1"/><text x="27.2551%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="27.0952%" y="309" width="0.0300%" height="15" fill="rgb(205,185,37)" fg:x="902" fg:w="1"/><text x="27.3452%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.18%)</title><rect x="27.0351%" y="341" width="0.1802%" height="15" fill="rgb(238,207,15)" fg:x="900" fg:w="6"/><text x="27.2851%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.15%)</title><rect x="27.0652%" y="325" width="0.1502%" height="15" fill="rgb(213,199,42)" fg:x="901" fg:w="5"/><text x="27.3152%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.09%)</title><rect x="27.1253%" y="309" width="0.0901%" height="15" fill="rgb(235,201,11)" fg:x="903" fg:w="3"/><text x="27.3753%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="27.1553%" y="293" width="0.0601%" height="15" fill="rgb(207,46,11)" fg:x="904" fg:w="2"/><text x="27.4053%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="27.2154%" y="341" width="0.0300%" height="15" fill="rgb(241,35,35)" fg:x="906" fg:w="1"/><text x="27.4654%" y="351.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.45%)</title><rect x="27.0351%" y="357" width="0.4506%" height="15" fill="rgb(243,32,47)" fg:x="900" fg:w="15"/><text x="27.2851%" y="367.50"></text></g><g><title>web-server`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.24%)</title><rect x="27.2454%" y="341" width="0.2403%" height="15" fill="rgb(247,202,23)" fg:x="907" fg:w="8"/><text x="27.4954%" y="351.50"></text></g><g><title>web-server`hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="27.4557%" y="325" width="0.0300%" height="15" fill="rgb(219,102,11)" fg:x="914" fg:w="1"/><text x="27.7057%" y="335.50"></text></g><g><title>web-server`&lt;std::sys::unix::thread::Thread as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="27.4857%" y="357" width="0.0300%" height="15" fill="rgb(243,110,44)" fg:x="915" fg:w="1"/><text x="27.7357%" y="367.50"></text></g><g><title>web-server`core::slice::sort::recurse (1 samples, 0.03%)</title><rect x="27.5158%" y="357" width="0.0300%" height="15" fill="rgb(222,74,54)" fg:x="916" fg:w="1"/><text x="27.7658%" y="367.50"></text></g><g><title>web-server`hashbrown::map::make_insert_hash (1 samples, 0.03%)</title><rect x="27.5458%" y="357" width="0.0300%" height="15" fill="rgb(216,99,12)" fg:x="917" fg:w="1"/><text x="27.7958%" y="367.50"></text></g><g><title>web-server`rusty_junctions::bag::Bag&lt;K,V&gt;::add (22 samples, 0.66%)</title><rect x="27.5758%" y="357" width="0.6609%" height="15" fill="rgb(226,22,26)" fg:x="918" fg:w="22"/><text x="27.8258%" y="367.50"></text></g><g><title>web-server`hashbrown::map::make_hash (19 samples, 0.57%)</title><rect x="27.6660%" y="341" width="0.5707%" height="15" fill="rgb(217,163,10)" fg:x="921" fg:w="19"/><text x="27.9160%" y="351.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.03%)</title><rect x="28.2667%" y="341" width="0.0300%" height="15" fill="rgb(213,25,53)" fg:x="941" fg:w="1"/><text x="28.5167%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (41 samples, 1.23%)</title><rect x="28.2968%" y="341" width="1.2316%" height="15" fill="rgb(252,105,26)" fg:x="942" fg:w="41"/><text x="28.5468%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (2 samples, 0.06%)</title><rect x="29.4683%" y="325" width="0.0601%" height="15" fill="rgb(220,39,43)" fg:x="981" fg:w="2"/><text x="29.7183%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.06%)</title><rect x="29.5584%" y="325" width="0.0601%" height="15" fill="rgb(229,68,48)" fg:x="984" fg:w="2"/><text x="29.8084%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="29.5584%" y="309" width="0.0601%" height="15" fill="rgb(252,8,32)" fg:x="984" fg:w="2"/><text x="29.8084%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.06%)</title><rect x="29.5584%" y="293" width="0.0601%" height="15" fill="rgb(223,20,43)" fg:x="984" fg:w="2"/><text x="29.8084%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="29.5584%" y="277" width="0.0601%" height="15" fill="rgb(229,81,49)" fg:x="984" fg:w="2"/><text x="29.8084%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="29.5885%" y="261" width="0.0300%" height="15" fill="rgb(236,28,36)" fg:x="985" fg:w="1"/><text x="29.8385%" y="271.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::binary::FnBoxClone&gt;::clone_box (4 samples, 0.12%)</title><rect x="29.5284%" y="341" width="0.1202%" height="15" fill="rgb(249,185,26)" fg:x="983" fg:w="4"/><text x="29.7784%" y="351.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="29.6185%" y="325" width="0.0300%" height="15" fill="rgb(249,174,33)" fg:x="986" fg:w="1"/><text x="29.8685%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.27%)</title><rect x="29.6786%" y="325" width="0.2704%" height="15" fill="rgb(233,201,37)" fg:x="988" fg:w="9"/><text x="29.9286%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.27%)</title><rect x="29.6786%" y="309" width="0.2704%" height="15" fill="rgb(221,78,26)" fg:x="988" fg:w="9"/><text x="29.9286%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.27%)</title><rect x="29.6786%" y="293" width="0.2704%" height="15" fill="rgb(250,127,30)" fg:x="988" fg:w="9"/><text x="29.9286%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.09%)</title><rect x="29.8588%" y="277" width="0.0901%" height="15" fill="rgb(230,49,44)" fg:x="994" fg:w="3"/><text x="30.1088%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="29.9189%" y="261" width="0.0300%" height="15" fill="rgb(229,67,23)" fg:x="996" fg:w="1"/><text x="30.1689%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_init (1 samples, 0.03%)</title><rect x="29.9489%" y="325" width="0.0300%" height="15" fill="rgb(249,83,47)" fg:x="997" fg:w="1"/><text x="30.1989%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_setstacksize (3 samples, 0.09%)</title><rect x="29.9790%" y="325" width="0.0901%" height="15" fill="rgb(215,43,3)" fg:x="998" fg:w="3"/><text x="30.2290%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="30.0691%" y="325" width="0.0300%" height="15" fill="rgb(238,154,13)" fg:x="1001" fg:w="1"/><text x="30.3191%" y="335.50"></text></g><g><title>web-server`std::io::stdio::set_output_capture (2 samples, 0.06%)</title><rect x="30.0991%" y="325" width="0.0601%" height="15" fill="rgb(219,56,2)" fg:x="1002" fg:w="2"/><text x="30.3491%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (142 samples, 4.27%)</title><rect x="30.1892%" y="309" width="4.2655%" height="15" fill="rgb(233,0,4)" fg:x="1005" fg:w="142"/><text x="30.4392%" y="319.50">libsy..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.06%)</title><rect x="34.4548%" y="309" width="0.0601%" height="15" fill="rgb(235,30,7)" fg:x="1147" fg:w="2"/><text x="34.7048%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="34.4548%" y="293" width="0.0601%" height="15" fill="rgb(250,79,13)" fg:x="1147" fg:w="2"/><text x="34.7048%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.06%)</title><rect x="34.4548%" y="277" width="0.0601%" height="15" fill="rgb(211,146,34)" fg:x="1147" fg:w="2"/><text x="34.7048%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="34.4848%" y="261" width="0.0300%" height="15" fill="rgb(228,22,38)" fg:x="1148" fg:w="1"/><text x="34.7348%" y="271.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock_no_tsd (1 samples, 0.03%)</title><rect x="34.5149%" y="309" width="0.0300%" height="15" fill="rgb(235,168,5)" fg:x="1149" fg:w="1"/><text x="34.7649%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (76 samples, 2.28%)</title><rect x="38.1496%" y="293" width="2.2830%" height="15" fill="rgb(221,155,16)" fg:x="1270" fg:w="76"/><text x="38.3996%" y="303.50">l..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (49 samples, 1.47%)</title><rect x="40.4326%" y="293" width="1.4719%" height="15" fill="rgb(215,215,53)" fg:x="1346" fg:w="49"/><text x="40.6826%" y="303.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (392 samples, 11.78%)</title><rect x="30.1592%" y="325" width="11.7753%" height="15" fill="rgb(223,4,10)" fg:x="1004" fg:w="392"/><text x="30.4092%" y="335.50">web-server`std::s..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (246 samples, 7.39%)</title><rect x="34.5449%" y="309" width="7.3896%" height="15" fill="rgb(234,103,6)" fg:x="1150" fg:w="246"/><text x="34.7949%" y="319.50">libsystem_..</text></g><g><title>libsystem_kernel.dylib`mach_vm_map (1 samples, 0.03%)</title><rect x="41.9045%" y="293" width="0.0300%" height="15" fill="rgb(227,97,0)" fg:x="1395" fg:w="1"/><text x="42.1545%" y="303.50"></text></g><g><title>web-server`std::sys_common::thread::min_stack (1 samples, 0.03%)</title><rect x="41.9345%" y="325" width="0.0300%" height="15" fill="rgb(234,150,53)" fg:x="1396" fg:w="1"/><text x="42.1845%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.03%)</title><rect x="41.9646%" y="261" width="0.0300%" height="15" fill="rgb(228,201,54)" fg:x="1397" fg:w="1"/><text x="42.2146%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.12%)</title><rect x="41.9646%" y="309" width="0.1202%" height="15" fill="rgb(222,22,37)" fg:x="1397" fg:w="4"/><text x="42.2146%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.12%)</title><rect x="41.9646%" y="293" width="0.1202%" height="15" fill="rgb(237,53,32)" fg:x="1397" fg:w="4"/><text x="42.2146%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.12%)</title><rect x="41.9646%" y="277" width="0.1202%" height="15" fill="rgb(233,25,53)" fg:x="1397" fg:w="4"/><text x="42.2146%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.09%)</title><rect x="41.9946%" y="261" width="0.0901%" height="15" fill="rgb(210,40,34)" fg:x="1398" fg:w="3"/><text x="42.2446%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (1 samples, 0.03%)</title><rect x="42.0847%" y="309" width="0.0300%" height="15" fill="rgb(241,220,44)" fg:x="1401" fg:w="1"/><text x="42.3347%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="42.1147%" y="309" width="0.0300%" height="15" fill="rgb(235,28,35)" fg:x="1402" fg:w="1"/><text x="42.3647%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutexattr_destroy (1 samples, 0.03%)</title><rect x="42.1448%" y="309" width="0.0300%" height="15" fill="rgb(210,56,17)" fg:x="1403" fg:w="1"/><text x="42.3948%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutexattr_init (1 samples, 0.03%)</title><rect x="42.1748%" y="309" width="0.0300%" height="15" fill="rgb(224,130,29)" fg:x="1404" fg:w="1"/><text x="42.4248%" y="319.50"></text></g><g><title>web-server`rusty_junctions::patterns::binary::SendJoinPattern::fire (469 samples, 14.09%)</title><rect x="28.2367%" y="357" width="14.0883%" height="15" fill="rgb(235,212,8)" fg:x="940" fg:w="469"/><text x="28.4867%" y="367.50">web-server`rusty_junc..</text></g><g><title>web-server`std::thread::spawn (422 samples, 12.68%)</title><rect x="29.6485%" y="341" width="12.6765%" height="15" fill="rgb(223,33,50)" fg:x="987" fg:w="422"/><text x="29.8985%" y="351.50">web-server`std::thr..</text></g><g><title>web-server`std::thread::Thread::new (12 samples, 0.36%)</title><rect x="41.9646%" y="325" width="0.3605%" height="15" fill="rgb(219,149,13)" fg:x="1397" fg:w="12"/><text x="42.2146%" y="335.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (4 samples, 0.12%)</title><rect x="42.2049%" y="309" width="0.1202%" height="15" fill="rgb(250,156,29)" fg:x="1405" fg:w="4"/><text x="42.4549%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.12%)</title><rect x="42.2049%" y="293" width="0.1202%" height="15" fill="rgb(216,193,19)" fg:x="1405" fg:w="4"/><text x="42.4549%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.12%)</title><rect x="42.2049%" y="277" width="0.1202%" height="15" fill="rgb(216,135,14)" fg:x="1405" fg:w="4"/><text x="42.4549%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.12%)</title><rect x="42.2049%" y="261" width="0.1202%" height="15" fill="rgb(241,47,5)" fg:x="1405" fg:w="4"/><text x="42.4549%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="42.2950%" y="245" width="0.0300%" height="15" fill="rgb(233,42,35)" fg:x="1408" fg:w="1"/><text x="42.5450%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (15 samples, 0.45%)</title><rect x="42.3551%" y="341" width="0.4506%" height="15" fill="rgb(231,13,6)" fg:x="1410" fg:w="15"/><text x="42.6051%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="42.7756%" y="325" width="0.0300%" height="15" fill="rgb(207,181,40)" fg:x="1424" fg:w="1"/><text x="43.0256%" y="335.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (1 samples, 0.03%)</title><rect x="42.8056%" y="341" width="0.0300%" height="15" fill="rgb(254,173,49)" fg:x="1425" fg:w="1"/><text x="43.0556%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="42.8056%" y="325" width="0.0300%" height="15" fill="rgb(221,1,38)" fg:x="1425" fg:w="1"/><text x="43.0556%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="42.8056%" y="309" width="0.0300%" height="15" fill="rgb(206,124,46)" fg:x="1425" fg:w="1"/><text x="43.0556%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="42.8056%" y="293" width="0.0300%" height="15" fill="rgb(249,21,11)" fg:x="1425" fg:w="1"/><text x="43.0556%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="42.8056%" y="277" width="0.0300%" height="15" fill="rgb(222,201,40)" fg:x="1425" fg:w="1"/><text x="43.0556%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="42.9258%" y="325" width="0.0300%" height="15" fill="rgb(235,61,29)" fg:x="1429" fg:w="1"/><text x="43.1758%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="42.9258%" y="309" width="0.0300%" height="15" fill="rgb(219,207,3)" fg:x="1429" fg:w="1"/><text x="43.1758%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="42.9258%" y="293" width="0.0300%" height="15" fill="rgb(222,56,46)" fg:x="1429" fg:w="1"/><text x="43.1758%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="42.9258%" y="277" width="0.0300%" height="15" fill="rgb(239,76,54)" fg:x="1429" fg:w="1"/><text x="43.1758%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_init (1 samples, 0.03%)</title><rect x="42.9558%" y="325" width="0.0300%" height="15" fill="rgb(231,124,27)" fg:x="1430" fg:w="1"/><text x="43.2058%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (30 samples, 0.90%)</title><rect x="42.9859%" y="309" width="0.9012%" height="15" fill="rgb(249,195,6)" fg:x="1431" fg:w="30"/><text x="43.2359%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (14 samples, 0.42%)</title><rect x="44.7882%" y="293" width="0.4205%" height="15" fill="rgb(237,174,47)" fg:x="1491" fg:w="14"/><text x="45.0382%" y="303.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (85 samples, 2.55%)</title><rect x="42.9859%" y="325" width="2.5533%" height="15" fill="rgb(206,201,31)" fg:x="1431" fg:w="85"/><text x="43.2359%" y="335.50">we..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (55 samples, 1.65%)</title><rect x="43.8871%" y="309" width="1.6521%" height="15" fill="rgb(231,57,52)" fg:x="1461" fg:w="55"/><text x="44.1371%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (11 samples, 0.33%)</title><rect x="45.2088%" y="293" width="0.3304%" height="15" fill="rgb(248,177,22)" fg:x="1505" fg:w="11"/><text x="45.4588%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="45.5392%" y="309" width="0.0300%" height="15" fill="rgb(215,211,37)" fg:x="1516" fg:w="1"/><text x="45.7892%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="45.5392%" y="293" width="0.0300%" height="15" fill="rgb(241,128,51)" fg:x="1516" fg:w="1"/><text x="45.7892%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="45.5392%" y="277" width="0.0300%" height="15" fill="rgb(227,165,31)" fg:x="1516" fg:w="1"/><text x="45.7892%" y="287.50"></text></g><g><title>web-server`rusty_junctions::patterns::unary::SendJoinPattern::fire (109 samples, 3.27%)</title><rect x="42.3250%" y="357" width="3.2743%" height="15" fill="rgb(228,167,24)" fg:x="1409" fg:w="109"/><text x="42.5750%" y="367.50">web..</text></g><g><title>web-server`std::thread::spawn (92 samples, 2.76%)</title><rect x="42.8357%" y="341" width="2.7636%" height="15" fill="rgb(228,143,12)" fg:x="1426" fg:w="92"/><text x="43.0857%" y="351.50">we..</text></g><g><title>web-server`std::thread::Thread::new (2 samples, 0.06%)</title><rect x="45.5392%" y="325" width="0.0601%" height="15" fill="rgb(249,149,8)" fg:x="1516" fg:w="2"/><text x="45.7892%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="45.5692%" y="309" width="0.0300%" height="15" fill="rgb(243,35,44)" fg:x="1517" fg:w="1"/><text x="45.8192%" y="319.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::tokens (1 samples, 0.03%)</title><rect x="45.6594%" y="341" width="0.0300%" height="15" fill="rgb(246,89,9)" fg:x="1520" fg:w="1"/><text x="45.9094%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="45.7194%" y="325" width="0.0300%" height="15" fill="rgb(233,213,13)" fg:x="1522" fg:w="1"/><text x="45.9694%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="45.7495%" y="325" width="0.0300%" height="15" fill="rgb(233,141,41)" fg:x="1523" fg:w="1"/><text x="45.9995%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="45.7495%" y="309" width="0.0300%" height="15" fill="rgb(239,167,4)" fg:x="1523" fg:w="1"/><text x="45.9995%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.12%)</title><rect x="45.9597%" y="309" width="0.1202%" height="15" fill="rgb(209,217,16)" fg:x="1530" fg:w="4"/><text x="46.2097%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="46.1400%" y="293" width="0.0300%" height="15" fill="rgb(219,88,35)" fg:x="1536" fg:w="1"/><text x="46.3900%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.18%)</title><rect x="46.0799%" y="309" width="0.1802%" height="15" fill="rgb(220,193,23)" fg:x="1534" fg:w="6"/><text x="46.3299%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.09%)</title><rect x="46.1700%" y="293" width="0.0901%" height="15" fill="rgb(230,90,52)" fg:x="1537" fg:w="3"/><text x="46.4200%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="46.2301%" y="277" width="0.0300%" height="15" fill="rgb(252,106,19)" fg:x="1539" fg:w="1"/><text x="46.4801%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="46.2601%" y="309" width="0.0300%" height="15" fill="rgb(206,74,20)" fg:x="1540" fg:w="1"/><text x="46.5101%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="46.2902%" y="309" width="0.0300%" height="15" fill="rgb(230,138,44)" fg:x="1541" fg:w="1"/><text x="46.5402%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (130 samples, 3.91%)</title><rect x="46.4704%" y="293" width="3.9051%" height="15" fill="rgb(235,182,43)" fg:x="1547" fg:w="130"/><text x="46.7204%" y="303.50">libs..</text></g><g><title>libsystem_kernel.dylib`__psynch_cvclrprepost (1 samples, 0.03%)</title><rect x="50.6158%" y="277" width="0.0300%" height="15" fill="rgb(242,16,51)" fg:x="1685" fg:w="1"/><text x="50.8658%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (1 samples, 0.03%)</title><rect x="50.6458%" y="277" width="0.0300%" height="15" fill="rgb(248,9,4)" fg:x="1686" fg:w="1"/><text x="50.8958%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.09%)</title><rect x="50.6759%" y="277" width="0.0901%" height="15" fill="rgb(210,31,22)" fg:x="1687" fg:w="3"/><text x="50.9259%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (14 samples, 0.42%)</title><rect x="50.3755%" y="293" width="0.4205%" height="15" fill="rgb(239,54,39)" fg:x="1677" fg:w="14"/><text x="50.6255%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.03%)</title><rect x="50.7660%" y="277" width="0.0300%" height="15" fill="rgb(230,99,41)" fg:x="1690" fg:w="1"/><text x="51.0160%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::WaitToken::wait (168 samples, 5.05%)</title><rect x="45.7795%" y="325" width="5.0466%" height="15" fill="rgb(253,106,12)" fg:x="1524" fg:w="168"/><text x="46.0295%" y="335.50">web-se..</text></g><g><title>web-server`std::thread::park (150 samples, 4.51%)</title><rect x="46.3202%" y="309" width="4.5059%" height="15" fill="rgb(213,46,41)" fg:x="1542" fg:w="150"/><text x="46.5702%" y="319.50">web-s..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="50.7960%" y="293" width="0.0300%" height="15" fill="rgb(215,133,35)" fg:x="1691" fg:w="1"/><text x="51.0460%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.06%)</title><rect x="50.8261%" y="309" width="0.0601%" height="15" fill="rgb(213,28,5)" fg:x="1692" fg:w="2"/><text x="51.0761%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.03%)</title><rect x="50.9162%" y="261" width="0.0300%" height="15" fill="rgb(215,77,49)" fg:x="1695" fg:w="1"/><text x="51.1662%" y="271.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::tokens (5 samples, 0.15%)</title><rect x="50.8261%" y="325" width="0.1502%" height="15" fill="rgb(248,100,22)" fg:x="1692" fg:w="5"/><text x="51.0761%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.09%)</title><rect x="50.8862%" y="309" width="0.0901%" height="15" fill="rgb(208,67,9)" fg:x="1694" fg:w="3"/><text x="51.1362%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.09%)</title><rect x="50.8862%" y="293" width="0.0901%" height="15" fill="rgb(219,133,21)" fg:x="1694" fg:w="3"/><text x="51.1362%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.09%)</title><rect x="50.8862%" y="277" width="0.0901%" height="15" fill="rgb(246,46,29)" fg:x="1694" fg:w="3"/><text x="51.1362%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="50.9462%" y="261" width="0.0300%" height="15" fill="rgb(246,185,52)" fg:x="1696" fg:w="1"/><text x="51.1962%" y="271.50"></text></g><g><title>web-server`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (1 samples, 0.03%)</title><rect x="50.9763%" y="325" width="0.0300%" height="15" fill="rgb(252,136,11)" fg:x="1697" fg:w="1"/><text x="51.2263%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="51.2466%" y="293" width="0.0300%" height="15" fill="rgb(219,138,53)" fg:x="1706" fg:w="1"/><text x="51.4966%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.06%)</title><rect x="51.2767%" y="293" width="0.0601%" height="15" fill="rgb(211,51,23)" fg:x="1707" fg:w="2"/><text x="51.5267%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.06%)</title><rect x="51.2767%" y="277" width="0.0601%" height="15" fill="rgb(247,221,28)" fg:x="1707" fg:w="2"/><text x="51.5267%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.06%)</title><rect x="51.2767%" y="261" width="0.0601%" height="15" fill="rgb(251,222,45)" fg:x="1707" fg:w="2"/><text x="51.5267%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.06%)</title><rect x="51.3668%" y="277" width="0.0601%" height="15" fill="rgb(217,162,53)" fg:x="1710" fg:w="2"/><text x="51.6168%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (194 samples, 5.83%)</title><rect x="45.6894%" y="341" width="5.8276%" height="15" fill="rgb(229,93,14)" fg:x="1521" fg:w="194"/><text x="45.9394%" y="351.50">web-ser..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (17 samples, 0.51%)</title><rect x="51.0063%" y="325" width="0.5107%" height="15" fill="rgb(209,67,49)" fg:x="1698" fg:w="17"/><text x="51.2563%" y="335.50"></text></g><g><title>web-server`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (16 samples, 0.48%)</title><rect x="51.0363%" y="309" width="0.4806%" height="15" fill="rgb(213,87,29)" fg:x="1699" fg:w="16"/><text x="51.2863%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.18%)</title><rect x="51.3367%" y="293" width="0.1802%" height="15" fill="rgb(205,151,52)" fg:x="1709" fg:w="6"/><text x="51.5867%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.09%)</title><rect x="51.4269%" y="277" width="0.0901%" height="15" fill="rgb(253,215,39)" fg:x="1712" fg:w="3"/><text x="51.6769%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.06%)</title><rect x="51.4569%" y="261" width="0.0601%" height="15" fill="rgb(221,220,41)" fg:x="1713" fg:w="2"/><text x="51.7069%" y="271.50"></text></g><g><title>web-server`rusty_junctions::controller::Controller::handle_packets (849 samples, 25.50%)</title><rect x="26.0439%" y="373" width="25.5032%" height="15" fill="rgb(218,133,21)" fg:x="867" fg:w="849"/><text x="26.2939%" y="383.50">web-server`rusty_junctions::controller::C..</text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (198 samples, 5.95%)</title><rect x="45.5993%" y="357" width="5.9477%" height="15" fill="rgb(221,193,43)" fg:x="1518" fg:w="198"/><text x="45.8493%" y="367.50">web-serv..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (1 samples, 0.03%)</title><rect x="51.5170%" y="341" width="0.0300%" height="15" fill="rgb(240,128,52)" fg:x="1715" fg:w="1"/><text x="51.7670%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="51.5771%" y="357" width="0.0300%" height="15" fill="rgb(253,114,12)" fg:x="1717" fg:w="1"/><text x="51.8271%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="51.5771%" y="341" width="0.0300%" height="15" fill="rgb(215,223,47)" fg:x="1717" fg:w="1"/><text x="51.8271%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="51.5771%" y="325" width="0.0300%" height="15" fill="rgb(248,225,23)" fg:x="1717" fg:w="1"/><text x="51.8271%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (7 samples, 0.21%)</title><rect x="51.6672%" y="309" width="0.2103%" height="15" fill="rgb(250,108,0)" fg:x="1720" fg:w="7"/><text x="51.9172%" y="319.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::binary::transform_send::_{{closure}} (12 samples, 0.36%)</title><rect x="51.5470%" y="373" width="0.3605%" height="15" fill="rgb(228,208,7)" fg:x="1716" fg:w="12"/><text x="51.7970%" y="383.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (10 samples, 0.30%)</title><rect x="51.6071%" y="357" width="0.3004%" height="15" fill="rgb(244,45,10)" fg:x="1718" fg:w="10"/><text x="51.8571%" y="367.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (10 samples, 0.30%)</title><rect x="51.6071%" y="341" width="0.3004%" height="15" fill="rgb(207,125,25)" fg:x="1718" fg:w="10"/><text x="51.8571%" y="351.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (9 samples, 0.27%)</title><rect x="51.6371%" y="325" width="0.2704%" height="15" fill="rgb(210,195,18)" fg:x="1719" fg:w="9"/><text x="51.8871%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.03%)</title><rect x="51.8774%" y="309" width="0.0300%" height="15" fill="rgb(249,80,12)" fg:x="1727" fg:w="1"/><text x="52.1274%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (1 samples, 0.03%)</title><rect x="51.8774%" y="293" width="0.0300%" height="15" fill="rgb(221,65,9)" fg:x="1727" fg:w="1"/><text x="52.1274%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (85 samples, 2.55%)</title><rect x="52.0276%" y="357" width="2.5533%" height="15" fill="rgb(235,49,36)" fg:x="1732" fg:w="85"/><text x="52.2776%" y="367.50">li..</text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.06%)</title><rect x="54.5810%" y="357" width="0.0601%" height="15" fill="rgb(225,32,20)" fg:x="1817" fg:w="2"/><text x="54.8310%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.15%)</title><rect x="54.6410%" y="357" width="0.1502%" height="15" fill="rgb(215,141,46)" fg:x="1819" fg:w="5"/><text x="54.8910%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.15%)</title><rect x="54.6410%" y="341" width="0.1502%" height="15" fill="rgb(250,160,47)" fg:x="1819" fg:w="5"/><text x="54.8910%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.15%)</title><rect x="54.6410%" y="325" width="0.1502%" height="15" fill="rgb(216,222,40)" fg:x="1819" fg:w="5"/><text x="54.8910%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.12%)</title><rect x="55.0315%" y="325" width="0.1202%" height="15" fill="rgb(234,217,39)" fg:x="1832" fg:w="4"/><text x="55.2815%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.27%)</title><rect x="54.9114%" y="341" width="0.2704%" height="15" fill="rgb(207,178,40)" fg:x="1828" fg:w="9"/><text x="55.1614%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="55.1517%" y="325" width="0.0300%" height="15" fill="rgb(221,136,13)" fg:x="1836" fg:w="1"/><text x="55.4017%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.42%)</title><rect x="54.7912%" y="357" width="0.4205%" height="15" fill="rgb(249,199,10)" fg:x="1824" fg:w="14"/><text x="55.0412%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.03%)</title><rect x="55.1817%" y="341" width="0.0300%" height="15" fill="rgb(249,222,13)" fg:x="1837" fg:w="1"/><text x="55.4317%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.06%)</title><rect x="55.2118%" y="357" width="0.0601%" height="15" fill="rgb(244,185,38)" fg:x="1838" fg:w="2"/><text x="55.4618%" y="367.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.06%)</title><rect x="55.2719%" y="357" width="0.0601%" height="15" fill="rgb(236,202,9)" fg:x="1840" fg:w="2"/><text x="55.5219%" y="367.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.03%)</title><rect x="55.3319%" y="357" width="0.0300%" height="15" fill="rgb(250,229,37)" fg:x="1842" fg:w="1"/><text x="55.5819%" y="367.50"></text></g><g><title>web-server`&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="55.3620%" y="357" width="0.0300%" height="15" fill="rgb(206,174,23)" fg:x="1843" fg:w="1"/><text x="55.6120%" y="367.50"></text></g><g><title>web-server`__rdl_dealloc (2 samples, 0.06%)</title><rect x="55.3920%" y="357" width="0.0601%" height="15" fill="rgb(211,33,43)" fg:x="1844" fg:w="2"/><text x="55.6420%" y="367.50"></text></g><g><title>web-server`alloc::fmt::format (1 samples, 0.03%)</title><rect x="55.4521%" y="357" width="0.0300%" height="15" fill="rgb(245,58,50)" fg:x="1846" fg:w="1"/><text x="55.7021%" y="367.50"></text></g><g><title>web-server`core::num::_&lt;impl core::str::traits::FromStr for i64&gt;::from_str (1 samples, 0.03%)</title><rect x="55.4821%" y="357" width="0.0300%" height="15" fill="rgb(244,68,36)" fg:x="1847" fg:w="1"/><text x="55.7321%" y="367.50"></text></g><g><title>web-server`core::str::pattern::StrSearcher::new (2 samples, 0.06%)</title><rect x="55.5122%" y="357" width="0.0601%" height="15" fill="rgb(232,229,15)" fg:x="1848" fg:w="2"/><text x="55.7622%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (43 samples, 1.29%)</title><rect x="55.6624%" y="309" width="1.2917%" height="15" fill="rgb(254,30,23)" fg:x="1853" fg:w="43"/><text x="55.9124%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (44 samples, 1.32%)</title><rect x="55.6624%" y="325" width="1.3217%" height="15" fill="rgb(235,160,14)" fg:x="1853" fg:w="44"/><text x="55.9124%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_wait (1 samples, 0.03%)</title><rect x="56.9540%" y="309" width="0.0300%" height="15" fill="rgb(212,155,44)" fg:x="1896" fg:w="1"/><text x="57.2040%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (22 samples, 0.66%)</title><rect x="56.9841%" y="325" width="0.6609%" height="15" fill="rgb(226,2,50)" fg:x="1897" fg:w="22"/><text x="57.2341%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (21 samples, 0.63%)</title><rect x="57.0141%" y="309" width="0.6308%" height="15" fill="rgb(234,177,6)" fg:x="1898" fg:w="21"/><text x="57.2641%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`write (21 samples, 0.63%)</title><rect x="57.6449%" y="277" width="0.6308%" height="15" fill="rgb(217,24,9)" fg:x="1919" fg:w="21"/><text x="57.8949%" y="287.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (23 samples, 0.69%)</title><rect x="57.6449%" y="309" width="0.6909%" height="15" fill="rgb(220,13,46)" fg:x="1919" fg:w="23"/><text x="57.8949%" y="319.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (23 samples, 0.69%)</title><rect x="57.6449%" y="293" width="0.6909%" height="15" fill="rgb(239,221,27)" fg:x="1919" fg:w="23"/><text x="57.8949%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="58.2758%" y="277" width="0.0601%" height="15" fill="rgb(222,198,25)" fg:x="1940" fg:w="2"/><text x="58.5258%" y="287.50"></text></g><g><title>web-server`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="58.3358%" y="293" width="0.0300%" height="15" fill="rgb(211,99,13)" fg:x="1942" fg:w="1"/><text x="58.5858%" y="303.50"></text></g><g><title>web-server`&lt;std::sys_common::net::TcpStream as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="58.3659%" y="293" width="0.0300%" height="15" fill="rgb(232,111,31)" fg:x="1943" fg:w="1"/><text x="58.6159%" y="303.50"></text></g><g><title>web-server`core::fmt::Formatter::debug_struct (3 samples, 0.09%)</title><rect x="58.3959%" y="293" width="0.0901%" height="15" fill="rgb(245,82,37)" fg:x="1944" fg:w="3"/><text x="58.6459%" y="303.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.09%)</title><rect x="58.3959%" y="277" width="0.0901%" height="15" fill="rgb(227,149,46)" fg:x="1944" fg:w="3"/><text x="58.6459%" y="287.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.09%)</title><rect x="58.3959%" y="261" width="0.0901%" height="15" fill="rgb(218,36,50)" fg:x="1944" fg:w="3"/><text x="58.6459%" y="271.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (3 samples, 0.09%)</title><rect x="58.3959%" y="245" width="0.0901%" height="15" fill="rgb(226,80,48)" fg:x="1944" fg:w="3"/><text x="58.6459%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__getpeername (11 samples, 0.33%)</title><rect x="58.4860%" y="277" width="0.3304%" height="15" fill="rgb(238,224,15)" fg:x="1947" fg:w="11"/><text x="58.7360%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__getsockname (8 samples, 0.24%)</title><rect x="58.8165%" y="277" width="0.2403%" height="15" fill="rgb(241,136,10)" fg:x="1958" fg:w="8"/><text x="59.0665%" y="287.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="59.0568%" y="277" width="0.0300%" height="15" fill="rgb(208,32,45)" fg:x="1966" fg:w="1"/><text x="59.3068%" y="287.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="59.0568%" y="261" width="0.0300%" height="15" fill="rgb(207,135,9)" fg:x="1966" fg:w="1"/><text x="59.3068%" y="271.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="59.0568%" y="245" width="0.0300%" height="15" fill="rgb(206,86,44)" fg:x="1966" fg:w="1"/><text x="59.3068%" y="255.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="59.2670%" y="261" width="0.0300%" height="15" fill="rgb(245,177,15)" fg:x="1973" fg:w="1"/><text x="59.5170%" y="271.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddr as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="59.2971%" y="261" width="0.0300%" height="15" fill="rgb(206,64,50)" fg:x="1974" fg:w="1"/><text x="59.5471%" y="271.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.06%)</title><rect x="59.3271%" y="245" width="0.0601%" height="15" fill="rgb(234,36,40)" fg:x="1975" fg:w="2"/><text x="59.5771%" y="255.50"></text></g><g><title>web-server`core::fmt::Formatter::width (1 samples, 0.03%)</title><rect x="59.4172%" y="229" width="0.0300%" height="15" fill="rgb(213,64,8)" fg:x="1978" fg:w="1"/><text x="59.6672%" y="239.50"></text></g><g><title>web-server`&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="59.4473%" y="213" width="0.0300%" height="15" fill="rgb(210,75,36)" fg:x="1979" fg:w="1"/><text x="59.6973%" y="223.50"></text></g><g><title>web-server`&lt;std::net::ip::Ipv6Addr as core::fmt::Display&gt;::fmt (1 samples, 0.03%)</title><rect x="59.4773%" y="213" width="0.0300%" height="15" fill="rgb(229,88,21)" fg:x="1980" fg:w="1"/><text x="59.7273%" y="223.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="59.5074%" y="197" width="0.0300%" height="15" fill="rgb(252,204,47)" fg:x="1981" fg:w="1"/><text x="59.7574%" y="207.50"></text></g><g><title>web-server`&lt;std::net::ip::Ipv6Addr as core::fmt::Display&gt;::fmt (2 samples, 0.06%)</title><rect x="59.5374%" y="197" width="0.0601%" height="15" fill="rgb(208,77,27)" fg:x="1982" fg:w="2"/><text x="59.7874%" y="207.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="59.5674%" y="181" width="0.0300%" height="15" fill="rgb(221,76,26)" fg:x="1983" fg:w="1"/><text x="59.8174%" y="191.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="59.6275%" y="165" width="0.0300%" height="15" fill="rgb(225,139,18)" fg:x="1985" fg:w="1"/><text x="59.8775%" y="175.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddrV6 as core::fmt::Display&gt;::fmt (10 samples, 0.30%)</title><rect x="59.3872%" y="245" width="0.3004%" height="15" fill="rgb(230,137,11)" fg:x="1977" fg:w="10"/><text x="59.6372%" y="255.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (8 samples, 0.24%)</title><rect x="59.4473%" y="229" width="0.2403%" height="15" fill="rgb(212,28,1)" fg:x="1979" fg:w="8"/><text x="59.6973%" y="239.50"></text></g><g><title>web-server`core::fmt::write (6 samples, 0.18%)</title><rect x="59.5074%" y="213" width="0.1802%" height="15" fill="rgb(248,164,17)" fg:x="1981" fg:w="6"/><text x="59.7574%" y="223.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (3 samples, 0.09%)</title><rect x="59.5975%" y="197" width="0.0901%" height="15" fill="rgb(222,171,42)" fg:x="1984" fg:w="3"/><text x="59.8475%" y="207.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.09%)</title><rect x="59.5975%" y="181" width="0.0901%" height="15" fill="rgb(243,84,45)" fg:x="1984" fg:w="3"/><text x="59.8475%" y="191.50"></text></g><g><title>web-server`DYLD-STUB$$memcpy (1 samples, 0.03%)</title><rect x="59.6576%" y="165" width="0.0300%" height="15" fill="rgb(252,49,23)" fg:x="1986" fg:w="1"/><text x="59.9076%" y="175.50"></text></g><g><title>web-server`core::fmt::Formatter::precision (1 samples, 0.03%)</title><rect x="59.6876%" y="245" width="0.0300%" height="15" fill="rgb(215,19,7)" fg:x="1987" fg:w="1"/><text x="59.9376%" y="255.50"></text></g><g><title>web-server`&lt;std::sys_common::net::TcpStream as core::fmt::Debug&gt;::fmt (22 samples, 0.66%)</title><rect x="59.0868%" y="277" width="0.6609%" height="15" fill="rgb(238,81,41)" fg:x="1967" fg:w="22"/><text x="59.3368%" y="287.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (14 samples, 0.42%)</title><rect x="59.3271%" y="261" width="0.4205%" height="15" fill="rgb(210,199,37)" fg:x="1975" fg:w="14"/><text x="59.5771%" y="271.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 0.03%)</title><rect x="59.7176%" y="245" width="0.0300%" height="15" fill="rgb(244,192,49)" fg:x="1988" fg:w="1"/><text x="59.9676%" y="255.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="59.7176%" y="229" width="0.0300%" height="15" fill="rgb(226,211,11)" fg:x="1988" fg:w="1"/><text x="59.9676%" y="239.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="59.7176%" y="213" width="0.0300%" height="15" fill="rgb(236,162,54)" fg:x="1988" fg:w="1"/><text x="59.9676%" y="223.50"></text></g><g><title>web-server`&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="59.7477%" y="277" width="0.0300%" height="15" fill="rgb(220,229,9)" fg:x="1989" fg:w="1"/><text x="59.9977%" y="287.50"></text></g><g><title>web-server`core::unicode::printable::check (1 samples, 0.03%)</title><rect x="59.7477%" y="261" width="0.0300%" height="15" fill="rgb(250,87,22)" fg:x="1989" fg:w="1"/><text x="59.9977%" y="271.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (44 samples, 1.32%)</title><rect x="58.4860%" y="293" width="1.3217%" height="15" fill="rgb(239,43,17)" fg:x="1947" fg:w="44"/><text x="58.7360%" y="303.50"></text></g><g><title>web-server`core::fmt::Write::write_char (1 samples, 0.03%)</title><rect x="59.7777%" y="277" width="0.0300%" height="15" fill="rgb(231,177,25)" fg:x="1990" fg:w="1"/><text x="60.0277%" y="287.50"></text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (141 samples, 4.24%)</title><rect x="55.6023%" y="341" width="4.2355%" height="15" fill="rgb(219,179,1)" fg:x="1851" fg:w="141"/><text x="55.8523%" y="351.50">web-s..</text></g><g><title>web-server`core::fmt::write (73 samples, 2.19%)</title><rect x="57.6449%" y="325" width="2.1929%" height="15" fill="rgb(238,219,53)" fg:x="1919" fg:w="73"/><text x="57.8949%" y="335.50">w..</text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (50 samples, 1.50%)</title><rect x="58.3358%" y="309" width="1.5020%" height="15" fill="rgb(232,167,36)" fg:x="1942" fg:w="50"/><text x="58.5858%" y="319.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::finish (1 samples, 0.03%)</title><rect x="59.8078%" y="293" width="0.0300%" height="15" fill="rgb(244,19,51)" fg:x="1991" fg:w="1"/><text x="60.0578%" y="303.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="59.8078%" y="277" width="0.0300%" height="15" fill="rgb(224,6,22)" fg:x="1991" fg:w="1"/><text x="60.0578%" y="287.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="59.8078%" y="261" width="0.0300%" height="15" fill="rgb(224,145,5)" fg:x="1991" fg:w="1"/><text x="60.0578%" y="271.50"></text></g><g><title>web-server`std::io::stdio::_print (143 samples, 4.30%)</title><rect x="55.5722%" y="357" width="4.2956%" height="15" fill="rgb(234,130,49)" fg:x="1850" fg:w="143"/><text x="55.8222%" y="367.50">web-s..</text></g><g><title>web-server`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.03%)</title><rect x="59.8378%" y="341" width="0.0300%" height="15" fill="rgb(254,6,2)" fg:x="1992" fg:w="1"/><text x="60.0878%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (42 samples, 1.26%)</title><rect x="59.8678%" y="341" width="1.2616%" height="15" fill="rgb(208,96,46)" fg:x="1993" fg:w="42"/><text x="60.1178%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.15%)</title><rect x="61.1295%" y="341" width="0.1502%" height="15" fill="rgb(239,3,39)" fg:x="2035" fg:w="5"/><text x="61.3795%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.15%)</title><rect x="61.1295%" y="325" width="0.1502%" height="15" fill="rgb(233,210,1)" fg:x="2035" fg:w="5"/><text x="61.3795%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.12%)</title><rect x="61.1595%" y="309" width="0.1202%" height="15" fill="rgb(244,137,37)" fg:x="2036" fg:w="4"/><text x="61.4095%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="61.4599%" y="309" width="0.0300%" height="15" fill="rgb(240,136,2)" fg:x="2046" fg:w="1"/><text x="61.7099%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.24%)</title><rect x="61.2797%" y="341" width="0.2403%" height="15" fill="rgb(239,18,37)" fg:x="2040" fg:w="8"/><text x="61.5297%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.15%)</title><rect x="61.3698%" y="325" width="0.1502%" height="15" fill="rgb(218,185,22)" fg:x="2043" fg:w="5"/><text x="61.6198%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="61.4899%" y="309" width="0.0300%" height="15" fill="rgb(225,218,4)" fg:x="2047" fg:w="1"/><text x="61.7399%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="61.5200%" y="341" width="0.0300%" height="15" fill="rgb(230,182,32)" fg:x="2048" fg:w="1"/><text x="61.7700%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="61.5500%" y="341" width="0.0601%" height="15" fill="rgb(242,56,43)" fg:x="2049" fg:w="2"/><text x="61.8000%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="61.6101%" y="341" width="0.0300%" height="15" fill="rgb(233,99,24)" fg:x="2051" fg:w="1"/><text x="61.8601%" y="351.50"></text></g><g><title>web-server`core::str::converts::from_utf8 (1 samples, 0.03%)</title><rect x="61.6401%" y="341" width="0.0300%" height="15" fill="rgb(234,209,42)" fg:x="2052" fg:w="1"/><text x="61.8901%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (19 samples, 0.57%)</title><rect x="61.6702%" y="309" width="0.5707%" height="15" fill="rgb(227,7,12)" fg:x="2053" fg:w="19"/><text x="61.9202%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (19 samples, 0.57%)</title><rect x="61.6702%" y="293" width="0.5707%" height="15" fill="rgb(245,203,43)" fg:x="2053" fg:w="19"/><text x="61.9202%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (10 samples, 0.30%)</title><rect x="62.2409%" y="309" width="0.3004%" height="15" fill="rgb(238,205,33)" fg:x="2072" fg:w="10"/><text x="62.4909%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (9 samples, 0.27%)</title><rect x="62.2710%" y="293" width="0.2704%" height="15" fill="rgb(231,56,7)" fg:x="2073" fg:w="9"/><text x="62.5210%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="62.5413%" y="309" width="0.0300%" height="15" fill="rgb(244,186,29)" fg:x="2082" fg:w="1"/><text x="62.7913%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`write (33 samples, 0.99%)</title><rect x="62.5713%" y="277" width="0.9913%" height="15" fill="rgb(234,111,31)" fg:x="2083" fg:w="33"/><text x="62.8213%" y="287.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.06%)</title><rect x="63.5626%" y="277" width="0.0601%" height="15" fill="rgb(241,149,10)" fg:x="2116" fg:w="2"/><text x="63.8126%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="63.5927%" y="261" width="0.0300%" height="15" fill="rgb(249,206,44)" fg:x="2117" fg:w="1"/><text x="63.8427%" y="271.50"></text></g><g><title>web-server`std::io::stdio::_print (66 samples, 1.98%)</title><rect x="61.6702%" y="341" width="1.9826%" height="15" fill="rgb(251,153,30)" fg:x="2053" fg:w="66"/><text x="61.9202%" y="351.50">w..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (66 samples, 1.98%)</title><rect x="61.6702%" y="325" width="1.9826%" height="15" fill="rgb(239,152,38)" fg:x="2053" fg:w="66"/><text x="61.9202%" y="335.50">w..</text></g><g><title>web-server`core::fmt::write (36 samples, 1.08%)</title><rect x="62.5713%" y="309" width="1.0814%" height="15" fill="rgb(249,139,47)" fg:x="2083" fg:w="36"/><text x="62.8213%" y="319.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (36 samples, 1.08%)</title><rect x="62.5713%" y="293" width="1.0814%" height="15" fill="rgb(244,64,35)" fg:x="2083" fg:w="36"/><text x="62.8213%" y="303.50"></text></g><g><title>web-server`DYLD-STUB$$write (1 samples, 0.03%)</title><rect x="63.6227%" y="277" width="0.0300%" height="15" fill="rgb(216,46,15)" fg:x="2118" fg:w="1"/><text x="63.8727%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.03%)</title><rect x="63.7729%" y="277" width="0.0300%" height="15" fill="rgb(250,74,19)" fg:x="2123" fg:w="1"/><text x="64.0229%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.27%)</title><rect x="63.6828%" y="325" width="0.2704%" height="15" fill="rgb(249,42,33)" fg:x="2120" fg:w="9"/><text x="63.9328%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.27%)</title><rect x="63.6828%" y="309" width="0.2704%" height="15" fill="rgb(242,149,17)" fg:x="2120" fg:w="9"/><text x="63.9328%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.27%)</title><rect x="63.6828%" y="293" width="0.2704%" height="15" fill="rgb(244,29,21)" fg:x="2120" fg:w="9"/><text x="63.9328%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.15%)</title><rect x="63.8029%" y="277" width="0.1502%" height="15" fill="rgb(220,130,37)" fg:x="2124" fg:w="5"/><text x="64.0529%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="63.9231%" y="261" width="0.0300%" height="15" fill="rgb(211,67,2)" fg:x="2128" fg:w="1"/><text x="64.1731%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.03%)</title><rect x="63.9531%" y="325" width="0.0300%" height="15" fill="rgb(235,68,52)" fg:x="2129" fg:w="1"/><text x="64.2031%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.06%)</title><rect x="63.9832%" y="325" width="0.0601%" height="15" fill="rgb(246,142,3)" fg:x="2130" fg:w="2"/><text x="64.2332%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="64.0132%" y="309" width="0.0300%" height="15" fill="rgb(241,25,7)" fg:x="2131" fg:w="1"/><text x="64.2632%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="64.0433%" y="325" width="0.0300%" height="15" fill="rgb(242,119,39)" fg:x="2132" fg:w="1"/><text x="64.2933%" y="335.50"></text></g><g><title>web-server`core::str::converts::from_utf8 (4 samples, 0.12%)</title><rect x="64.0733%" y="325" width="0.1202%" height="15" fill="rgb(241,98,45)" fg:x="2133" fg:w="4"/><text x="64.3233%" y="335.50"></text></g><g><title>web-server`httparse::parse_headers_iter_uninit (1 samples, 0.03%)</title><rect x="64.1935%" y="293" width="0.0300%" height="15" fill="rgb(254,28,30)" fg:x="2137" fg:w="1"/><text x="64.4435%" y="303.50"></text></g><g><title>web-server`web_server::request::Request::from_tcp_stream (149 samples, 4.48%)</title><rect x="59.8678%" y="357" width="4.4758%" height="15" fill="rgb(241,142,54)" fg:x="1993" fg:w="149"/><text x="60.1178%" y="367.50">web-s..</text></g><g><title>web-server`web_server::header::Header::from_request (23 samples, 0.69%)</title><rect x="63.6527%" y="341" width="0.6909%" height="15" fill="rgb(222,85,15)" fg:x="2119" fg:w="23"/><text x="63.9027%" y="351.50"></text></g><g><title>web-server`httparse::Request::parse (5 samples, 0.15%)</title><rect x="64.1935%" y="325" width="0.1502%" height="15" fill="rgb(210,85,47)" fg:x="2137" fg:w="5"/><text x="64.4435%" y="335.50"></text></g><g><title>web-server`httparse::Request::parse_with_uninit_headers (5 samples, 0.15%)</title><rect x="64.1935%" y="309" width="0.1502%" height="15" fill="rgb(224,206,25)" fg:x="2137" fg:w="5"/><text x="64.4435%" y="319.50"></text></g><g><title>web-server`httparse::simd::runtime::match_uri_vectored (4 samples, 0.12%)</title><rect x="64.2235%" y="293" width="0.1202%" height="15" fill="rgb(243,201,19)" fg:x="2138" fg:w="4"/><text x="64.4735%" y="303.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (4 samples, 0.12%)</title><rect x="64.2235%" y="277" width="0.1202%" height="15" fill="rgb(236,59,4)" fg:x="2138" fg:w="4"/><text x="64.4735%" y="287.50"></text></g><g><title>libsystem_c.dylib`nanosleep (2 samples, 0.06%)</title><rect x="64.7041%" y="341" width="0.0601%" height="15" fill="rgb(254,179,45)" fg:x="2154" fg:w="2"/><text x="64.9541%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`fcntl (1 samples, 0.03%)</title><rect x="64.7642%" y="341" width="0.0300%" height="15" fill="rgb(226,14,10)" fg:x="2156" fg:w="1"/><text x="65.0142%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.09%)</title><rect x="64.7942%" y="341" width="0.0901%" height="15" fill="rgb(244,27,41)" fg:x="2157" fg:w="3"/><text x="65.0442%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.06%)</title><rect x="64.8243%" y="325" width="0.0601%" height="15" fill="rgb(235,35,32)" fg:x="2158" fg:w="2"/><text x="65.0743%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.06%)</title><rect x="64.8243%" y="309" width="0.0601%" height="15" fill="rgb(218,68,31)" fg:x="2158" fg:w="2"/><text x="65.0743%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="64.8543%" y="293" width="0.0300%" height="15" fill="rgb(207,120,37)" fg:x="2159" fg:w="1"/><text x="65.1043%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.18%)</title><rect x="64.8843%" y="341" width="0.1802%" height="15" fill="rgb(227,98,0)" fg:x="2160" fg:w="6"/><text x="65.1343%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="65.0345%" y="325" width="0.0300%" height="15" fill="rgb(207,7,3)" fg:x="2165" fg:w="1"/><text x="65.2845%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="65.0345%" y="309" width="0.0300%" height="15" fill="rgb(206,98,19)" fg:x="2165" fg:w="1"/><text x="65.2845%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.30%)</title><rect x="65.0646%" y="341" width="0.3004%" height="15" fill="rgb(217,5,26)" fg:x="2166" fg:w="10"/><text x="65.3146%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.24%)</title><rect x="65.1247%" y="325" width="0.2403%" height="15" fill="rgb(235,190,38)" fg:x="2168" fg:w="8"/><text x="65.3747%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.09%)</title><rect x="65.2749%" y="309" width="0.0901%" height="15" fill="rgb(247,86,24)" fg:x="2173" fg:w="3"/><text x="65.5249%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.12%)</title><rect x="65.3650%" y="341" width="0.1202%" height="15" fill="rgb(205,101,16)" fg:x="2176" fg:w="4"/><text x="65.6150%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="65.4851%" y="341" width="0.0300%" height="15" fill="rgb(246,168,33)" fg:x="2180" fg:w="1"/><text x="65.7351%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.45%)</title><rect x="65.6053%" y="325" width="0.4506%" height="15" fill="rgb(231,114,1)" fg:x="2184" fg:w="15"/><text x="65.8553%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.33%)</title><rect x="65.7254%" y="309" width="0.3304%" height="15" fill="rgb(207,184,53)" fg:x="2188" fg:w="11"/><text x="65.9754%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.30%)</title><rect x="65.7555%" y="293" width="0.3004%" height="15" fill="rgb(224,95,51)" fg:x="2189" fg:w="10"/><text x="66.0055%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.12%)</title><rect x="65.9357%" y="277" width="0.1202%" height="15" fill="rgb(212,188,45)" fg:x="2195" fg:w="4"/><text x="66.1857%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.06%)</title><rect x="66.0559%" y="325" width="0.0601%" height="15" fill="rgb(223,154,38)" fg:x="2199" fg:w="2"/><text x="66.3059%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (1 samples, 0.03%)</title><rect x="66.1160%" y="325" width="0.0300%" height="15" fill="rgb(251,22,52)" fg:x="2201" fg:w="1"/><text x="66.3660%" y="335.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::clone::Clone&gt;::clone (22 samples, 0.66%)</title><rect x="65.5152%" y="341" width="0.6609%" height="15" fill="rgb(229,209,22)" fg:x="2181" fg:w="22"/><text x="65.7652%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="66.1460%" y="325" width="0.0300%" height="15" fill="rgb(234,138,34)" fg:x="2202" fg:w="1"/><text x="66.3960%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="66.1760%" y="309" width="0.0300%" height="15" fill="rgb(212,95,11)" fg:x="2203" fg:w="1"/><text x="66.4260%" y="319.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.06%)</title><rect x="66.1760%" y="341" width="0.0601%" height="15" fill="rgb(240,179,47)" fg:x="2203" fg:w="2"/><text x="66.4260%" y="351.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.06%)</title><rect x="66.1760%" y="325" width="0.0601%" height="15" fill="rgb(240,163,11)" fg:x="2203" fg:w="2"/><text x="66.4260%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="66.2061%" y="309" width="0.0300%" height="15" fill="rgb(236,37,12)" fg:x="2204" fg:w="1"/><text x="66.4561%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.15%)</title><rect x="66.3262%" y="325" width="0.1502%" height="15" fill="rgb(232,164,16)" fg:x="2208" fg:w="5"/><text x="66.5762%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.15%)</title><rect x="66.3262%" y="309" width="0.1502%" height="15" fill="rgb(244,205,15)" fg:x="2208" fg:w="5"/><text x="66.5762%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.12%)</title><rect x="66.3563%" y="293" width="0.1202%" height="15" fill="rgb(223,117,47)" fg:x="2209" fg:w="4"/><text x="66.6063%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="66.4163%" y="277" width="0.0601%" height="15" fill="rgb(244,107,35)" fg:x="2211" fg:w="2"/><text x="66.6663%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.06%)</title><rect x="66.4764%" y="325" width="0.0601%" height="15" fill="rgb(205,140,8)" fg:x="2213" fg:w="2"/><text x="66.7264%" y="335.50"></text></g><g><title>web-server`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.27%)</title><rect x="66.5365%" y="325" width="0.2704%" height="15" fill="rgb(228,84,46)" fg:x="2215" fg:w="9"/><text x="66.7865%" y="335.50"></text></g><g><title>web-server`core::str::pattern::TwoWaySearcher::next (6 samples, 0.18%)</title><rect x="66.6266%" y="309" width="0.1802%" height="15" fill="rgb(254,188,9)" fg:x="2218" fg:w="6"/><text x="66.8766%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.03%)</title><rect x="66.8068%" y="293" width="0.0300%" height="15" fill="rgb(206,112,54)" fg:x="2224" fg:w="1"/><text x="67.0568%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.03%)</title><rect x="66.8369%" y="277" width="0.0300%" height="15" fill="rgb(216,84,49)" fg:x="2225" fg:w="1"/><text x="67.0869%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="66.8669%" y="261" width="0.0300%" height="15" fill="rgb(214,194,35)" fg:x="2226" fg:w="1"/><text x="67.1169%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (2 samples, 0.06%)</title><rect x="66.8970%" y="261" width="0.0601%" height="15" fill="rgb(249,28,3)" fg:x="2227" fg:w="2"/><text x="67.1470%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.09%)</title><rect x="66.9871%" y="245" width="0.0901%" height="15" fill="rgb(222,56,52)" fg:x="2230" fg:w="3"/><text x="67.2371%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.06%)</title><rect x="67.0171%" y="229" width="0.0601%" height="15" fill="rgb(245,217,50)" fg:x="2231" fg:w="2"/><text x="67.2671%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.03%)</title><rect x="67.1373%" y="213" width="0.0300%" height="15" fill="rgb(213,201,24)" fg:x="2235" fg:w="1"/><text x="67.3873%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.15%)</title><rect x="67.0772%" y="245" width="0.1502%" height="15" fill="rgb(248,116,28)" fg:x="2233" fg:w="5"/><text x="67.3272%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.15%)</title><rect x="67.0772%" y="229" width="0.1502%" height="15" fill="rgb(219,72,43)" fg:x="2233" fg:w="5"/><text x="67.3272%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="67.1673%" y="213" width="0.0601%" height="15" fill="rgb(209,138,14)" fg:x="2236" fg:w="2"/><text x="67.4173%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="67.1974%" y="197" width="0.0300%" height="15" fill="rgb(222,18,33)" fg:x="2237" fg:w="1"/><text x="67.4474%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="67.2274%" y="245" width="0.0300%" height="15" fill="rgb(213,199,7)" fg:x="2238" fg:w="1"/><text x="67.4774%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="67.2274%" y="229" width="0.0300%" height="15" fill="rgb(250,110,10)" fg:x="2238" fg:w="1"/><text x="67.4774%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (4 samples, 0.12%)</title><rect x="67.2574%" y="245" width="0.1202%" height="15" fill="rgb(248,123,6)" fg:x="2239" fg:w="4"/><text x="67.5074%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (15 samples, 0.45%)</title><rect x="66.9570%" y="261" width="0.4506%" height="15" fill="rgb(206,91,31)" fg:x="2229" fg:w="15"/><text x="67.2070%" y="271.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.03%)</title><rect x="67.3776%" y="245" width="0.0300%" height="15" fill="rgb(211,154,13)" fg:x="2243" fg:w="1"/><text x="67.6276%" y="255.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="67.4076%" y="261" width="0.0300%" height="15" fill="rgb(225,148,7)" fg:x="2244" fg:w="1"/><text x="67.6576%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (21 samples, 0.63%)</title><rect x="66.8669%" y="277" width="0.6308%" height="15" fill="rgb(220,160,43)" fg:x="2226" fg:w="21"/><text x="67.1169%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="67.4377%" y="261" width="0.0601%" height="15" fill="rgb(213,52,39)" fg:x="2245" fg:w="2"/><text x="67.6877%" y="271.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.72%)</title><rect x="66.8068%" y="325" width="0.7209%" height="15" fill="rgb(243,137,7)" fg:x="2224" fg:w="24"/><text x="67.0568%" y="335.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (24 samples, 0.72%)</title><rect x="66.8068%" y="309" width="0.7209%" height="15" fill="rgb(230,79,13)" fg:x="2224" fg:w="24"/><text x="67.0568%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (23 samples, 0.69%)</title><rect x="66.8369%" y="293" width="0.6909%" height="15" fill="rgb(247,105,23)" fg:x="2225" fg:w="23"/><text x="67.0869%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.03%)</title><rect x="67.4977%" y="277" width="0.0300%" height="15" fill="rgb(223,179,41)" fg:x="2247" fg:w="1"/><text x="67.7477%" y="287.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="67.5278%" y="325" width="0.0300%" height="15" fill="rgb(218,9,34)" fg:x="2248" fg:w="1"/><text x="67.7778%" y="335.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 1.35%)</title><rect x="66.2361%" y="341" width="1.3518%" height="15" fill="rgb(222,106,8)" fg:x="2205" fg:w="45"/><text x="66.4861%" y="351.50"></text></g><g><title>web-server`core::str::pattern::TwoWaySearcher::next (1 samples, 0.03%)</title><rect x="67.5578%" y="325" width="0.0300%" height="15" fill="rgb(211,220,0)" fg:x="2249" fg:w="1"/><text x="67.8078%" y="335.50"></text></g><g><title>web-server`&lt;std::fs::File as std::io::Write&gt;::flush (3 samples, 0.09%)</title><rect x="67.5879%" y="341" width="0.0901%" height="15" fill="rgb(229,52,16)" fg:x="2250" fg:w="3"/><text x="67.8379%" y="351.50"></text></g><g><title>web-server`DYLD-STUB$$malloc (1 samples, 0.03%)</title><rect x="67.6780%" y="341" width="0.0300%" height="15" fill="rgb(212,155,18)" fg:x="2253" fg:w="1"/><text x="67.9280%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.21%)</title><rect x="67.7080%" y="325" width="0.2103%" height="15" fill="rgb(242,21,14)" fg:x="2254" fg:w="7"/><text x="67.9580%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.18%)</title><rect x="67.7381%" y="309" width="0.1802%" height="15" fill="rgb(222,19,48)" fg:x="2255" fg:w="6"/><text x="67.9881%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.18%)</title><rect x="67.7381%" y="293" width="0.1802%" height="15" fill="rgb(232,45,27)" fg:x="2255" fg:w="6"/><text x="67.9881%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.15%)</title><rect x="67.7681%" y="277" width="0.1502%" height="15" fill="rgb(249,103,42)" fg:x="2256" fg:w="5"/><text x="68.0181%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="67.8883%" y="261" width="0.0300%" height="15" fill="rgb(246,81,33)" fg:x="2260" fg:w="1"/><text x="68.1383%" y="271.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.12%)</title><rect x="67.9784%" y="309" width="0.1202%" height="15" fill="rgb(252,33,42)" fg:x="2263" fg:w="4"/><text x="68.2284%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.09%)</title><rect x="68.0084%" y="293" width="0.0901%" height="15" fill="rgb(209,212,41)" fg:x="2264" fg:w="3"/><text x="68.2584%" y="303.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="68.1586%" y="293" width="0.0300%" height="15" fill="rgb(207,154,6)" fg:x="2269" fg:w="1"/><text x="68.4086%" y="303.50"></text></g><g><title>web-server`core::fmt::Formatter::pad_integral (1 samples, 0.03%)</title><rect x="68.1886%" y="293" width="0.0300%" height="15" fill="rgb(223,64,47)" fg:x="2270" fg:w="1"/><text x="68.4386%" y="303.50"></text></g><g><title>web-server`alloc::fmt::format (18 samples, 0.54%)</title><rect x="67.7080%" y="341" width="0.5407%" height="15" fill="rgb(211,161,38)" fg:x="2254" fg:w="18"/><text x="67.9580%" y="351.50"></text></g><g><title>web-server`core::fmt::write (11 samples, 0.33%)</title><rect x="67.9183%" y="325" width="0.3304%" height="15" fill="rgb(219,138,40)" fg:x="2261" fg:w="11"/><text x="68.1683%" y="335.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for i64&gt;::fmt (5 samples, 0.15%)</title><rect x="68.0985%" y="309" width="0.1502%" height="15" fill="rgb(241,228,46)" fg:x="2267" fg:w="5"/><text x="68.3485%" y="319.50"></text></g><g><title>web-server`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.03%)</title><rect x="68.2187%" y="293" width="0.0300%" height="15" fill="rgb(223,209,38)" fg:x="2271" fg:w="1"/><text x="68.4687%" y="303.50"></text></g><g><title>web-server`core::fmt::Formatter::pad (2 samples, 0.06%)</title><rect x="68.2487%" y="341" width="0.0601%" height="15" fill="rgb(236,164,45)" fg:x="2272" fg:w="2"/><text x="68.4987%" y="351.50"></text></g><g><title>web-server`core::str::pattern::StrSearcher::new (34 samples, 1.02%)</title><rect x="68.3088%" y="341" width="1.0213%" height="15" fill="rgb(231,15,5)" fg:x="2274" fg:w="34"/><text x="68.5588%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (31 samples, 0.93%)</title><rect x="68.3989%" y="325" width="0.9312%" height="15" fill="rgb(252,35,15)" fg:x="2277" fg:w="31"/><text x="68.6489%" y="335.50"></text></g><g><title>web-server`std::net::udp::UdpSocket::send (1 samples, 0.03%)</title><rect x="69.3301%" y="341" width="0.0300%" height="15" fill="rgb(248,181,18)" fg:x="2308" fg:w="1"/><text x="69.5801%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (213 samples, 6.40%)</title><rect x="69.3602%" y="325" width="6.3983%" height="15" fill="rgb(233,39,42)" fg:x="2309" fg:w="213"/><text x="69.6102%" y="335.50">libsyste..</text></g><g><title>web-server`std::os::unix::net::stream::UnixStream::try_clone (214 samples, 6.43%)</title><rect x="69.3602%" y="341" width="6.4284%" height="15" fill="rgb(238,110,33)" fg:x="2309" fg:w="214"/><text x="69.6102%" y="351.50">web-serv..</text></g><g><title>libsystem_kernel.dylib`fcntl (1 samples, 0.03%)</title><rect x="75.7585%" y="325" width="0.0300%" height="15" fill="rgb(233,195,10)" fg:x="2522" fg:w="1"/><text x="76.0085%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.15%)</title><rect x="75.9688%" y="309" width="0.1502%" height="15" fill="rgb(254,105,3)" fg:x="2529" fg:w="5"/><text x="76.2188%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.15%)</title><rect x="75.9688%" y="293" width="0.1502%" height="15" fill="rgb(221,225,9)" fg:x="2529" fg:w="5"/><text x="76.2188%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.15%)</title><rect x="75.9688%" y="277" width="0.1502%" height="15" fill="rgb(224,227,45)" fg:x="2529" fg:w="5"/><text x="76.2188%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.12%)</title><rect x="75.9988%" y="261" width="0.1202%" height="15" fill="rgb(229,198,43)" fg:x="2530" fg:w="4"/><text x="76.2488%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (13 samples, 0.39%)</title><rect x="76.1490%" y="293" width="0.3905%" height="15" fill="rgb(206,209,35)" fg:x="2535" fg:w="13"/><text x="76.3990%" y="303.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (26 samples, 0.78%)</title><rect x="75.7885%" y="341" width="0.7810%" height="15" fill="rgb(245,195,53)" fg:x="2523" fg:w="26"/><text x="76.0385%" y="351.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (24 samples, 0.72%)</title><rect x="75.8486%" y="325" width="0.7209%" height="15" fill="rgb(240,92,26)" fg:x="2525" fg:w="24"/><text x="76.0986%" y="335.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (15 samples, 0.45%)</title><rect x="76.1190%" y="309" width="0.4506%" height="15" fill="rgb(207,40,23)" fg:x="2534" fg:w="15"/><text x="76.3690%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.03%)</title><rect x="76.5395%" y="293" width="0.0300%" height="15" fill="rgb(223,111,35)" fg:x="2548" fg:w="1"/><text x="76.7895%" y="303.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (1 samples, 0.03%)</title><rect x="76.5695%" y="341" width="0.0300%" height="15" fill="rgb(229,147,28)" fg:x="2549" fg:w="1"/><text x="76.8195%" y="351.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__error (1 samples, 0.03%)</title><rect x="76.8099%" y="325" width="0.0300%" height="15" fill="rgb(211,29,28)" fg:x="2557" fg:w="1"/><text x="77.0599%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`_pthread_exit_if_canceled (1 samples, 0.03%)</title><rect x="76.9901%" y="309" width="0.0300%" height="15" fill="rgb(228,72,33)" fg:x="2563" fg:w="1"/><text x="77.2401%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`cerror (1 samples, 0.03%)</title><rect x="77.0201%" y="309" width="0.0300%" height="15" fill="rgb(205,214,31)" fg:x="2564" fg:w="1"/><text x="77.2701%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (3 samples, 0.09%)</title><rect x="77.0502%" y="309" width="0.0901%" height="15" fill="rgb(224,111,15)" fg:x="2565" fg:w="3"/><text x="77.3002%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (24 samples, 0.72%)</title><rect x="77.1403%" y="293" width="0.7209%" height="15" fill="rgb(253,21,26)" fg:x="2568" fg:w="24"/><text x="77.3903%" y="303.50"></text></g><g><title>libsystem_c.dylib`nanosleep (45 samples, 1.35%)</title><rect x="76.8399%" y="325" width="1.3518%" height="15" fill="rgb(245,139,43)" fg:x="2558" fg:w="45"/><text x="77.0899%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (35 samples, 1.05%)</title><rect x="77.1403%" y="309" width="1.0514%" height="15" fill="rgb(252,170,7)" fg:x="2568" fg:w="35"/><text x="77.3903%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_reply_port (11 samples, 0.33%)</title><rect x="77.8612%" y="293" width="0.3304%" height="15" fill="rgb(231,118,14)" fg:x="2592" fg:w="11"/><text x="78.1112%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__error (1 samples, 0.03%)</title><rect x="78.1916%" y="325" width="0.0300%" height="15" fill="rgb(238,83,0)" fg:x="2603" fg:w="1"/><text x="78.4416%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (117 samples, 3.51%)</title><rect x="78.2217%" y="325" width="3.5146%" height="15" fill="rgb(221,39,39)" fg:x="2604" fg:w="117"/><text x="78.4717%" y="335.50">lib..</text></g><g><title>web-server`std::thread::sleep (176 samples, 5.29%)</title><rect x="76.5996%" y="341" width="5.2869%" height="15" fill="rgb(222,119,46)" fg:x="2550" fg:w="176"/><text x="76.8496%" y="351.50">web-se..</text></g><g><title>libsystem_kernel.dylib`cerror (5 samples, 0.15%)</title><rect x="81.7363%" y="325" width="0.1502%" height="15" fill="rgb(222,165,49)" fg:x="2721" fg:w="5"/><text x="81.9863%" y="335.50"></text></g><g><title>libsystem_c.dylib`send (1 samples, 0.03%)</title><rect x="81.8865%" y="325" width="0.0300%" height="15" fill="rgb(219,113,52)" fg:x="2726" fg:w="1"/><text x="82.1365%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (487 samples, 14.63%)</title><rect x="81.9165%" y="325" width="14.6290%" height="15" fill="rgb(214,7,15)" fg:x="2727" fg:w="487"/><text x="82.1665%" y="335.50">libsystem_kernel.dylib..</text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.15%)</title><rect x="96.5455%" y="325" width="0.1502%" height="15" fill="rgb(235,32,4)" fg:x="3214" fg:w="5"/><text x="96.7955%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="96.6657%" y="309" width="0.0300%" height="15" fill="rgb(238,90,54)" fg:x="3218" fg:w="1"/><text x="96.9157%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="96.6657%" y="293" width="0.0300%" height="15" fill="rgb(213,208,19)" fg:x="3218" fg:w="1"/><text x="96.9157%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="96.7558%" y="309" width="0.0300%" height="15" fill="rgb(233,156,4)" fg:x="3221" fg:w="1"/><text x="97.0058%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.12%)</title><rect x="96.6957%" y="325" width="0.1202%" height="15" fill="rgb(207,194,5)" fg:x="3219" fg:w="4"/><text x="96.9457%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.03%)</title><rect x="96.7858%" y="309" width="0.0300%" height="15" fill="rgb(206,111,30)" fg:x="3222" fg:w="1"/><text x="97.0358%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.09%)</title><rect x="96.9360%" y="309" width="0.0901%" height="15" fill="rgb(243,70,54)" fg:x="3227" fg:w="3"/><text x="97.1860%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.09%)</title><rect x="96.9360%" y="293" width="0.0901%" height="15" fill="rgb(242,28,8)" fg:x="3227" fg:w="3"/><text x="97.1860%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.06%)</title><rect x="96.9661%" y="277" width="0.0601%" height="15" fill="rgb(219,106,18)" fg:x="3228" fg:w="2"/><text x="97.2161%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="96.9661%" y="261" width="0.0601%" height="15" fill="rgb(244,222,10)" fg:x="3228" fg:w="2"/><text x="97.2161%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="96.9961%" y="245" width="0.0300%" height="15" fill="rgb(236,179,52)" fg:x="3229" fg:w="1"/><text x="97.2461%" y="255.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.03%)</title><rect x="97.0261%" y="309" width="0.0300%" height="15" fill="rgb(213,23,39)" fg:x="3230" fg:w="1"/><text x="97.2761%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="97.0562%" y="293" width="0.0601%" height="15" fill="rgb(238,48,10)" fg:x="3231" fg:w="2"/><text x="97.3062%" y="303.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.09%)</title><rect x="97.1163%" y="293" width="0.0901%" height="15" fill="rgb(251,196,23)" fg:x="3233" fg:w="3"/><text x="97.3663%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="97.1763%" y="277" width="0.0300%" height="15" fill="rgb(250,152,24)" fg:x="3235" fg:w="1"/><text x="97.4263%" y="287.50"></text></g><g><title>web-server`alloc::fmt::format (15 samples, 0.45%)</title><rect x="96.8159%" y="325" width="0.4506%" height="15" fill="rgb(209,150,17)" fg:x="3223" fg:w="15"/><text x="97.0659%" y="335.50"></text></g><g><title>web-server`core::fmt::write (7 samples, 0.21%)</title><rect x="97.0562%" y="309" width="0.2103%" height="15" fill="rgb(234,202,34)" fg:x="3231" fg:w="7"/><text x="97.3062%" y="319.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.06%)</title><rect x="97.2064%" y="293" width="0.0601%" height="15" fill="rgb(253,148,53)" fg:x="3236" fg:w="2"/><text x="97.4564%" y="303.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="97.2364%" y="277" width="0.0300%" height="15" fill="rgb(218,129,16)" fg:x="3237" fg:w="1"/><text x="97.4864%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="97.2364%" y="261" width="0.0300%" height="15" fill="rgb(216,85,19)" fg:x="3237" fg:w="1"/><text x="97.4864%" y="271.50"></text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (2,639 samples, 79.27%)</title><rect x="18.0535%" y="389" width="79.2731%" height="15" fill="rgb(235,228,7)" fg:x="601" fg:w="2639"/><text x="18.3035%" y="399.50">web-server`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (1,512 samples, 45.42%)</title><rect x="51.9075%" y="373" width="45.4190%" height="15" fill="rgb(245,175,0)" fg:x="1728" fg:w="1512"/><text x="52.1575%" y="383.50">web-server`rusty_junctions::function_transforms::unary::transform_send::_{..</text></g><g><title>web-server`web_server::request::Request::handle_pooled (1,098 samples, 32.98%)</title><rect x="64.3436%" y="357" width="32.9829%" height="15" fill="rgb(208,168,36)" fg:x="2142" fg:w="1098"/><text x="64.5936%" y="367.50">web-server`web_server::request::Request::handle_pooled</text></g><g><title>web-server`web_server::request::Request::respond_ok (514 samples, 15.44%)</title><rect x="81.8865%" y="341" width="15.4401%" height="15" fill="rgb(246,171,24)" fg:x="2726" fg:w="514"/><text x="82.1365%" y="351.50">web-server`web_server::r..</text></g><g><title>web-server`std::net::udp::UdpSocket::send (2 samples, 0.06%)</title><rect x="97.2664%" y="325" width="0.0601%" height="15" fill="rgb(215,142,24)" fg:x="3238" fg:w="2"/><text x="97.5164%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.09%)</title><rect x="97.7771%" y="341" width="0.0901%" height="15" fill="rgb(250,187,7)" fg:x="3255" fg:w="3"/><text x="98.0271%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.09%)</title><rect x="97.7771%" y="325" width="0.0901%" height="15" fill="rgb(228,66,33)" fg:x="3255" fg:w="3"/><text x="98.0271%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.09%)</title><rect x="97.7771%" y="309" width="0.0901%" height="15" fill="rgb(234,215,21)" fg:x="3255" fg:w="3"/><text x="98.0271%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.06%)</title><rect x="97.8071%" y="293" width="0.0601%" height="15" fill="rgb(222,191,20)" fg:x="3256" fg:w="2"/><text x="98.0571%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.06%)</title><rect x="97.8071%" y="277" width="0.0601%" height="15" fill="rgb(245,79,54)" fg:x="3256" fg:w="2"/><text x="98.0571%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.06%)</title><rect x="97.8672%" y="341" width="0.0601%" height="15" fill="rgb(240,10,37)" fg:x="3258" fg:w="2"/><text x="98.1172%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_allocate_and_initialize_for_key (14 samples, 0.42%)</title><rect x="97.5668%" y="357" width="0.4205%" height="15" fill="rgb(214,192,32)" fg:x="3248" fg:w="14"/><text x="97.8168%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.06%)</title><rect x="97.9273%" y="341" width="0.0601%" height="15" fill="rgb(209,36,54)" fg:x="3260" fg:w="2"/><text x="98.1773%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (22 samples, 0.66%)</title><rect x="97.3866%" y="373" width="0.6609%" height="15" fill="rgb(220,10,11)" fg:x="3242" fg:w="22"/><text x="97.6366%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_setspecific (2 samples, 0.06%)</title><rect x="97.9874%" y="357" width="0.0601%" height="15" fill="rgb(221,106,17)" fg:x="3262" fg:w="2"/><text x="98.2374%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="98.0475%" y="357" width="0.0300%" height="15" fill="rgb(251,142,44)" fg:x="3264" fg:w="1"/><text x="98.2975%" y="367.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (2,677 samples, 80.41%)</title><rect x="17.7531%" y="405" width="80.4145%" height="15" fill="rgb(238,13,15)" fg:x="591" fg:w="2677"/><text x="18.0031%" y="415.50">web-server`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>web-server`std::sys_common::thread_info::set (28 samples, 0.84%)</title><rect x="97.3265%" y="389" width="0.8411%" height="15" fill="rgb(208,107,27)" fg:x="3240" fg:w="28"/><text x="97.5765%" y="399.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.12%)</title><rect x="98.0475%" y="373" width="0.1202%" height="15" fill="rgb(205,136,37)" fg:x="3264" fg:w="4"/><text x="98.2975%" y="383.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (3 samples, 0.09%)</title><rect x="98.0775%" y="357" width="0.0901%" height="15" fill="rgb(250,205,27)" fg:x="3265" fg:w="3"/><text x="98.3275%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.09%)</title><rect x="98.0775%" y="341" width="0.0901%" height="15" fill="rgb(210,80,43)" fg:x="3265" fg:w="3"/><text x="98.3275%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.09%)</title><rect x="98.0775%" y="325" width="0.0901%" height="15" fill="rgb(247,160,36)" fg:x="3265" fg:w="3"/><text x="98.3275%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.09%)</title><rect x="98.0775%" y="309" width="0.0901%" height="15" fill="rgb(234,13,49)" fg:x="3265" fg:w="3"/><text x="98.3275%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.09%)</title><rect x="98.0775%" y="293" width="0.0901%" height="15" fill="rgb(234,122,0)" fg:x="3265" fg:w="3"/><text x="98.3275%" y="303.50"></text></g><g><title>libsystem_c.dylib`sysconf (1 samples, 0.03%)</title><rect x="98.7083%" y="389" width="0.0300%" height="15" fill="rgb(207,146,38)" fg:x="3286" fg:w="1"/><text x="98.9583%" y="399.50"></text></g><g><title>web-server`std::sys::unix::stack_overflow::imp::make_handler (60 samples, 1.80%)</title><rect x="98.1676%" y="405" width="1.8023%" height="15" fill="rgb(207,177,25)" fg:x="3268" fg:w="60"/><text x="98.4176%" y="415.50">w..</text></g><g><title>libsystem_kernel.dylib`__mmap (41 samples, 1.23%)</title><rect x="98.7384%" y="389" width="1.2316%" height="15" fill="rgb(211,178,42)" fg:x="3287" fg:w="41"/><text x="98.9884%" y="399.50"></text></g><g><title>all (3,329 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(230,69,54)" fg:x="0" fg:w="3329"/><text x="0.2500%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (3,187 samples, 95.73%)</title><rect x="4.2655%" y="453" width="95.7345%" height="15" fill="rgb(214,135,41)" fg:x="142" fg:w="3187"/><text x="4.5155%" y="463.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (3,030 samples, 91.02%)</title><rect x="8.9817%" y="437" width="91.0183%" height="15" fill="rgb(237,67,25)" fg:x="299" fg:w="3030"/><text x="9.2317%" y="447.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (2,814 samples, 84.53%)</title><rect x="15.4701%" y="421" width="84.5299%" height="15" fill="rgb(222,189,50)" fg:x="515" fg:w="2814"/><text x="15.7201%" y="431.50">web-server`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>web-server`std::sys_common::thread_info::set (1 samples, 0.03%)</title><rect x="99.9700%" y="405" width="0.0300%" height="15" fill="rgb(245,148,34)" fg:x="3328" fg:w="1"/><text x="100.2200%" y="415.50"></text></g></svg></svg>