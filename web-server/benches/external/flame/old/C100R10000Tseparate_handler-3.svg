<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="406" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="389.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="389.00"> </text><svg id="frames" x="10" width="1180" total_samples="2838"><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="0.0000%" y="245" width="0.0352%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>web-server`__rust_alloc (1 samples, 0.04%)</title><rect x="0.0352%" y="245" width="0.0352%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2852%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.14%)</title><rect x="0.0705%" y="229" width="0.1409%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="4"/><text x="0.3205%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.14%)</title><rect x="0.0705%" y="213" width="0.1409%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="4"/><text x="0.3205%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.14%)</title><rect x="0.0705%" y="197" width="0.1409%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="4"/><text x="0.3205%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="0.1762%" y="181" width="0.0352%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="1"/><text x="0.4262%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.07%)</title><rect x="0.2114%" y="229" width="0.0705%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="2"/><text x="0.4614%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__accept (123 samples, 4.33%)</title><rect x="0.6695%" y="197" width="4.3340%" height="15" fill="rgb(228,23,34)" fg:x="19" fg:w="123"/><text x="0.9195%" y="207.50">libsy..</text></g><g><title>web-server`&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (143 samples, 5.04%)</title><rect x="0.2819%" y="229" width="5.0388%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="143"/><text x="0.5319%" y="239.50">web-se..</text></g><g><title>web-server`std::net::tcp::TcpListener::accept (143 samples, 5.04%)</title><rect x="0.2819%" y="213" width="5.0388%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="143"/><text x="0.5319%" y="223.50">web-se..</text></g><g><title>web-server`std::sys::unix::net::Socket::accept (9 samples, 0.32%)</title><rect x="5.0035%" y="197" width="0.3171%" height="15" fill="rgb(250,228,42)" fg:x="142" fg:w="9"/><text x="5.2535%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (8 samples, 0.28%)</title><rect x="5.0388%" y="181" width="0.2819%" height="15" fill="rgb(240,193,28)" fg:x="143" fg:w="8"/><text x="5.2888%" y="191.50"></text></g><g><title>0x1 (156 samples, 5.50%)</title><rect x="0.0000%" y="341" width="5.4968%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="156"/><text x="0.2500%" y="351.50">0x1</text></g><g><title>libdyld.dylib`start (156 samples, 5.50%)</title><rect x="0.0000%" y="325" width="5.4968%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="156"/><text x="0.2500%" y="335.50">libdyld..</text></g><g><title>web-server`main (156 samples, 5.50%)</title><rect x="0.0000%" y="309" width="5.4968%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="156"/><text x="0.2500%" y="319.50">web-ser..</text></g><g><title>web-server`std::rt::lang_start_internal (156 samples, 5.50%)</title><rect x="0.0000%" y="293" width="5.4968%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="156"/><text x="0.2500%" y="303.50">web-ser..</text></g><g><title>web-server`std::rt::lang_start::_{{closure}} (156 samples, 5.50%)</title><rect x="0.0000%" y="277" width="5.4968%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="156"/><text x="0.2500%" y="287.50">web-ser..</text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (156 samples, 5.50%)</title><rect x="0.0000%" y="261" width="5.4968%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="156"/><text x="0.2500%" y="271.50">web-ser..</text></g><g><title>web-server`web_server::web_server::WebServer::start_with_separate_handler (154 samples, 5.43%)</title><rect x="0.0705%" y="245" width="5.4264%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="154"/><text x="0.3205%" y="255.50">web-ser..</text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (5 samples, 0.18%)</title><rect x="5.3206%" y="229" width="0.1762%" height="15" fill="rgb(226,26,5)" fg:x="151" fg:w="5"/><text x="5.5706%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (5 samples, 0.18%)</title><rect x="5.3206%" y="213" width="0.1762%" height="15" fill="rgb(249,33,26)" fg:x="151" fg:w="5"/><text x="5.5706%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (4 samples, 0.14%)</title><rect x="5.3559%" y="197" width="0.1409%" height="15" fill="rgb(235,183,28)" fg:x="152" fg:w="4"/><text x="5.6059%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.14%)</title><rect x="5.3559%" y="181" width="0.1409%" height="15" fill="rgb(221,5,38)" fg:x="152" fg:w="4"/><text x="5.6059%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (204 samples, 7.19%)</title><rect x="5.4968%" y="341" width="7.1882%" height="15" fill="rgb(247,18,42)" fg:x="156" fg:w="204"/><text x="5.7468%" y="351.50">libsystem_..</text></g><g><title>libsystem_kernel.dylib`__thread_selfid (16 samples, 0.56%)</title><rect x="22.1635%" y="325" width="0.5638%" height="15" fill="rgb(241,131,45)" fg:x="629" fg:w="16"/><text x="22.4135%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (2 samples, 0.07%)</title><rect x="22.7273%" y="325" width="0.0705%" height="15" fill="rgb(249,31,29)" fg:x="645" fg:w="2"/><text x="22.9773%" y="335.50"></text></g><g><title>libsystem_c.dylib`sysconf (1 samples, 0.04%)</title><rect x="22.8330%" y="309" width="0.0352%" height="15" fill="rgb(225,111,53)" fg:x="648" fg:w="1"/><text x="23.0830%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__disable_threadsignal (13 samples, 0.46%)</title><rect x="22.8682%" y="309" width="0.4581%" height="15" fill="rgb(238,160,17)" fg:x="649" fg:w="13"/><text x="23.1182%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (109 samples, 3.84%)</title><rect x="23.3263%" y="309" width="3.8407%" height="15" fill="rgb(214,148,48)" fg:x="662" fg:w="109"/><text x="23.5763%" y="319.50">libs..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (22 samples, 0.78%)</title><rect x="27.1670%" y="309" width="0.7752%" height="15" fill="rgb(232,36,49)" fg:x="771" fg:w="22"/><text x="27.4170%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$__disable_threadsignal (1 samples, 0.04%)</title><rect x="27.9422%" y="309" width="0.0352%" height="15" fill="rgb(209,103,24)" fg:x="793" fg:w="1"/><text x="28.1922%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_finalize (1 samples, 0.04%)</title><rect x="28.0127%" y="293" width="0.0352%" height="15" fill="rgb(229,88,8)" fg:x="795" fg:w="1"/><text x="28.2627%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_finalize_list (1 samples, 0.04%)</title><rect x="28.0479%" y="293" width="0.0352%" height="15" fill="rgb(213,181,19)" fg:x="796" fg:w="1"/><text x="28.2979%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_free (1 samples, 0.04%)</title><rect x="28.0832%" y="293" width="0.0352%" height="15" fill="rgb(254,191,54)" fg:x="797" fg:w="1"/><text x="28.3332%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="28.1184%" y="293" width="0.0352%" height="15" fill="rgb(241,83,37)" fg:x="798" fg:w="1"/><text x="28.3684%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.07%)</title><rect x="28.6822%" y="261" width="0.0705%" height="15" fill="rgb(233,36,39)" fg:x="814" fg:w="2"/><text x="28.9322%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.04%)</title><rect x="28.7526%" y="245" width="0.0352%" height="15" fill="rgb(226,3,54)" fg:x="816" fg:w="1"/><text x="29.0026%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.07%)</title><rect x="28.7879%" y="245" width="0.0705%" height="15" fill="rgb(245,192,40)" fg:x="817" fg:w="2"/><text x="29.0379%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="28.8231%" y="229" width="0.0352%" height="15" fill="rgb(238,167,29)" fg:x="818" fg:w="1"/><text x="29.0731%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="28.8231%" y="213" width="0.0352%" height="15" fill="rgb(232,182,51)" fg:x="818" fg:w="1"/><text x="29.0731%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="28.9993%" y="229" width="0.0352%" height="15" fill="rgb(231,60,39)" fg:x="823" fg:w="1"/><text x="29.2493%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.07%)</title><rect x="29.1402%" y="213" width="0.0705%" height="15" fill="rgb(208,69,12)" fg:x="827" fg:w="2"/><text x="29.3902%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.42%)</title><rect x="28.8584%" y="245" width="0.4228%" height="15" fill="rgb(235,93,37)" fg:x="819" fg:w="12"/><text x="29.1084%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.25%)</title><rect x="29.0345%" y="229" width="0.2467%" height="15" fill="rgb(213,116,39)" fg:x="824" fg:w="7"/><text x="29.2845%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.07%)</title><rect x="29.2107%" y="213" width="0.0705%" height="15" fill="rgb(222,207,29)" fg:x="829" fg:w="2"/><text x="29.4607%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="29.3164%" y="229" width="0.0352%" height="15" fill="rgb(206,96,30)" fg:x="832" fg:w="1"/><text x="29.5664%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.14%)</title><rect x="29.3517%" y="229" width="0.1409%" height="15" fill="rgb(218,138,4)" fg:x="833" fg:w="4"/><text x="29.6017%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.14%)</title><rect x="29.3517%" y="213" width="0.1409%" height="15" fill="rgb(250,191,14)" fg:x="833" fg:w="4"/><text x="29.6017%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.14%)</title><rect x="29.3517%" y="197" width="0.1409%" height="15" fill="rgb(239,60,40)" fg:x="833" fg:w="4"/><text x="29.6017%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="29.7040%" y="197" width="0.0352%" height="15" fill="rgb(206,27,48)" fg:x="843" fg:w="1"/><text x="29.9540%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.28%)</title><rect x="29.4926%" y="229" width="0.2819%" height="15" fill="rgb(225,35,8)" fg:x="837" fg:w="8"/><text x="29.7426%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.21%)</title><rect x="29.5631%" y="213" width="0.2114%" height="15" fill="rgb(250,213,24)" fg:x="839" fg:w="6"/><text x="29.8131%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="29.7393%" y="197" width="0.0352%" height="15" fill="rgb(247,123,22)" fg:x="844" fg:w="1"/><text x="29.9893%" y="207.50"></text></g><g><title>web-server`alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.56%)</title><rect x="29.2812%" y="245" width="0.5638%" height="15" fill="rgb(231,138,38)" fg:x="831" fg:w="16"/><text x="29.5312%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (2 samples, 0.07%)</title><rect x="29.7745%" y="229" width="0.0705%" height="15" fill="rgb(231,145,46)" fg:x="845" fg:w="2"/><text x="30.0245%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_finalize_list (36 samples, 1.27%)</title><rect x="28.6469%" y="277" width="1.2685%" height="15" fill="rgb(251,118,11)" fg:x="813" fg:w="36"/><text x="28.8969%" y="287.50"></text></g><g><title>web-server`std::sys::unix::thread_local_dtor::register_dtor::run_dtors (33 samples, 1.16%)</title><rect x="28.7526%" y="261" width="1.1628%" height="15" fill="rgb(217,147,25)" fg:x="816" fg:w="33"/><text x="29.0026%" y="271.50"></text></g><g><title>web-server`std::sys_common::thread_info::THREAD_INFO::__getit::destroy (2 samples, 0.07%)</title><rect x="29.8450%" y="245" width="0.0705%" height="15" fill="rgb(247,81,37)" fg:x="847" fg:w="2"/><text x="30.0950%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="29.9154%" y="277" width="0.0352%" height="15" fill="rgb(209,12,38)" fg:x="849" fg:w="1"/><text x="30.1654%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.07%)</title><rect x="29.9507%" y="277" width="0.0705%" height="15" fill="rgb(227,1,9)" fg:x="850" fg:w="2"/><text x="30.2007%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.07%)</title><rect x="29.9507%" y="261" width="0.0705%" height="15" fill="rgb(248,47,43)" fg:x="850" fg:w="2"/><text x="30.2007%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="29.9859%" y="245" width="0.0352%" height="15" fill="rgb(221,10,30)" fg:x="851" fg:w="1"/><text x="30.2359%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (59 samples, 2.08%)</title><rect x="27.9774%" y="309" width="2.0789%" height="15" fill="rgb(210,229,1)" fg:x="794" fg:w="59"/><text x="28.2274%" y="319.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (54 samples, 1.90%)</title><rect x="28.1536%" y="293" width="1.9027%" height="15" fill="rgb(222,148,37)" fg:x="799" fg:w="54"/><text x="28.4036%" y="303.50">l..</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.04%)</title><rect x="30.0211%" y="277" width="0.0352%" height="15" fill="rgb(234,67,33)" fg:x="852" fg:w="1"/><text x="30.2711%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_setcancelstate_exit (3 samples, 0.11%)</title><rect x="30.0564%" y="309" width="0.1057%" height="15" fill="rgb(247,98,35)" fg:x="853" fg:w="3"/><text x="30.3064%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (129 samples, 4.55%)</title><rect x="30.1621%" y="277" width="4.5455%" height="15" fill="rgb(247,138,52)" fg:x="856" fg:w="129"/><text x="30.4121%" y="287.50">libsy..</text></g><g><title>libsystem_kernel.dylib`mig_dealloc_reply_port (1 samples, 0.04%)</title><rect x="34.7075%" y="277" width="0.0352%" height="15" fill="rgb(213,79,30)" fg:x="985" fg:w="1"/><text x="34.9575%" y="287.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (3 samples, 0.11%)</title><rect x="34.7428%" y="277" width="0.1057%" height="15" fill="rgb(246,177,23)" fg:x="986" fg:w="3"/><text x="34.9928%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_join$NOCANCEL (147 samples, 5.18%)</title><rect x="30.1621%" y="309" width="5.1797%" height="15" fill="rgb(230,62,27)" fg:x="856" fg:w="147"/><text x="30.4121%" y="319.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (147 samples, 5.18%)</title><rect x="30.1621%" y="293" width="5.1797%" height="15" fill="rgb(216,154,8)" fg:x="856" fg:w="147"/><text x="30.4121%" y="303.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (14 samples, 0.49%)</title><rect x="34.8485%" y="277" width="0.4933%" height="15" fill="rgb(244,35,45)" fg:x="989" fg:w="14"/><text x="35.0985%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mig_dealloc_reply_port (13 samples, 0.46%)</title><rect x="34.8837%" y="261" width="0.4581%" height="15" fill="rgb(251,115,12)" fg:x="990" fg:w="13"/><text x="35.1337%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (13 samples, 0.46%)</title><rect x="34.8837%" y="245" width="0.4581%" height="15" fill="rgb(240,54,50)" fg:x="990" fg:w="13"/><text x="35.1337%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sigaltstack (1 samples, 0.04%)</title><rect x="35.3770%" y="293" width="0.0352%" height="15" fill="rgb(233,84,52)" fg:x="1004" fg:w="1"/><text x="35.6270%" y="303.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (3 samples, 0.11%)</title><rect x="35.4123%" y="293" width="0.1057%" height="15" fill="rgb(207,117,47)" fg:x="1005" fg:w="3"/><text x="35.6623%" y="303.50"></text></g><g><title>libsystem_c.dylib`sysconf (3 samples, 0.11%)</title><rect x="35.5180%" y="293" width="0.1057%" height="15" fill="rgb(249,43,39)" fg:x="1008" fg:w="3"/><text x="35.7680%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (62 samples, 2.18%)</title><rect x="35.6237%" y="293" width="2.1846%" height="15" fill="rgb(209,38,44)" fg:x="1011" fg:w="62"/><text x="35.8737%" y="303.50">l..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (27 samples, 0.95%)</title><rect x="37.8083%" y="293" width="0.9514%" height="15" fill="rgb(236,212,23)" fg:x="1073" fg:w="27"/><text x="38.0583%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mmap (1 samples, 0.04%)</title><rect x="38.7597%" y="293" width="0.0352%" height="15" fill="rgb(242,79,21)" fg:x="1100" fg:w="1"/><text x="39.0097%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.11%)</title><rect x="38.7949%" y="293" width="0.1057%" height="15" fill="rgb(211,96,35)" fg:x="1101" fg:w="3"/><text x="39.0449%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="38.8654%" y="277" width="0.0352%" height="15" fill="rgb(253,215,40)" fg:x="1103" fg:w="1"/><text x="39.1154%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="38.8654%" y="261" width="0.0352%" height="15" fill="rgb(211,81,21)" fg:x="1103" fg:w="1"/><text x="39.1154%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="38.9359%" y="277" width="0.0352%" height="15" fill="rgb(208,190,38)" fg:x="1105" fg:w="1"/><text x="39.1859%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.21%)</title><rect x="38.9006%" y="293" width="0.2114%" height="15" fill="rgb(235,213,38)" fg:x="1104" fg:w="6"/><text x="39.1506%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.14%)</title><rect x="38.9711%" y="277" width="0.1409%" height="15" fill="rgb(237,122,38)" fg:x="1106" fg:w="4"/><text x="39.2211%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="39.1121%" y="293" width="0.0352%" height="15" fill="rgb(244,218,35)" fg:x="1110" fg:w="1"/><text x="39.3621%" y="303.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (2 samples, 0.07%)</title><rect x="39.2530%" y="277" width="0.0705%" height="15" fill="rgb(240,68,47)" fg:x="1114" fg:w="2"/><text x="39.5030%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.25%)</title><rect x="39.3235%" y="277" width="0.2467%" height="15" fill="rgb(210,16,53)" fg:x="1116" fg:w="7"/><text x="39.5735%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="39.5701%" y="277" width="0.0352%" height="15" fill="rgb(235,124,12)" fg:x="1123" fg:w="1"/><text x="39.8201%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.14%)</title><rect x="39.6054%" y="277" width="0.1409%" height="15" fill="rgb(224,169,11)" fg:x="1124" fg:w="4"/><text x="39.8554%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.11%)</title><rect x="39.6406%" y="261" width="0.1057%" height="15" fill="rgb(250,166,2)" fg:x="1125" fg:w="3"/><text x="39.8906%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="39.7111%" y="245" width="0.0352%" height="15" fill="rgb(242,216,29)" fg:x="1127" fg:w="1"/><text x="39.9611%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="39.7463%" y="277" width="0.0352%" height="15" fill="rgb(230,116,27)" fg:x="1128" fg:w="1"/><text x="39.9963%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stackaddr_np (4 samples, 0.14%)</title><rect x="39.7815%" y="277" width="0.1409%" height="15" fill="rgb(228,99,48)" fg:x="1129" fg:w="4"/><text x="40.0315%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stacksize_np (1 samples, 0.04%)</title><rect x="39.9225%" y="277" width="0.0352%" height="15" fill="rgb(253,11,6)" fg:x="1133" fg:w="1"/><text x="40.1725%" y="287.50"></text></g><g><title>web-server`__rust_alloc (1 samples, 0.04%)</title><rect x="39.9577%" y="277" width="0.0352%" height="15" fill="rgb(247,143,39)" fg:x="1134" fg:w="1"/><text x="40.2077%" y="287.50"></text></g><g><title>web-server`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.04%)</title><rect x="39.9930%" y="277" width="0.0352%" height="15" fill="rgb(236,97,10)" fg:x="1135" fg:w="1"/><text x="40.2430%" y="287.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::unary::transform_send&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},web_server::request::Request&gt;::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="40.0282%" y="277" width="0.0352%" height="15" fill="rgb(233,208,19)" fg:x="1136" fg:w="1"/><text x="40.2782%" y="287.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (1 samples, 0.04%)</title><rect x="40.0634%" y="277" width="0.0352%" height="15" fill="rgb(216,164,2)" fg:x="1137" fg:w="1"/><text x="40.3134%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stacksize_np (1 samples, 0.04%)</title><rect x="40.0987%" y="261" width="0.0352%" height="15" fill="rgb(220,129,5)" fg:x="1138" fg:w="1"/><text x="40.3487%" y="271.50"></text></g><g><title>web-server`std::sys::unix::thread::guard::current (2 samples, 0.07%)</title><rect x="40.0987%" y="277" width="0.0705%" height="15" fill="rgb(242,17,10)" fg:x="1138" fg:w="2"/><text x="40.3487%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (1 samples, 0.04%)</title><rect x="40.1339%" y="261" width="0.0352%" height="15" fill="rgb(242,107,0)" fg:x="1139" fg:w="1"/><text x="40.3839%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (77 samples, 2.71%)</title><rect x="40.1691%" y="261" width="2.7132%" height="15" fill="rgb(251,28,31)" fg:x="1140" fg:w="77"/><text x="40.4191%" y="271.50">li..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="42.8823%" y="261" width="0.0352%" height="15" fill="rgb(233,223,10)" fg:x="1217" fg:w="1"/><text x="43.1323%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.04%)</title><rect x="42.9175%" y="261" width="0.0352%" height="15" fill="rgb(215,21,27)" fg:x="1218" fg:w="1"/><text x="43.1675%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.07%)</title><rect x="42.9528%" y="261" width="0.0705%" height="15" fill="rgb(232,23,21)" fg:x="1219" fg:w="2"/><text x="43.2028%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="43.0585%" y="245" width="0.0352%" height="15" fill="rgb(244,5,23)" fg:x="1222" fg:w="1"/><text x="43.3085%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="43.1642%" y="229" width="0.0352%" height="15" fill="rgb(226,81,46)" fg:x="1225" fg:w="1"/><text x="43.4142%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.28%)</title><rect x="43.0233%" y="261" width="0.2819%" height="15" fill="rgb(247,70,30)" fg:x="1221" fg:w="8"/><text x="43.2733%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.21%)</title><rect x="43.0937%" y="245" width="0.2114%" height="15" fill="rgb(212,68,19)" fg:x="1223" fg:w="6"/><text x="43.3437%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.11%)</title><rect x="43.1994%" y="229" width="0.1057%" height="15" fill="rgb(240,187,13)" fg:x="1226" fg:w="3"/><text x="43.4494%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.04%)</title><rect x="43.3051%" y="261" width="0.0352%" height="15" fill="rgb(223,113,26)" fg:x="1229" fg:w="1"/><text x="43.5551%" y="271.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.04%)</title><rect x="43.3404%" y="261" width="0.0352%" height="15" fill="rgb(206,192,2)" fg:x="1230" fg:w="1"/><text x="43.5904%" y="271.50"></text></g><g><title>web-server`&lt;T as core::any::Any&gt;::type_id (1 samples, 0.04%)</title><rect x="43.3756%" y="261" width="0.0352%" height="15" fill="rgb(241,108,4)" fg:x="1231" fg:w="1"/><text x="43.6256%" y="271.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="43.4109%" y="261" width="0.0352%" height="15" fill="rgb(247,173,49)" fg:x="1232" fg:w="1"/><text x="43.6609%" y="271.50"></text></g><g><title>web-server`__rdl_dealloc (1 samples, 0.04%)</title><rect x="43.4461%" y="261" width="0.0352%" height="15" fill="rgb(224,114,35)" fg:x="1233" fg:w="1"/><text x="43.6961%" y="271.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::binary::transform_recv&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},i64,i64&gt;::{{closure}}&gt; (1 samples, 0.04%)</title><rect x="43.4813%" y="261" width="0.0352%" height="15" fill="rgb(245,159,27)" fg:x="1234" fg:w="1"/><text x="43.7313%" y="271.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (1 samples, 0.04%)</title><rect x="43.4813%" y="245" width="0.0352%" height="15" fill="rgb(245,172,44)" fg:x="1234" fg:w="1"/><text x="43.7313%" y="255.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="43.5166%" y="245" width="0.0352%" height="15" fill="rgb(236,23,11)" fg:x="1235" fg:w="1"/><text x="43.7666%" y="255.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="43.5518%" y="229" width="0.0352%" height="15" fill="rgb(205,117,38)" fg:x="1236" fg:w="1"/><text x="43.8018%" y="239.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::unary::transform_send&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},web_server::request::Request&gt;::{{closure}}&gt; (3 samples, 0.11%)</title><rect x="43.5166%" y="261" width="0.1057%" height="15" fill="rgb(237,72,25)" fg:x="1235" fg:w="3"/><text x="43.7666%" y="271.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (2 samples, 0.07%)</title><rect x="43.5518%" y="245" width="0.0705%" height="15" fill="rgb(244,70,9)" fg:x="1236" fg:w="2"/><text x="43.8018%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (1 samples, 0.04%)</title><rect x="43.5870%" y="229" width="0.0352%" height="15" fill="rgb(217,125,39)" fg:x="1237" fg:w="1"/><text x="43.8370%" y="239.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (1 samples, 0.04%)</title><rect x="43.6223%" y="261" width="0.0352%" height="15" fill="rgb(235,36,10)" fg:x="1238" fg:w="1"/><text x="43.8723%" y="271.50"></text></g><g><title>web-server`hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="43.6575%" y="261" width="0.0352%" height="15" fill="rgb(251,123,47)" fg:x="1239" fg:w="1"/><text x="43.9075%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.07%)</title><rect x="44.3975%" y="197" width="0.0705%" height="15" fill="rgb(221,13,13)" fg:x="1260" fg:w="2"/><text x="44.6475%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.49%)</title><rect x="44.0451%" y="245" width="0.4933%" height="15" fill="rgb(238,131,9)" fg:x="1250" fg:w="14"/><text x="44.2951%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.39%)</title><rect x="44.1508%" y="229" width="0.3876%" height="15" fill="rgb(211,50,8)" fg:x="1253" fg:w="11"/><text x="44.4008%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.32%)</title><rect x="44.2213%" y="213" width="0.3171%" height="15" fill="rgb(245,182,24)" fg:x="1255" fg:w="9"/><text x="44.4713%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.07%)</title><rect x="44.4679%" y="197" width="0.0705%" height="15" fill="rgb(242,14,37)" fg:x="1262" fg:w="2"/><text x="44.7179%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="44.5032%" y="181" width="0.0352%" height="15" fill="rgb(246,228,12)" fg:x="1263" fg:w="1"/><text x="44.7532%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.04%)</title><rect x="44.5384%" y="245" width="0.0352%" height="15" fill="rgb(213,55,15)" fg:x="1264" fg:w="1"/><text x="44.7884%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.11%)</title><rect x="44.5736%" y="245" width="0.1057%" height="15" fill="rgb(209,9,3)" fg:x="1265" fg:w="3"/><text x="44.8236%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.07%)</title><rect x="44.6089%" y="229" width="0.0705%" height="15" fill="rgb(230,59,30)" fg:x="1266" fg:w="2"/><text x="44.8589%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.07%)</title><rect x="44.6089%" y="213" width="0.0705%" height="15" fill="rgb(209,121,21)" fg:x="1266" fg:w="2"/><text x="44.8589%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="44.7146%" y="229" width="0.0352%" height="15" fill="rgb(220,109,13)" fg:x="1269" fg:w="1"/><text x="44.9646%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.21%)</title><rect x="44.6794%" y="245" width="0.2114%" height="15" fill="rgb(232,18,1)" fg:x="1268" fg:w="6"/><text x="44.9294%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.14%)</title><rect x="44.7498%" y="229" width="0.1409%" height="15" fill="rgb(215,41,42)" fg:x="1270" fg:w="4"/><text x="44.9998%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.11%)</title><rect x="44.7851%" y="213" width="0.1057%" height="15" fill="rgb(224,123,36)" fg:x="1271" fg:w="3"/><text x="45.0351%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (1 samples, 0.04%)</title><rect x="44.8908%" y="245" width="0.0352%" height="15" fill="rgb(240,125,3)" fg:x="1274" fg:w="1"/><text x="45.1408%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="44.9260%" y="245" width="0.0352%" height="15" fill="rgb(205,98,50)" fg:x="1275" fg:w="1"/><text x="45.1760%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (1 samples, 0.04%)</title><rect x="44.9612%" y="245" width="0.0352%" height="15" fill="rgb(205,185,37)" fg:x="1276" fg:w="1"/><text x="45.2112%" y="255.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (1 samples, 0.04%)</title><rect x="44.9965%" y="245" width="0.0352%" height="15" fill="rgb(238,207,15)" fg:x="1277" fg:w="1"/><text x="45.2465%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.11%)</title><rect x="45.1022%" y="229" width="0.1057%" height="15" fill="rgb(213,199,42)" fg:x="1280" fg:w="3"/><text x="45.3522%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="45.1374%" y="213" width="0.0705%" height="15" fill="rgb(235,201,11)" fg:x="1281" fg:w="2"/><text x="45.3874%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="45.1374%" y="197" width="0.0705%" height="15" fill="rgb(207,46,11)" fg:x="1281" fg:w="2"/><text x="45.3874%" y="207.50"></text></g><g><title>web-server`hashbrown::map::make_hash (4 samples, 0.14%)</title><rect x="45.2784%" y="213" width="0.1409%" height="15" fill="rgb(241,35,35)" fg:x="1285" fg:w="4"/><text x="45.5284%" y="223.50"></text></g><g><title>web-server`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="45.3841%" y="197" width="0.0352%" height="15" fill="rgb(243,32,47)" fg:x="1288" fg:w="1"/><text x="45.6341%" y="207.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.46%)</title><rect x="45.0317%" y="245" width="0.4581%" height="15" fill="rgb(247,202,23)" fg:x="1278" fg:w="13"/><text x="45.2817%" y="255.50"></text></g><g><title>web-server`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.28%)</title><rect x="45.2079%" y="229" width="0.2819%" height="15" fill="rgb(219,102,11)" fg:x="1283" fg:w="8"/><text x="45.4579%" y="239.50"></text></g><g><title>web-server`rusty_junctions::bag::Bag&lt;K,V&gt;::count_items (2 samples, 0.07%)</title><rect x="45.4193%" y="213" width="0.0705%" height="15" fill="rgb(243,110,44)" fg:x="1289" fg:w="2"/><text x="45.6693%" y="223.50"></text></g><g><title>web-server`&lt;std::sys::unix::thread::Thread as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="45.4898%" y="245" width="0.0352%" height="15" fill="rgb(222,74,54)" fg:x="1291" fg:w="1"/><text x="45.7398%" y="255.50"></text></g><g><title>web-server`DYLD-STUB$$pthread_detach (1 samples, 0.04%)</title><rect x="45.5250%" y="245" width="0.0352%" height="15" fill="rgb(216,99,12)" fg:x="1292" fg:w="1"/><text x="45.7750%" y="255.50"></text></g><g><title>web-server`hashbrown::map::make_hash (3 samples, 0.11%)</title><rect x="45.5603%" y="245" width="0.1057%" height="15" fill="rgb(226,22,26)" fg:x="1293" fg:w="3"/><text x="45.8103%" y="255.50"></text></g><g><title>web-server`hashbrown::map::make_insert_hash (3 samples, 0.11%)</title><rect x="45.6660%" y="245" width="0.1057%" height="15" fill="rgb(217,163,10)" fg:x="1296" fg:w="3"/><text x="45.9160%" y="255.50"></text></g><g><title>web-server`rusty_junctions::bag::Bag&lt;K,V&gt;::add (11 samples, 0.39%)</title><rect x="45.7717%" y="245" width="0.3876%" height="15" fill="rgb(213,25,53)" fg:x="1299" fg:w="11"/><text x="46.0217%" y="255.50"></text></g><g><title>web-server`hashbrown::map::make_hash (7 samples, 0.25%)</title><rect x="45.9126%" y="229" width="0.2467%" height="15" fill="rgb(252,105,26)" fg:x="1303" fg:w="7"/><text x="46.1626%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (3 samples, 0.11%)</title><rect x="46.1593%" y="229" width="0.1057%" height="15" fill="rgb(220,39,43)" fg:x="1310" fg:w="3"/><text x="46.4093%" y="239.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::binary::FnBoxClone&gt;::clone_box (2 samples, 0.07%)</title><rect x="46.2650%" y="229" width="0.0705%" height="15" fill="rgb(229,68,48)" fg:x="1313" fg:w="2"/><text x="46.5150%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="46.3002%" y="213" width="0.0352%" height="15" fill="rgb(252,8,32)" fg:x="1314" fg:w="1"/><text x="46.5502%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="46.3002%" y="197" width="0.0352%" height="15" fill="rgb(223,20,43)" fg:x="1314" fg:w="1"/><text x="46.5502%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="46.3002%" y="181" width="0.0352%" height="15" fill="rgb(229,81,49)" fg:x="1314" fg:w="1"/><text x="46.5502%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="46.3002%" y="165" width="0.0352%" height="15" fill="rgb(236,28,36)" fg:x="1314" fg:w="1"/><text x="46.5502%" y="175.50"></text></g><g><title>web-server`std::thread::Builder::new (1 samples, 0.04%)</title><rect x="46.3354%" y="229" width="0.0352%" height="15" fill="rgb(249,185,26)" fg:x="1315" fg:w="1"/><text x="46.5854%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="46.4059%" y="165" width="0.0352%" height="15" fill="rgb(249,174,33)" fg:x="1317" fg:w="1"/><text x="46.6559%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.14%)</title><rect x="46.3707%" y="213" width="0.1409%" height="15" fill="rgb(233,201,37)" fg:x="1316" fg:w="4"/><text x="46.6207%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.14%)</title><rect x="46.3707%" y="197" width="0.1409%" height="15" fill="rgb(221,78,26)" fg:x="1316" fg:w="4"/><text x="46.6207%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.14%)</title><rect x="46.3707%" y="181" width="0.1409%" height="15" fill="rgb(250,127,30)" fg:x="1316" fg:w="4"/><text x="46.6207%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.07%)</title><rect x="46.4412%" y="165" width="0.0705%" height="15" fill="rgb(230,49,44)" fg:x="1318" fg:w="2"/><text x="46.6912%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="46.5116%" y="213" width="0.0352%" height="15" fill="rgb(229,67,23)" fg:x="1320" fg:w="1"/><text x="46.7616%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_destroy (1 samples, 0.04%)</title><rect x="46.5469%" y="213" width="0.0352%" height="15" fill="rgb(249,83,47)" fg:x="1321" fg:w="1"/><text x="46.7969%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (84 samples, 2.96%)</title><rect x="46.6173%" y="197" width="2.9598%" height="15" fill="rgb(215,43,3)" fg:x="1323" fg:w="84"/><text x="46.8673%" y="207.50">lib..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="49.5772%" y="197" width="0.0352%" height="15" fill="rgb(238,154,13)" fg:x="1407" fg:w="1"/><text x="49.8272%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="49.5772%" y="181" width="0.0352%" height="15" fill="rgb(219,56,2)" fg:x="1407" fg:w="1"/><text x="49.8272%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="49.5772%" y="165" width="0.0352%" height="15" fill="rgb(233,0,4)" fg:x="1407" fg:w="1"/><text x="49.8272%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="49.5772%" y="149" width="0.0352%" height="15" fill="rgb(235,30,7)" fg:x="1407" fg:w="1"/><text x="49.8272%" y="159.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_no_tsd (1 samples, 0.04%)</title><rect x="49.6124%" y="197" width="0.0352%" height="15" fill="rgb(250,79,13)" fg:x="1408" fg:w="1"/><text x="49.8624%" y="207.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock_no_tsd (1 samples, 0.04%)</title><rect x="49.6476%" y="197" width="0.0352%" height="15" fill="rgb(211,146,34)" fg:x="1409" fg:w="1"/><text x="49.8976%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="51.3037%" y="181" width="0.0352%" height="15" fill="rgb(228,22,38)" fg:x="1456" fg:w="1"/><text x="51.5537%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (39 samples, 1.37%)</title><rect x="51.3390%" y="181" width="1.3742%" height="15" fill="rgb(235,168,5)" fg:x="1457" fg:w="39"/><text x="51.5890%" y="191.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (199 samples, 7.01%)</title><rect x="46.5821%" y="213" width="7.0120%" height="15" fill="rgb(221,155,16)" fg:x="1322" fg:w="199"/><text x="46.8321%" y="223.50">web-serve..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (111 samples, 3.91%)</title><rect x="49.6829%" y="197" width="3.9112%" height="15" fill="rgb(215,215,53)" fg:x="1410" fg:w="111"/><text x="49.9329%" y="207.50">libs..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (25 samples, 0.88%)</title><rect x="52.7132%" y="181" width="0.8809%" height="15" fill="rgb(223,4,10)" fg:x="1496" fg:w="25"/><text x="52.9632%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.11%)</title><rect x="53.5941%" y="197" width="0.1057%" height="15" fill="rgb(234,103,6)" fg:x="1521" fg:w="3"/><text x="53.8441%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="53.6293%" y="181" width="0.0705%" height="15" fill="rgb(227,97,0)" fg:x="1522" fg:w="2"/><text x="53.8793%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="53.6293%" y="165" width="0.0705%" height="15" fill="rgb(234,150,53)" fg:x="1522" fg:w="2"/><text x="53.8793%" y="175.50"></text></g><g><title>web-server`rusty_junctions::patterns::binary::SendJoinPattern::fire (215 samples, 7.58%)</title><rect x="46.1593%" y="245" width="7.5758%" height="15" fill="rgb(228,201,54)" fg:x="1310" fg:w="215"/><text x="46.4093%" y="255.50">web-server..</text></g><g><title>web-server`std::thread::spawn (209 samples, 7.36%)</title><rect x="46.3707%" y="229" width="7.3643%" height="15" fill="rgb(222,22,37)" fg:x="1316" fg:w="209"/><text x="46.6207%" y="239.50">web-server..</text></g><g><title>web-server`std::thread::Thread::new (4 samples, 0.14%)</title><rect x="53.5941%" y="213" width="0.1409%" height="15" fill="rgb(237,53,32)" fg:x="1521" fg:w="4"/><text x="53.8441%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (1 samples, 0.04%)</title><rect x="53.6998%" y="197" width="0.0352%" height="15" fill="rgb(233,25,53)" fg:x="1524" fg:w="1"/><text x="53.9498%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (3 samples, 0.11%)</title><rect x="53.8407%" y="229" width="0.1057%" height="15" fill="rgb(210,40,34)" fg:x="1528" fg:w="3"/><text x="54.0907%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="53.9817%" y="213" width="0.0352%" height="15" fill="rgb(241,220,44)" fg:x="1532" fg:w="1"/><text x="54.2317%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="53.9817%" y="197" width="0.0352%" height="15" fill="rgb(235,28,35)" fg:x="1532" fg:w="1"/><text x="54.2317%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="53.9817%" y="181" width="0.0352%" height="15" fill="rgb(210,56,17)" fg:x="1532" fg:w="1"/><text x="54.2317%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="53.9817%" y="165" width="0.0352%" height="15" fill="rgb(224,130,29)" fg:x="1532" fg:w="1"/><text x="54.2317%" y="175.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (6 samples, 0.21%)</title><rect x="53.9464%" y="229" width="0.2114%" height="15" fill="rgb(235,212,8)" fg:x="1531" fg:w="6"/><text x="54.1964%" y="239.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.14%)</title><rect x="54.0169%" y="213" width="0.1409%" height="15" fill="rgb(223,33,50)" fg:x="1533" fg:w="4"/><text x="54.2669%" y="223.50"></text></g><g><title>web-server`std::thread::Builder::new (1 samples, 0.04%)</title><rect x="54.1579%" y="229" width="0.0352%" height="15" fill="rgb(219,149,13)" fg:x="1537" fg:w="1"/><text x="54.4079%" y="239.50"></text></g><g><title>web-server`std::thread::Thread::new (1 samples, 0.04%)</title><rect x="54.1931%" y="229" width="0.0352%" height="15" fill="rgb(250,156,29)" fg:x="1538" fg:w="1"/><text x="54.4431%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.28%)</title><rect x="54.3693%" y="213" width="0.2819%" height="15" fill="rgb(216,193,19)" fg:x="1543" fg:w="8"/><text x="54.6193%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.18%)</title><rect x="54.4750%" y="197" width="0.1762%" height="15" fill="rgb(216,135,14)" fg:x="1546" fg:w="5"/><text x="54.7250%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.18%)</title><rect x="54.4750%" y="181" width="0.1762%" height="15" fill="rgb(241,47,5)" fg:x="1546" fg:w="5"/><text x="54.7250%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="54.6159%" y="165" width="0.0352%" height="15" fill="rgb(233,42,35)" fg:x="1550" fg:w="1"/><text x="54.8659%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_destroy (1 samples, 0.04%)</title><rect x="54.6512%" y="213" width="0.0352%" height="15" fill="rgb(231,13,6)" fg:x="1551" fg:w="1"/><text x="54.9012%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="54.6864%" y="213" width="0.0352%" height="15" fill="rgb(207,181,40)" fg:x="1552" fg:w="1"/><text x="54.9364%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (117 samples, 4.12%)</title><rect x="54.7216%" y="197" width="4.1226%" height="15" fill="rgb(254,173,49)" fg:x="1553" fg:w="117"/><text x="54.9716%" y="207.50">libs..</text></g><g><title>libsystem_kernel.dylib`mach_vm_map (1 samples, 0.04%)</title><rect x="58.8443%" y="197" width="0.0352%" height="15" fill="rgb(221,1,38)" fg:x="1670" fg:w="1"/><text x="59.0943%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.11%)</title><rect x="58.8795%" y="197" width="0.1057%" height="15" fill="rgb(206,124,46)" fg:x="1671" fg:w="3"/><text x="59.1295%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.11%)</title><rect x="58.8795%" y="181" width="0.1057%" height="15" fill="rgb(249,21,11)" fg:x="1671" fg:w="3"/><text x="59.1295%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.11%)</title><rect x="58.8795%" y="165" width="0.1057%" height="15" fill="rgb(222,201,40)" fg:x="1671" fg:w="3"/><text x="59.1295%" y="175.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock_no_tsd (1 samples, 0.04%)</title><rect x="58.9852%" y="197" width="0.0352%" height="15" fill="rgb(235,61,29)" fg:x="1674" fg:w="1"/><text x="59.2352%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (63 samples, 2.22%)</title><rect x="62.2974%" y="181" width="2.2199%" height="15" fill="rgb(219,207,3)" fg:x="1768" fg:w="63"/><text x="62.5474%" y="191.50">l..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (48 samples, 1.69%)</title><rect x="64.5173%" y="181" width="1.6913%" height="15" fill="rgb(222,56,46)" fg:x="1831" fg:w="48"/><text x="64.7673%" y="191.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (327 samples, 11.52%)</title><rect x="54.7216%" y="213" width="11.5222%" height="15" fill="rgb(239,76,54)" fg:x="1553" fg:w="327"/><text x="54.9716%" y="223.50">web-server`std::s..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (205 samples, 7.22%)</title><rect x="59.0204%" y="197" width="7.2234%" height="15" fill="rgb(231,124,27)" fg:x="1675" fg:w="205"/><text x="59.2704%" y="207.50">libsystem_..</text></g><g><title>libsystem_kernel.dylib`mach_vm_protect (1 samples, 0.04%)</title><rect x="66.2086%" y="181" width="0.0352%" height="15" fill="rgb(249,195,6)" fg:x="1879" fg:w="1"/><text x="66.4586%" y="191.50"></text></g><g><title>web-server`std::sys_common::thread::min_stack (3 samples, 0.11%)</title><rect x="66.2438%" y="213" width="0.1057%" height="15" fill="rgb(237,174,47)" fg:x="1880" fg:w="3"/><text x="66.4938%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="66.4553%" y="149" width="0.0352%" height="15" fill="rgb(206,201,31)" fg:x="1886" fg:w="1"/><text x="66.7053%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.18%)</title><rect x="66.3495%" y="197" width="0.1762%" height="15" fill="rgb(231,57,52)" fg:x="1883" fg:w="5"/><text x="66.5995%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.18%)</title><rect x="66.3495%" y="181" width="0.1762%" height="15" fill="rgb(248,177,22)" fg:x="1883" fg:w="5"/><text x="66.5995%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.18%)</title><rect x="66.3495%" y="165" width="0.1762%" height="15" fill="rgb(215,211,37)" fg:x="1883" fg:w="5"/><text x="66.5995%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="66.4905%" y="149" width="0.0352%" height="15" fill="rgb(241,128,51)" fg:x="1887" fg:w="1"/><text x="66.7405%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (2 samples, 0.07%)</title><rect x="66.5257%" y="197" width="0.0705%" height="15" fill="rgb(227,165,31)" fg:x="1888" fg:w="2"/><text x="66.7757%" y="207.50"></text></g><g><title>web-server`rusty_junctions::patterns::unary::SendJoinPattern::fire (366 samples, 12.90%)</title><rect x="53.7350%" y="245" width="12.8964%" height="15" fill="rgb(228,167,24)" fg:x="1525" fg:w="366"/><text x="53.9850%" y="255.50">web-server`rusty_ju..</text></g><g><title>web-server`std::thread::spawn (352 samples, 12.40%)</title><rect x="54.2283%" y="229" width="12.4031%" height="15" fill="rgb(228,143,12)" fg:x="1539" fg:w="352"/><text x="54.4783%" y="239.50">web-server`std::thr..</text></g><g><title>web-server`std::thread::Thread::new (8 samples, 0.28%)</title><rect x="66.3495%" y="213" width="0.2819%" height="15" fill="rgb(249,149,8)" fg:x="1883" fg:w="8"/><text x="66.5995%" y="223.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (1 samples, 0.04%)</title><rect x="66.5962%" y="197" width="0.0352%" height="15" fill="rgb(243,35,44)" fg:x="1890" fg:w="1"/><text x="66.8462%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="66.5962%" y="181" width="0.0352%" height="15" fill="rgb(246,89,9)" fg:x="1890" fg:w="1"/><text x="66.8462%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="66.5962%" y="165" width="0.0352%" height="15" fill="rgb(233,213,13)" fg:x="1890" fg:w="1"/><text x="66.8462%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="66.5962%" y="149" width="0.0352%" height="15" fill="rgb(233,141,41)" fg:x="1890" fg:w="1"/><text x="66.8462%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="66.5962%" y="133" width="0.0352%" height="15" fill="rgb(239,167,4)" fg:x="1890" fg:w="1"/><text x="66.8462%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="66.5962%" y="117" width="0.0352%" height="15" fill="rgb(209,217,16)" fg:x="1890" fg:w="1"/><text x="66.8462%" y="127.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::tokens (3 samples, 0.11%)</title><rect x="66.6314%" y="229" width="0.1057%" height="15" fill="rgb(219,88,35)" fg:x="1891" fg:w="3"/><text x="66.8814%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="66.7724%" y="213" width="0.0352%" height="15" fill="rgb(220,193,23)" fg:x="1895" fg:w="1"/><text x="67.0224%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.07%)</title><rect x="66.8076%" y="181" width="0.0705%" height="15" fill="rgb(230,90,52)" fg:x="1896" fg:w="2"/><text x="67.0576%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.07%)</title><rect x="66.8076%" y="165" width="0.0705%" height="15" fill="rgb(252,106,19)" fg:x="1896" fg:w="2"/><text x="67.0576%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.11%)</title><rect x="66.8076%" y="197" width="0.1057%" height="15" fill="rgb(206,74,20)" fg:x="1896" fg:w="3"/><text x="67.0576%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="66.8781%" y="181" width="0.0352%" height="15" fill="rgb(230,138,44)" fg:x="1898" fg:w="1"/><text x="67.1281%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="66.9133%" y="197" width="0.0352%" height="15" fill="rgb(235,182,43)" fg:x="1899" fg:w="1"/><text x="67.1633%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (34 samples, 1.20%)</title><rect x="66.9486%" y="181" width="1.1980%" height="15" fill="rgb(242,16,51)" fg:x="1900" fg:w="34"/><text x="67.1986%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (3 samples, 0.11%)</title><rect x="68.1466%" y="181" width="0.1057%" height="15" fill="rgb(248,9,4)" fg:x="1934" fg:w="3"/><text x="68.3966%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (1 samples, 0.04%)</title><rect x="68.2171%" y="165" width="0.0352%" height="15" fill="rgb(210,31,22)" fg:x="1936" fg:w="1"/><text x="68.4671%" y="175.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::WaitToken::wait (42 samples, 1.48%)</title><rect x="66.8076%" y="213" width="1.4799%" height="15" fill="rgb(239,54,39)" fg:x="1896" fg:w="42"/><text x="67.0576%" y="223.50"></text></g><g><title>web-server`std::thread::park (38 samples, 1.34%)</title><rect x="66.9486%" y="197" width="1.3390%" height="15" fill="rgb(230,99,41)" fg:x="1900" fg:w="38"/><text x="67.1986%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="68.2523%" y="181" width="0.0352%" height="15" fill="rgb(253,106,12)" fg:x="1937" fg:w="1"/><text x="68.5023%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.04%)</title><rect x="68.2875%" y="197" width="0.0352%" height="15" fill="rgb(213,46,41)" fg:x="1938" fg:w="1"/><text x="68.5375%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="68.3228%" y="197" width="0.0352%" height="15" fill="rgb(215,133,35)" fg:x="1939" fg:w="1"/><text x="68.5728%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="68.3228%" y="181" width="0.0352%" height="15" fill="rgb(213,28,5)" fg:x="1939" fg:w="1"/><text x="68.5728%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="68.3228%" y="165" width="0.0352%" height="15" fill="rgb(215,77,49)" fg:x="1939" fg:w="1"/><text x="68.5728%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="68.3228%" y="149" width="0.0352%" height="15" fill="rgb(248,100,22)" fg:x="1939" fg:w="1"/><text x="68.5728%" y="159.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::tokens (3 samples, 0.11%)</title><rect x="68.2875%" y="213" width="0.1057%" height="15" fill="rgb(208,67,9)" fg:x="1938" fg:w="3"/><text x="68.5375%" y="223.50"></text></g><g><title>web-server`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="68.3580%" y="197" width="0.0352%" height="15" fill="rgb(219,133,21)" fg:x="1940" fg:w="1"/><text x="68.6080%" y="207.50"></text></g><g><title>web-server`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (2 samples, 0.07%)</title><rect x="68.3932%" y="213" width="0.0705%" height="15" fill="rgb(246,46,29)" fg:x="1941" fg:w="2"/><text x="68.6432%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$os_unfair_lock_lock_with_options (1 samples, 0.04%)</title><rect x="68.6751%" y="181" width="0.0352%" height="15" fill="rgb(246,185,52)" fg:x="1949" fg:w="1"/><text x="68.9251%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.11%)</title><rect x="68.7104%" y="181" width="0.1057%" height="15" fill="rgb(252,136,11)" fg:x="1950" fg:w="3"/><text x="68.9604%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.07%)</title><rect x="68.7456%" y="165" width="0.0705%" height="15" fill="rgb(219,138,53)" fg:x="1951" fg:w="2"/><text x="68.9956%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.07%)</title><rect x="68.7456%" y="149" width="0.0705%" height="15" fill="rgb(211,51,23)" fg:x="1951" fg:w="2"/><text x="68.9956%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="68.9218%" y="165" width="0.0352%" height="15" fill="rgb(247,221,28)" fg:x="1956" fg:w="1"/><text x="69.1718%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.07%)</title><rect x="69.0980%" y="149" width="0.0705%" height="15" fill="rgb(251,222,45)" fg:x="1961" fg:w="2"/><text x="69.3480%" y="159.50"></text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (74 samples, 2.61%)</title><rect x="66.6314%" y="245" width="2.6075%" height="15" fill="rgb(217,162,53)" fg:x="1891" fg:w="74"/><text x="66.8814%" y="255.50">we..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (71 samples, 2.50%)</title><rect x="66.7371%" y="229" width="2.5018%" height="15" fill="rgb(229,93,14)" fg:x="1894" fg:w="71"/><text x="66.9871%" y="239.50">we..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (22 samples, 0.78%)</title><rect x="68.4637%" y="213" width="0.7752%" height="15" fill="rgb(209,67,49)" fg:x="1943" fg:w="22"/><text x="68.7137%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (20 samples, 0.70%)</title><rect x="68.5342%" y="197" width="0.7047%" height="15" fill="rgb(213,87,29)" fg:x="1945" fg:w="20"/><text x="68.7842%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.42%)</title><rect x="68.8161%" y="181" width="0.4228%" height="15" fill="rgb(205,151,52)" fg:x="1953" fg:w="12"/><text x="69.0661%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.28%)</title><rect x="68.9570%" y="165" width="0.2819%" height="15" fill="rgb(253,215,39)" fg:x="1957" fg:w="8"/><text x="69.2070%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.07%)</title><rect x="69.1684%" y="149" width="0.0705%" height="15" fill="rgb(221,220,41)" fg:x="1963" fg:w="2"/><text x="69.4184%" y="159.50"></text></g><g><title>web-server`rusty_junctions::controller::Controller::handle_packets (726 samples, 25.58%)</title><rect x="43.6927%" y="261" width="25.5814%" height="15" fill="rgb(218,133,21)" fg:x="1240" fg:w="726"/><text x="43.9427%" y="271.50">web-server`rusty_junctions::controller::C..</text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (1 samples, 0.04%)</title><rect x="69.2389%" y="245" width="0.0352%" height="15" fill="rgb(221,193,43)" fg:x="1965" fg:w="1"/><text x="69.4889%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::oneshot::Packet&lt;T&gt;::send (1 samples, 0.04%)</title><rect x="69.2389%" y="229" width="0.0352%" height="15" fill="rgb(240,128,52)" fg:x="1965" fg:w="1"/><text x="69.4889%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (1 samples, 0.04%)</title><rect x="69.2389%" y="213" width="0.0352%" height="15" fill="rgb(253,114,12)" fg:x="1965" fg:w="1"/><text x="69.4889%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.04%)</title><rect x="69.2389%" y="197" width="0.0352%" height="15" fill="rgb(215,223,47)" fg:x="1965" fg:w="1"/><text x="69.4889%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.14%)</title><rect x="69.3798%" y="245" width="0.1409%" height="15" fill="rgb(248,225,23)" fg:x="1969" fg:w="4"/><text x="69.6298%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.14%)</title><rect x="69.3798%" y="229" width="0.1409%" height="15" fill="rgb(250,108,0)" fg:x="1969" fg:w="4"/><text x="69.6298%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.14%)</title><rect x="69.3798%" y="213" width="0.1409%" height="15" fill="rgb(228,208,7)" fg:x="1969" fg:w="4"/><text x="69.6298%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.11%)</title><rect x="69.4151%" y="197" width="0.1057%" height="15" fill="rgb(244,45,10)" fg:x="1970" fg:w="3"/><text x="69.6651%" y="207.50"></text></g><g><title>web-server`DYLD-STUB$$malloc (1 samples, 0.04%)</title><rect x="69.5208%" y="229" width="0.0352%" height="15" fill="rgb(207,125,25)" fg:x="1973" fg:w="1"/><text x="69.7708%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.11%)</title><rect x="69.6265%" y="213" width="0.1057%" height="15" fill="rgb(210,195,18)" fg:x="1976" fg:w="3"/><text x="69.8765%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.11%)</title><rect x="69.6265%" y="197" width="0.1057%" height="15" fill="rgb(249,80,12)" fg:x="1976" fg:w="3"/><text x="69.8765%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.11%)</title><rect x="69.6265%" y="181" width="0.1057%" height="15" fill="rgb(221,65,9)" fg:x="1976" fg:w="3"/><text x="69.8765%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="69.6970%" y="165" width="0.0352%" height="15" fill="rgb(235,49,36)" fg:x="1978" fg:w="1"/><text x="69.9470%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.04%)</title><rect x="69.7322%" y="213" width="0.0352%" height="15" fill="rgb(225,32,20)" fg:x="1979" fg:w="1"/><text x="69.9822%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (11 samples, 0.39%)</title><rect x="69.7674%" y="197" width="0.3876%" height="15" fill="rgb(215,141,46)" fg:x="1980" fg:w="11"/><text x="70.0174%" y="207.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (19 samples, 0.67%)</title><rect x="69.5208%" y="245" width="0.6695%" height="15" fill="rgb(250,160,47)" fg:x="1973" fg:w="19"/><text x="69.7708%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (18 samples, 0.63%)</title><rect x="69.5560%" y="229" width="0.6342%" height="15" fill="rgb(216,222,40)" fg:x="1974" fg:w="18"/><text x="69.8060%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (12 samples, 0.42%)</title><rect x="69.7674%" y="213" width="0.4228%" height="15" fill="rgb(234,217,39)" fg:x="1980" fg:w="12"/><text x="70.0174%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$__psynch_cvsignal (1 samples, 0.04%)</title><rect x="70.1550%" y="197" width="0.0352%" height="15" fill="rgb(207,178,40)" fg:x="1991" fg:w="1"/><text x="70.4050%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (2 samples, 0.07%)</title><rect x="70.2255%" y="213" width="0.0705%" height="15" fill="rgb(221,136,13)" fg:x="1993" fg:w="2"/><text x="70.4755%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (36 samples, 1.27%)</title><rect x="70.2960%" y="197" width="1.2685%" height="15" fill="rgb(249,199,10)" fg:x="1995" fg:w="36"/><text x="70.5460%" y="207.50"></text></g><g><title>libsystem_c.dylib`nanosleep (50 samples, 1.76%)</title><rect x="70.2255%" y="229" width="1.7618%" height="15" fill="rgb(249,222,13)" fg:x="1993" fg:w="50"/><text x="70.4755%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (48 samples, 1.69%)</title><rect x="70.2960%" y="213" width="1.6913%" height="15" fill="rgb(244,185,38)" fg:x="1995" fg:w="48"/><text x="70.5460%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_reply_port (12 samples, 0.42%)</title><rect x="71.5645%" y="197" width="0.4228%" height="15" fill="rgb(236,202,9)" fg:x="2031" fg:w="12"/><text x="71.8145%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (50 samples, 1.76%)</title><rect x="71.9873%" y="229" width="1.7618%" height="15" fill="rgb(250,229,37)" fg:x="2043" fg:w="50"/><text x="72.2373%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`cerror (1 samples, 0.04%)</title><rect x="73.7491%" y="229" width="0.0352%" height="15" fill="rgb(206,174,23)" fg:x="2093" fg:w="1"/><text x="73.9991%" y="239.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::binary::transform_send::_{{closure}} (129 samples, 4.55%)</title><rect x="69.2741%" y="261" width="4.5455%" height="15" fill="rgb(211,33,43)" fg:x="1966" fg:w="129"/><text x="69.5241%" y="271.50">web-s..</text></g><g><title>web-server`std::thread::sleep (103 samples, 3.63%)</title><rect x="70.1903%" y="245" width="3.6293%" height="15" fill="rgb(245,58,50)" fg:x="1992" fg:w="103"/><text x="70.4403%" y="255.50">web-..</text></g><g><title>libsystem_kernel.dylib`clock_get_time (1 samples, 0.04%)</title><rect x="73.7844%" y="229" width="0.0352%" height="15" fill="rgb(244,68,36)" fg:x="2094" fg:w="1"/><text x="74.0344%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (7 samples, 0.25%)</title><rect x="73.9253%" y="245" width="0.2467%" height="15" fill="rgb(232,229,15)" fg:x="2098" fg:w="7"/><text x="74.1753%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.11%)</title><rect x="74.1720%" y="245" width="0.1057%" height="15" fill="rgb(254,30,23)" fg:x="2105" fg:w="3"/><text x="74.4220%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.11%)</title><rect x="74.1720%" y="229" width="0.1057%" height="15" fill="rgb(235,160,14)" fg:x="2105" fg:w="3"/><text x="74.4220%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.11%)</title><rect x="74.1720%" y="213" width="0.1057%" height="15" fill="rgb(212,155,44)" fg:x="2105" fg:w="3"/><text x="74.4220%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="74.2424%" y="197" width="0.0352%" height="15" fill="rgb(226,2,50)" fg:x="2107" fg:w="1"/><text x="74.4924%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.14%)</title><rect x="74.2777%" y="245" width="0.1409%" height="15" fill="rgb(234,177,6)" fg:x="2108" fg:w="4"/><text x="74.5277%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="74.4186%" y="229" width="0.0352%" height="15" fill="rgb(217,24,9)" fg:x="2112" fg:w="1"/><text x="74.6686%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="74.4538%" y="229" width="0.0352%" height="15" fill="rgb(220,13,46)" fg:x="2113" fg:w="1"/><text x="74.7038%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.07%)</title><rect x="74.5243%" y="213" width="0.0705%" height="15" fill="rgb(239,221,27)" fg:x="2115" fg:w="2"/><text x="74.7743%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.21%)</title><rect x="74.4186%" y="245" width="0.2114%" height="15" fill="rgb(222,198,25)" fg:x="2112" fg:w="6"/><text x="74.6686%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.14%)</title><rect x="74.4891%" y="229" width="0.1409%" height="15" fill="rgb(211,99,13)" fg:x="2114" fg:w="4"/><text x="74.7391%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="74.5948%" y="213" width="0.0352%" height="15" fill="rgb(232,111,31)" fg:x="2117" fg:w="1"/><text x="74.8448%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="74.6300%" y="245" width="0.0352%" height="15" fill="rgb(245,82,37)" fg:x="2118" fg:w="1"/><text x="74.8800%" y="255.50"></text></g><g><title>web-server`DYLD-STUB$$close$NOCANCEL (1 samples, 0.04%)</title><rect x="74.6653%" y="245" width="0.0352%" height="15" fill="rgb(227,149,46)" fg:x="2119" fg:w="1"/><text x="74.9153%" y="255.50"></text></g><g><title>web-server`DYLD-STUB$$free (1 samples, 0.04%)</title><rect x="74.7005%" y="245" width="0.0352%" height="15" fill="rgb(218,36,50)" fg:x="2120" fg:w="1"/><text x="74.9505%" y="255.50"></text></g><g><title>web-server`__rdl_dealloc (1 samples, 0.04%)</title><rect x="74.7357%" y="245" width="0.0352%" height="15" fill="rgb(226,80,48)" fg:x="2121" fg:w="1"/><text x="74.9857%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="74.7710%" y="229" width="0.0352%" height="15" fill="rgb(238,224,15)" fg:x="2122" fg:w="1"/><text x="75.0210%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (16 samples, 0.56%)</title><rect x="74.8062%" y="213" width="0.5638%" height="15" fill="rgb(241,136,10)" fg:x="2123" fg:w="16"/><text x="75.0562%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (16 samples, 0.56%)</title><rect x="74.8062%" y="197" width="0.5638%" height="15" fill="rgb(208,32,45)" fg:x="2123" fg:w="16"/><text x="75.0562%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (13 samples, 0.46%)</title><rect x="75.3700%" y="213" width="0.4581%" height="15" fill="rgb(207,135,9)" fg:x="2139" fg:w="13"/><text x="75.6200%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (13 samples, 0.46%)</title><rect x="75.3700%" y="197" width="0.4581%" height="15" fill="rgb(206,86,44)" fg:x="2139" fg:w="13"/><text x="75.6200%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_wake (1 samples, 0.04%)</title><rect x="75.8280%" y="213" width="0.0352%" height="15" fill="rgb(245,177,15)" fg:x="2152" fg:w="1"/><text x="76.0780%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="75.8633%" y="213" width="0.0352%" height="15" fill="rgb(206,64,50)" fg:x="2153" fg:w="1"/><text x="76.1133%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`write (33 samples, 1.16%)</title><rect x="76.0042%" y="165" width="1.1628%" height="15" fill="rgb(234,36,40)" fg:x="2157" fg:w="33"/><text x="76.2542%" y="175.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (36 samples, 1.27%)</title><rect x="75.9338%" y="181" width="1.2685%" height="15" fill="rgb(213,64,8)" fg:x="2155" fg:w="36"/><text x="76.1838%" y="191.50"></text></g><g><title>web-server`DYLD-STUB$$write (1 samples, 0.04%)</title><rect x="77.1670%" y="165" width="0.0352%" height="15" fill="rgb(210,75,36)" fg:x="2190" fg:w="1"/><text x="77.4170%" y="175.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (37 samples, 1.30%)</title><rect x="75.9338%" y="197" width="1.3037%" height="15" fill="rgb(229,88,21)" fg:x="2155" fg:w="37"/><text x="76.1838%" y="207.50"></text></g><g><title>web-server`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.04%)</title><rect x="77.2023%" y="181" width="0.0352%" height="15" fill="rgb(252,204,47)" fg:x="2191" fg:w="1"/><text x="77.4523%" y="191.50"></text></g><g><title>web-server`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="77.2375%" y="181" width="0.0352%" height="15" fill="rgb(208,77,27)" fg:x="2192" fg:w="1"/><text x="77.4875%" y="191.50"></text></g><g><title>web-server`core::fmt::Formatter::debug_struct (2 samples, 0.07%)</title><rect x="77.2727%" y="181" width="0.0705%" height="15" fill="rgb(221,76,26)" fg:x="2193" fg:w="2"/><text x="77.5227%" y="191.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.07%)</title><rect x="77.2727%" y="165" width="0.0705%" height="15" fill="rgb(225,139,18)" fg:x="2193" fg:w="2"/><text x="77.5227%" y="175.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.07%)</title><rect x="77.2727%" y="149" width="0.0705%" height="15" fill="rgb(230,137,11)" fg:x="2193" fg:w="2"/><text x="77.5227%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="77.3080%" y="133" width="0.0352%" height="15" fill="rgb(212,28,1)" fg:x="2194" fg:w="1"/><text x="77.5580%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__getpeername (10 samples, 0.35%)</title><rect x="77.3432%" y="165" width="0.3524%" height="15" fill="rgb(248,164,17)" fg:x="2195" fg:w="10"/><text x="77.5932%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__getsockname (34 samples, 1.20%)</title><rect x="77.6956%" y="165" width="1.1980%" height="15" fill="rgb(222,171,42)" fg:x="2205" fg:w="34"/><text x="77.9456%" y="175.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.07%)</title><rect x="78.8936%" y="165" width="0.0705%" height="15" fill="rgb(243,84,45)" fg:x="2239" fg:w="2"/><text x="79.1436%" y="175.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2 samples, 0.07%)</title><rect x="78.8936%" y="149" width="0.0705%" height="15" fill="rgb(252,49,23)" fg:x="2239" fg:w="2"/><text x="79.1436%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="78.9288%" y="133" width="0.0352%" height="15" fill="rgb(215,19,7)" fg:x="2240" fg:w="1"/><text x="79.1788%" y="143.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddr as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="79.1402%" y="149" width="0.0352%" height="15" fill="rgb(238,81,41)" fg:x="2246" fg:w="1"/><text x="79.3902%" y="159.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.14%)</title><rect x="79.1755%" y="133" width="0.1409%" height="15" fill="rgb(210,199,37)" fg:x="2247" fg:w="4"/><text x="79.4255%" y="143.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (4 samples, 0.14%)</title><rect x="79.1755%" y="117" width="0.1409%" height="15" fill="rgb(244,192,49)" fg:x="2247" fg:w="4"/><text x="79.4255%" y="127.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (4 samples, 0.14%)</title><rect x="79.1755%" y="101" width="0.1409%" height="15" fill="rgb(226,211,11)" fg:x="2247" fg:w="4"/><text x="79.4255%" y="111.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (1 samples, 0.04%)</title><rect x="79.3517%" y="101" width="0.0352%" height="15" fill="rgb(236,162,54)" fg:x="2252" fg:w="1"/><text x="79.6017%" y="111.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddrV6 as core::fmt::Display&gt;::fmt (7 samples, 0.25%)</title><rect x="79.3164%" y="133" width="0.2467%" height="15" fill="rgb(220,229,9)" fg:x="2251" fg:w="7"/><text x="79.5664%" y="143.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (6 samples, 0.21%)</title><rect x="79.3517%" y="117" width="0.2114%" height="15" fill="rgb(250,87,22)" fg:x="2252" fg:w="6"/><text x="79.6017%" y="127.50"></text></g><g><title>web-server`core::fmt::write (5 samples, 0.18%)</title><rect x="79.3869%" y="101" width="0.1762%" height="15" fill="rgb(239,43,17)" fg:x="2253" fg:w="5"/><text x="79.6369%" y="111.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (4 samples, 0.14%)</title><rect x="79.4221%" y="85" width="0.1409%" height="15" fill="rgb(231,177,25)" fg:x="2254" fg:w="4"/><text x="79.6721%" y="95.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.11%)</title><rect x="79.4574%" y="69" width="0.1057%" height="15" fill="rgb(219,179,1)" fg:x="2255" fg:w="3"/><text x="79.7074%" y="79.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="79.5278%" y="53" width="0.0352%" height="15" fill="rgb(238,219,53)" fg:x="2257" fg:w="1"/><text x="79.7778%" y="63.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="79.5278%" y="37" width="0.0352%" height="15" fill="rgb(232,167,36)" fg:x="2257" fg:w="1"/><text x="79.7778%" y="47.50"></text></g><g><title>web-server`core::fmt::Formatter::pad_integral (1 samples, 0.04%)</title><rect x="79.5631%" y="133" width="0.0352%" height="15" fill="rgb(244,19,51)" fg:x="2258" fg:w="1"/><text x="79.8131%" y="143.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (1 samples, 0.04%)</title><rect x="79.5983%" y="133" width="0.0352%" height="15" fill="rgb(224,6,22)" fg:x="2259" fg:w="1"/><text x="79.8483%" y="143.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (14 samples, 0.49%)</title><rect x="79.1755%" y="149" width="0.4933%" height="15" fill="rgb(224,145,5)" fg:x="2247" fg:w="14"/><text x="79.4255%" y="159.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 0.04%)</title><rect x="79.6335%" y="133" width="0.0352%" height="15" fill="rgb(234,130,49)" fg:x="2260" fg:w="1"/><text x="79.8835%" y="143.50"></text></g><g><title>web-server`core::fmt::Formatter::pad_integral (1 samples, 0.04%)</title><rect x="79.6335%" y="117" width="0.0352%" height="15" fill="rgb(254,6,2)" fg:x="2260" fg:w="1"/><text x="79.8835%" y="127.50"></text></g><g><title>web-server`&lt;std::sys_common::net::TcpStream as core::fmt::Debug&gt;::fmt (21 samples, 0.74%)</title><rect x="78.9641%" y="165" width="0.7400%" height="15" fill="rgb(208,96,46)" fg:x="2241" fg:w="21"/><text x="79.2141%" y="175.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::finish (1 samples, 0.04%)</title><rect x="79.6688%" y="149" width="0.0352%" height="15" fill="rgb(239,3,39)" fg:x="2261" fg:w="1"/><text x="79.9188%" y="159.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.07%)</title><rect x="79.8097%" y="149" width="0.0705%" height="15" fill="rgb(233,210,1)" fg:x="2265" fg:w="2"/><text x="80.0597%" y="159.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="79.8450%" y="133" width="0.0352%" height="15" fill="rgb(244,137,37)" fg:x="2266" fg:w="1"/><text x="80.0950%" y="143.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="79.8450%" y="117" width="0.0352%" height="15" fill="rgb(240,136,2)" fg:x="2266" fg:w="1"/><text x="80.0950%" y="127.50"></text></g><g><title>web-server`core::unicode::printable::check (1 samples, 0.04%)</title><rect x="79.8802%" y="149" width="0.0352%" height="15" fill="rgb(239,18,37)" fg:x="2267" fg:w="1"/><text x="80.1302%" y="159.50"></text></g><g><title>web-server`&lt;str as core::fmt::Debug&gt;::fmt (9 samples, 0.32%)</title><rect x="79.7040%" y="165" width="0.3171%" height="15" fill="rgb(218,185,22)" fg:x="2262" fg:w="9"/><text x="79.9540%" y="175.50"></text></g><g><title>web-server`core::unicode::unicode_data::grapheme_extend::lookup (3 samples, 0.11%)</title><rect x="79.9154%" y="149" width="0.1057%" height="15" fill="rgb(225,218,4)" fg:x="2268" fg:w="3"/><text x="80.1654%" y="159.50"></text></g><g><title>web-server`core::fmt::Formatter::debug_struct (1 samples, 0.04%)</title><rect x="80.0211%" y="165" width="0.0352%" height="15" fill="rgb(230,182,32)" fg:x="2271" fg:w="1"/><text x="80.2711%" y="175.50"></text></g><g><title>web-server`core::fmt::Write::write_char (1 samples, 0.04%)</title><rect x="80.0564%" y="165" width="0.0352%" height="15" fill="rgb(242,56,43)" fg:x="2272" fg:w="1"/><text x="80.3064%" y="175.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (79 samples, 2.78%)</title><rect x="77.3432%" y="181" width="2.7837%" height="15" fill="rgb(233,99,24)" fg:x="2195" fg:w="79"/><text x="77.5932%" y="191.50">we..</text></g><g><title>web-server`core::unicode::printable::check (1 samples, 0.04%)</title><rect x="80.0916%" y="165" width="0.0352%" height="15" fill="rgb(234,209,42)" fg:x="2273" fg:w="1"/><text x="80.3416%" y="175.50"></text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (83 samples, 2.92%)</title><rect x="77.2375%" y="197" width="2.9246%" height="15" fill="rgb(227,7,12)" fg:x="2192" fg:w="83"/><text x="77.4875%" y="207.50">we..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::finish (1 samples, 0.04%)</title><rect x="80.1268%" y="181" width="0.0352%" height="15" fill="rgb(245,203,43)" fg:x="2274" fg:w="1"/><text x="80.3768%" y="191.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="80.1268%" y="165" width="0.0352%" height="15" fill="rgb(238,205,33)" fg:x="2274" fg:w="1"/><text x="80.3768%" y="175.50"></text></g><g><title>web-server`std::io::stdio::_print (154 samples, 5.43%)</title><rect x="74.7710%" y="245" width="5.4264%" height="15" fill="rgb(231,56,7)" fg:x="2122" fg:w="154"/><text x="75.0210%" y="255.50">web-ser..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (153 samples, 5.39%)</title><rect x="74.8062%" y="229" width="5.3911%" height="15" fill="rgb(244,186,29)" fg:x="2123" fg:w="153"/><text x="75.0562%" y="239.50">web-ser..</text></g><g><title>web-server`core::fmt::write (122 samples, 4.30%)</title><rect x="75.8985%" y="213" width="4.2988%" height="15" fill="rgb(234,111,31)" fg:x="2154" fg:w="122"/><text x="76.1485%" y="223.50">web-s..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (1 samples, 0.04%)</title><rect x="80.1621%" y="197" width="0.0352%" height="15" fill="rgb(241,149,10)" fg:x="2275" fg:w="1"/><text x="80.4121%" y="207.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (4 samples, 0.14%)</title><rect x="80.1973%" y="245" width="0.1409%" height="15" fill="rgb(249,206,44)" fg:x="2276" fg:w="4"/><text x="80.4473%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (4 samples, 0.14%)</title><rect x="80.1973%" y="229" width="0.1409%" height="15" fill="rgb(251,153,30)" fg:x="2276" fg:w="4"/><text x="80.4473%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (4 samples, 0.14%)</title><rect x="80.1973%" y="213" width="0.1409%" height="15" fill="rgb(239,152,38)" fg:x="2276" fg:w="4"/><text x="80.4473%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.14%)</title><rect x="80.1973%" y="197" width="0.1409%" height="15" fill="rgb(249,139,47)" fg:x="2276" fg:w="4"/><text x="80.4473%" y="207.50"></text></g><g><title>web-server`web_server::header::Header::from_request (1 samples, 0.04%)</title><rect x="80.3383%" y="245" width="0.0352%" height="15" fill="rgb(244,64,35)" fg:x="2280" fg:w="1"/><text x="80.5883%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__recvfrom (1 samples, 0.04%)</title><rect x="80.3735%" y="229" width="0.0352%" height="15" fill="rgb(216,46,15)" fg:x="2281" fg:w="1"/><text x="80.6235%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (72 samples, 2.54%)</title><rect x="80.4087%" y="229" width="2.5370%" height="15" fill="rgb(250,74,19)" fg:x="2282" fg:w="72"/><text x="80.6587%" y="239.50">li..</text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="82.9457%" y="229" width="0.0352%" height="15" fill="rgb(249,42,33)" fg:x="2354" fg:w="1"/><text x="83.1957%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.18%)</title><rect x="82.9810%" y="229" width="0.1762%" height="15" fill="rgb(242,149,17)" fg:x="2355" fg:w="5"/><text x="83.2310%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.11%)</title><rect x="83.0514%" y="213" width="0.1057%" height="15" fill="rgb(244,29,21)" fg:x="2357" fg:w="3"/><text x="83.3014%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.07%)</title><rect x="83.0867%" y="197" width="0.0705%" height="15" fill="rgb(220,130,37)" fg:x="2358" fg:w="2"/><text x="83.3367%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.14%)</title><rect x="83.1572%" y="229" width="0.1409%" height="15" fill="rgb(211,67,2)" fg:x="2360" fg:w="4"/><text x="83.4072%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.07%)</title><rect x="83.2276%" y="213" width="0.0705%" height="15" fill="rgb(235,68,52)" fg:x="2362" fg:w="2"/><text x="83.4776%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="83.2629%" y="197" width="0.0352%" height="15" fill="rgb(246,142,3)" fg:x="2363" fg:w="1"/><text x="83.5129%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.11%)</title><rect x="83.2981%" y="229" width="0.1057%" height="15" fill="rgb(241,25,7)" fg:x="2364" fg:w="3"/><text x="83.5481%" y="239.50"></text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 0.07%)</title><rect x="83.4038%" y="229" width="0.0705%" height="15" fill="rgb(242,119,39)" fg:x="2367" fg:w="2"/><text x="83.6538%" y="239.50"></text></g><g><title>web-server`__rdl_alloc (1 samples, 0.04%)</title><rect x="83.4743%" y="229" width="0.0352%" height="15" fill="rgb(241,98,45)" fg:x="2369" fg:w="1"/><text x="83.7243%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (5 samples, 0.18%)</title><rect x="83.5800%" y="197" width="0.1762%" height="15" fill="rgb(254,28,30)" fg:x="2372" fg:w="5"/><text x="83.8300%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (5 samples, 0.18%)</title><rect x="83.5800%" y="181" width="0.1762%" height="15" fill="rgb(241,142,54)" fg:x="2372" fg:w="5"/><text x="83.8300%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.11%)</title><rect x="83.7562%" y="197" width="0.1057%" height="15" fill="rgb(222,85,15)" fg:x="2377" fg:w="3"/><text x="84.0062%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.11%)</title><rect x="83.7562%" y="181" width="0.1057%" height="15" fill="rgb(210,85,47)" fg:x="2377" fg:w="3"/><text x="84.0062%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`write (55 samples, 1.94%)</title><rect x="83.8619%" y="165" width="1.9380%" height="15" fill="rgb(224,206,25)" fg:x="2380" fg:w="55"/><text x="84.1119%" y="175.50">l..</text></g><g><title>web-server`std::io::stdio::_print (66 samples, 2.33%)</title><rect x="83.5095%" y="229" width="2.3256%" height="15" fill="rgb(243,201,19)" fg:x="2370" fg:w="66"/><text x="83.7595%" y="239.50">w..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (66 samples, 2.33%)</title><rect x="83.5095%" y="213" width="2.3256%" height="15" fill="rgb(236,59,4)" fg:x="2370" fg:w="66"/><text x="83.7595%" y="223.50">w..</text></g><g><title>web-server`core::fmt::write (56 samples, 1.97%)</title><rect x="83.8619%" y="197" width="1.9732%" height="15" fill="rgb(254,179,45)" fg:x="2380" fg:w="56"/><text x="84.1119%" y="207.50">w..</text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (56 samples, 1.97%)</title><rect x="83.8619%" y="181" width="1.9732%" height="15" fill="rgb(226,14,10)" fg:x="2380" fg:w="56"/><text x="84.1119%" y="191.50">w..</text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="85.7999%" y="165" width="0.0352%" height="15" fill="rgb(244,27,41)" fg:x="2435" fg:w="1"/><text x="86.0499%" y="175.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="85.7999%" y="149" width="0.0352%" height="15" fill="rgb(235,35,32)" fg:x="2435" fg:w="1"/><text x="86.0499%" y="159.50"></text></g><g><title>web-server`std::net::udp::UdpSocket::recv (1 samples, 0.04%)</title><rect x="85.8351%" y="229" width="0.0352%" height="15" fill="rgb(218,68,31)" fg:x="2436" fg:w="1"/><text x="86.0851%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="85.9760%" y="181" width="0.0352%" height="15" fill="rgb(207,120,37)" fg:x="2440" fg:w="1"/><text x="86.2260%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="86.0465%" y="165" width="0.0352%" height="15" fill="rgb(227,98,0)" fg:x="2442" fg:w="1"/><text x="86.2965%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.35%)</title><rect x="85.9056%" y="213" width="0.3524%" height="15" fill="rgb(207,7,3)" fg:x="2438" fg:w="10"/><text x="86.1556%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.32%)</title><rect x="85.9408%" y="197" width="0.3171%" height="15" fill="rgb(206,98,19)" fg:x="2439" fg:w="9"/><text x="86.1908%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.25%)</title><rect x="86.0113%" y="181" width="0.2467%" height="15" fill="rgb(217,5,26)" fg:x="2441" fg:w="7"/><text x="86.2613%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.18%)</title><rect x="86.0817%" y="165" width="0.1762%" height="15" fill="rgb(235,190,38)" fg:x="2443" fg:w="5"/><text x="86.3317%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="86.2227%" y="149" width="0.0352%" height="15" fill="rgb(247,86,24)" fg:x="2447" fg:w="1"/><text x="86.4727%" y="159.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="86.2579%" y="213" width="0.0352%" height="15" fill="rgb(205,101,16)" fg:x="2448" fg:w="1"/><text x="86.5079%" y="223.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="86.2579%" y="197" width="0.0352%" height="15" fill="rgb(246,168,33)" fg:x="2448" fg:w="1"/><text x="86.5079%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="86.2579%" y="181" width="0.0352%" height="15" fill="rgb(231,114,1)" fg:x="2448" fg:w="1"/><text x="86.5079%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="86.2579%" y="165" width="0.0352%" height="15" fill="rgb(207,184,53)" fg:x="2448" fg:w="1"/><text x="86.5079%" y="175.50"></text></g><g><title>web-server`core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="86.2932%" y="213" width="0.0352%" height="15" fill="rgb(224,95,51)" fg:x="2449" fg:w="1"/><text x="86.5432%" y="223.50"></text></g><g><title>web-server`httparse::parse_headers_iter_uninit (1 samples, 0.04%)</title><rect x="86.3636%" y="181" width="0.0352%" height="15" fill="rgb(212,188,45)" fg:x="2451" fg:w="1"/><text x="86.6136%" y="191.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (3 samples, 0.11%)</title><rect x="86.3989%" y="181" width="0.1057%" height="15" fill="rgb(223,154,38)" fg:x="2452" fg:w="3"/><text x="86.6489%" y="191.50"></text></g><g><title>web-server`web_server::request::Request::from_tcp_stream (179 samples, 6.31%)</title><rect x="80.3735%" y="245" width="6.3073%" height="15" fill="rgb(251,22,52)" fg:x="2281" fg:w="179"/><text x="80.6235%" y="255.50">web-serv..</text></g><g><title>web-server`web_server::header::Header::from_request (23 samples, 0.81%)</title><rect x="85.8703%" y="229" width="0.8104%" height="15" fill="rgb(229,209,22)" fg:x="2437" fg:w="23"/><text x="86.1203%" y="239.50"></text></g><g><title>web-server`httparse::Request::parse (10 samples, 0.35%)</title><rect x="86.3284%" y="213" width="0.3524%" height="15" fill="rgb(234,138,34)" fg:x="2450" fg:w="10"/><text x="86.5784%" y="223.50"></text></g><g><title>web-server`httparse::Request::parse_with_uninit_headers (10 samples, 0.35%)</title><rect x="86.3284%" y="197" width="0.3524%" height="15" fill="rgb(212,95,11)" fg:x="2450" fg:w="10"/><text x="86.5784%" y="207.50"></text></g><g><title>web-server`httparse::simd::runtime::match_uri_vectored (5 samples, 0.18%)</title><rect x="86.5046%" y="181" width="0.1762%" height="15" fill="rgb(240,179,47)" fg:x="2455" fg:w="5"/><text x="86.7546%" y="191.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (4 samples, 0.14%)</title><rect x="86.5398%" y="165" width="0.1409%" height="15" fill="rgb(240,163,11)" fg:x="2456" fg:w="4"/><text x="86.7898%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`fcntl (1 samples, 0.04%)</title><rect x="86.7160%" y="229" width="0.0352%" height="15" fill="rgb(236,37,12)" fg:x="2461" fg:w="1"/><text x="86.9660%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="86.7512%" y="229" width="0.0352%" height="15" fill="rgb(232,164,16)" fg:x="2462" fg:w="1"/><text x="87.0012%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="86.7512%" y="213" width="0.0352%" height="15" fill="rgb(244,205,15)" fg:x="2462" fg:w="1"/><text x="87.0012%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.04%)</title><rect x="86.7865%" y="229" width="0.0352%" height="15" fill="rgb(223,117,47)" fg:x="2463" fg:w="1"/><text x="87.0365%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="86.8217%" y="229" width="0.0352%" height="15" fill="rgb(244,107,35)" fg:x="2464" fg:w="1"/><text x="87.0717%" y="239.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="86.8569%" y="229" width="0.0705%" height="15" fill="rgb(205,140,8)" fg:x="2465" fg:w="2"/><text x="87.1069%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="86.8569%" y="213" width="0.0705%" height="15" fill="rgb(228,84,46)" fg:x="2465" fg:w="2"/><text x="87.1069%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="86.8569%" y="197" width="0.0705%" height="15" fill="rgb(254,188,9)" fg:x="2465" fg:w="2"/><text x="87.1069%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="86.8569%" y="181" width="0.0705%" height="15" fill="rgb(206,112,54)" fg:x="2465" fg:w="2"/><text x="87.1069%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="86.8922%" y="165" width="0.0352%" height="15" fill="rgb(216,84,49)" fg:x="2466" fg:w="1"/><text x="87.1422%" y="175.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="86.9274%" y="229" width="0.0352%" height="15" fill="rgb(214,194,35)" fg:x="2467" fg:w="1"/><text x="87.1774%" y="239.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="86.9274%" y="213" width="0.0352%" height="15" fill="rgb(249,28,3)" fg:x="2467" fg:w="1"/><text x="87.1774%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="86.9274%" y="197" width="0.0352%" height="15" fill="rgb(222,56,52)" fg:x="2467" fg:w="1"/><text x="87.1774%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="86.9979%" y="213" width="0.0352%" height="15" fill="rgb(245,217,50)" fg:x="2469" fg:w="1"/><text x="87.2479%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="86.9979%" y="197" width="0.0352%" height="15" fill="rgb(213,201,24)" fg:x="2469" fg:w="1"/><text x="87.2479%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="86.9979%" y="181" width="0.0352%" height="15" fill="rgb(248,116,28)" fg:x="2469" fg:w="1"/><text x="87.2479%" y="191.50"></text></g><g><title>web-server`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.07%)</title><rect x="87.0331%" y="213" width="0.0705%" height="15" fill="rgb(219,72,43)" fg:x="2470" fg:w="2"/><text x="87.2831%" y="223.50"></text></g><g><title>web-server`core::str::pattern::TwoWaySearcher::next (2 samples, 0.07%)</title><rect x="87.0331%" y="197" width="0.0705%" height="15" fill="rgb(209,138,14)" fg:x="2470" fg:w="2"/><text x="87.2831%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.04%)</title><rect x="87.1388%" y="149" width="0.0352%" height="15" fill="rgb(222,18,33)" fg:x="2473" fg:w="1"/><text x="87.3888%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="87.1388%" y="133" width="0.0352%" height="15" fill="rgb(213,199,7)" fg:x="2473" fg:w="1"/><text x="87.3888%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="87.1388%" y="117" width="0.0352%" height="15" fill="rgb(250,110,10)" fg:x="2473" fg:w="1"/><text x="87.3888%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="87.1388%" y="101" width="0.0352%" height="15" fill="rgb(248,123,6)" fg:x="2473" fg:w="1"/><text x="87.3888%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.07%)</title><rect x="87.1388%" y="165" width="0.0705%" height="15" fill="rgb(206,91,31)" fg:x="2473" fg:w="2"/><text x="87.3888%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="87.1741%" y="149" width="0.0352%" height="15" fill="rgb(211,154,13)" fg:x="2474" fg:w="1"/><text x="87.4241%" y="159.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.18%)</title><rect x="87.1036%" y="213" width="0.1762%" height="15" fill="rgb(225,148,7)" fg:x="2472" fg:w="5"/><text x="87.3536%" y="223.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (5 samples, 0.18%)</title><rect x="87.1036%" y="197" width="0.1762%" height="15" fill="rgb(220,160,43)" fg:x="2472" fg:w="5"/><text x="87.3536%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.18%)</title><rect x="87.1036%" y="181" width="0.1762%" height="15" fill="rgb(213,52,39)" fg:x="2472" fg:w="5"/><text x="87.3536%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.07%)</title><rect x="87.2093%" y="165" width="0.0705%" height="15" fill="rgb(243,137,7)" fg:x="2475" fg:w="2"/><text x="87.4593%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.07%)</title><rect x="87.2093%" y="149" width="0.0705%" height="15" fill="rgb(230,79,13)" fg:x="2475" fg:w="2"/><text x="87.4593%" y="159.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.35%)</title><rect x="86.9626%" y="229" width="0.3524%" height="15" fill="rgb(247,105,23)" fg:x="2468" fg:w="10"/><text x="87.2126%" y="239.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="87.2798%" y="213" width="0.0352%" height="15" fill="rgb(223,179,41)" fg:x="2477" fg:w="1"/><text x="87.5298%" y="223.50"></text></g><g><title>web-server`&lt;std::fs::File as std::io::Write&gt;::flush (1 samples, 0.04%)</title><rect x="87.3150%" y="229" width="0.0352%" height="15" fill="rgb(218,9,34)" fg:x="2478" fg:w="1"/><text x="87.5650%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="87.3502%" y="213" width="0.0352%" height="15" fill="rgb(222,106,8)" fg:x="2479" fg:w="1"/><text x="87.6002%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="87.3502%" y="197" width="0.0352%" height="15" fill="rgb(211,220,0)" fg:x="2479" fg:w="1"/><text x="87.6002%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="87.3502%" y="181" width="0.0352%" height="15" fill="rgb(229,52,16)" fg:x="2479" fg:w="1"/><text x="87.6002%" y="191.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.11%)</title><rect x="87.3855%" y="213" width="0.1057%" height="15" fill="rgb(212,155,18)" fg:x="2480" fg:w="3"/><text x="87.6355%" y="223.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for i64&gt;::fmt (2 samples, 0.07%)</title><rect x="87.4912%" y="213" width="0.0705%" height="15" fill="rgb(242,21,14)" fg:x="2483" fg:w="2"/><text x="87.7412%" y="223.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="87.5617%" y="197" width="0.0352%" height="15" fill="rgb(222,19,48)" fg:x="2485" fg:w="1"/><text x="87.8117%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="87.5617%" y="181" width="0.0352%" height="15" fill="rgb(232,45,27)" fg:x="2485" fg:w="1"/><text x="87.8117%" y="191.50"></text></g><g><title>web-server`alloc::fmt::format (8 samples, 0.28%)</title><rect x="87.3502%" y="229" width="0.2819%" height="15" fill="rgb(249,103,42)" fg:x="2479" fg:w="8"/><text x="87.6002%" y="239.50"></text></g><g><title>web-server`core::fmt::write (2 samples, 0.07%)</title><rect x="87.5617%" y="213" width="0.0705%" height="15" fill="rgb(246,81,33)" fg:x="2485" fg:w="2"/><text x="87.8117%" y="223.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for i64&gt;::fmt (1 samples, 0.04%)</title><rect x="87.5969%" y="197" width="0.0352%" height="15" fill="rgb(252,33,42)" fg:x="2486" fg:w="1"/><text x="87.8469%" y="207.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="87.5969%" y="181" width="0.0352%" height="15" fill="rgb(209,212,41)" fg:x="2486" fg:w="1"/><text x="87.8469%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="87.5969%" y="165" width="0.0352%" height="15" fill="rgb(207,154,6)" fg:x="2486" fg:w="1"/><text x="87.8469%" y="175.50"></text></g><g><title>web-server`core::str::pattern::StrSearcher::new (2 samples, 0.07%)</title><rect x="87.6321%" y="229" width="0.0705%" height="15" fill="rgb(223,64,47)" fg:x="2487" fg:w="2"/><text x="87.8821%" y="239.50"></text></g><g><title>web-server`std::os::unix::net::stream::UnixStream::try_clone (20 samples, 0.70%)</title><rect x="87.7026%" y="229" width="0.7047%" height="15" fill="rgb(211,161,38)" fg:x="2489" fg:w="20"/><text x="87.9526%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (20 samples, 0.70%)</title><rect x="87.7026%" y="213" width="0.7047%" height="15" fill="rgb(219,138,40)" fg:x="2489" fg:w="20"/><text x="87.9526%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (3 samples, 0.11%)</title><rect x="88.4073%" y="229" width="0.1057%" height="15" fill="rgb(241,228,46)" fg:x="2509" fg:w="3"/><text x="88.6573%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (3 samples, 0.11%)</title><rect x="88.4073%" y="213" width="0.1057%" height="15" fill="rgb(223,209,38)" fg:x="2509" fg:w="3"/><text x="88.6573%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (3 samples, 0.11%)</title><rect x="88.4073%" y="197" width="0.1057%" height="15" fill="rgb(236,164,45)" fg:x="2509" fg:w="3"/><text x="88.6573%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.07%)</title><rect x="88.4426%" y="181" width="0.0705%" height="15" fill="rgb(231,15,5)" fg:x="2510" fg:w="2"/><text x="88.6926%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (112 samples, 3.95%)</title><rect x="88.5835%" y="213" width="3.9464%" height="15" fill="rgb(252,35,15)" fg:x="2514" fg:w="112"/><text x="88.8335%" y="223.50">libs..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="92.5300%" y="197" width="0.0352%" height="15" fill="rgb(248,181,18)" fg:x="2626" fg:w="1"/><text x="92.7800%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.14%)</title><rect x="92.5300%" y="213" width="0.1409%" height="15" fill="rgb(233,39,42)" fg:x="2626" fg:w="4"/><text x="92.7800%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.11%)</title><rect x="92.5652%" y="197" width="0.1057%" height="15" fill="rgb(238,110,33)" fg:x="2627" fg:w="3"/><text x="92.8152%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="92.6709%" y="197" width="0.0352%" height="15" fill="rgb(233,195,10)" fg:x="2630" fg:w="1"/><text x="92.9209%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="92.6709%" y="181" width="0.0352%" height="15" fill="rgb(254,105,3)" fg:x="2630" fg:w="1"/><text x="92.9209%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="92.6709%" y="165" width="0.0352%" height="15" fill="rgb(221,225,9)" fg:x="2630" fg:w="1"/><text x="92.9209%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="92.6709%" y="149" width="0.0352%" height="15" fill="rgb(224,227,45)" fg:x="2630" fg:w="1"/><text x="92.9209%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="92.6709%" y="133" width="0.0352%" height="15" fill="rgb(229,198,43)" fg:x="2630" fg:w="1"/><text x="92.9209%" y="143.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="92.7061%" y="197" width="0.0352%" height="15" fill="rgb(206,209,35)" fg:x="2631" fg:w="1"/><text x="92.9561%" y="207.50"></text></g><g><title>web-server`alloc::fmt::format (4 samples, 0.14%)</title><rect x="92.6709%" y="213" width="0.1409%" height="15" fill="rgb(245,195,53)" fg:x="2630" fg:w="4"/><text x="92.9209%" y="223.50"></text></g><g><title>web-server`core::fmt::write (2 samples, 0.07%)</title><rect x="92.7414%" y="197" width="0.0705%" height="15" fill="rgb(240,92,26)" fg:x="2632" fg:w="2"/><text x="92.9914%" y="207.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.07%)</title><rect x="92.7414%" y="181" width="0.0705%" height="15" fill="rgb(207,40,23)" fg:x="2632" fg:w="2"/><text x="92.9914%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.07%)</title><rect x="92.7414%" y="165" width="0.0705%" height="15" fill="rgb(223,111,35)" fg:x="2632" fg:w="2"/><text x="92.9914%" y="175.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (540 samples, 19.03%)</title><rect x="73.8196%" y="261" width="19.0275%" height="15" fill="rgb(229,147,28)" fg:x="2095" fg:w="540"/><text x="74.0696%" y="271.50">web-server`rusty_junctions::fu..</text></g><g><title>web-server`web_server::request::Request::handle_pooled (175 samples, 6.17%)</title><rect x="86.6808%" y="245" width="6.1663%" height="15" fill="rgb(211,29,28)" fg:x="2460" fg:w="175"/><text x="86.9308%" y="255.50">web-serv..</text></g><g><title>web-server`web_server::request::Request::respond_ok (123 samples, 4.33%)</title><rect x="88.5130%" y="229" width="4.3340%" height="15" fill="rgb(228,72,33)" fg:x="2512" fg:w="123"/><text x="88.7630%" y="239.50">web-s..</text></g><g><title>web-server`std::net::udp::UdpSocket::send (1 samples, 0.04%)</title><rect x="92.8118%" y="213" width="0.0352%" height="15" fill="rgb(205,214,31)" fg:x="2634" fg:w="1"/><text x="93.0618%" y="223.50"></text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (1,496 samples, 52.71%)</title><rect x="40.1691%" y="277" width="52.7132%" height="15" fill="rgb(224,111,15)" fg:x="1140" fg:w="1496"/><text x="40.4191%" y="287.50">web-server`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (1 samples, 0.04%)</title><rect x="92.8471%" y="261" width="0.0352%" height="15" fill="rgb(253,21,26)" fg:x="2635" fg:w="1"/><text x="93.0971%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="93.0585%" y="197" width="0.0352%" height="15" fill="rgb(245,139,43)" fg:x="2641" fg:w="1"/><text x="93.3085%" y="207.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (7 samples, 0.25%)</title><rect x="92.9528%" y="261" width="0.2467%" height="15" fill="rgb(252,170,7)" fg:x="2638" fg:w="7"/><text x="93.2028%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.21%)</title><rect x="92.9880%" y="245" width="0.2114%" height="15" fill="rgb(231,118,14)" fg:x="2639" fg:w="6"/><text x="93.2380%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.21%)</title><rect x="92.9880%" y="229" width="0.2114%" height="15" fill="rgb(238,83,0)" fg:x="2639" fg:w="6"/><text x="93.2380%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.21%)</title><rect x="92.9880%" y="213" width="0.2114%" height="15" fill="rgb(221,39,39)" fg:x="2639" fg:w="6"/><text x="93.2380%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.11%)</title><rect x="93.0937%" y="197" width="0.1057%" height="15" fill="rgb(222,119,46)" fg:x="2642" fg:w="3"/><text x="93.3437%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="93.1642%" y="181" width="0.0352%" height="15" fill="rgb(222,165,49)" fg:x="2644" fg:w="1"/><text x="93.4142%" y="191.50"></text></g><g><title>libdyld.dylib`DYLD-STUB$$malloc (1 samples, 0.04%)</title><rect x="93.5870%" y="245" width="0.0352%" height="15" fill="rgb(219,113,52)" fg:x="2656" fg:w="1"/><text x="93.8370%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.07%)</title><rect x="93.9746%" y="181" width="0.0705%" height="15" fill="rgb(214,7,15)" fg:x="2667" fg:w="2"/><text x="94.2246%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.35%)</title><rect x="93.7984%" y="229" width="0.3524%" height="15" fill="rgb(235,32,4)" fg:x="2662" fg:w="10"/><text x="94.0484%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.32%)</title><rect x="93.8337%" y="213" width="0.3171%" height="15" fill="rgb(238,90,54)" fg:x="2663" fg:w="9"/><text x="94.0837%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.32%)</title><rect x="93.8337%" y="197" width="0.3171%" height="15" fill="rgb(213,208,19)" fg:x="2663" fg:w="9"/><text x="94.0837%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.11%)</title><rect x="94.0451%" y="181" width="0.1057%" height="15" fill="rgb(233,156,4)" fg:x="2669" fg:w="3"/><text x="94.2951%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="94.1156%" y="165" width="0.0352%" height="15" fill="rgb(207,194,5)" fg:x="2671" fg:w="1"/><text x="94.3656%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.11%)</title><rect x="94.1508%" y="229" width="0.1057%" height="15" fill="rgb(206,111,30)" fg:x="2672" fg:w="3"/><text x="94.4008%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.07%)</title><rect x="94.2565%" y="229" width="0.0705%" height="15" fill="rgb(243,70,54)" fg:x="2675" fg:w="2"/><text x="94.5065%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_allocate_and_initialize_for_key (21 samples, 0.74%)</title><rect x="93.6223%" y="245" width="0.7400%" height="15" fill="rgb(242,28,8)" fg:x="2657" fg:w="21"/><text x="93.8723%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="94.3270%" y="229" width="0.0352%" height="15" fill="rgb(219,106,18)" fg:x="2677" fg:w="1"/><text x="94.5770%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="94.3622%" y="245" width="0.0352%" height="15" fill="rgb(244,222,10)" fg:x="2678" fg:w="1"/><text x="94.6122%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="94.3975%" y="245" width="0.0352%" height="15" fill="rgb(236,179,52)" fg:x="2679" fg:w="1"/><text x="94.6475%" y="255.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.04%)</title><rect x="94.4327%" y="245" width="0.0352%" height="15" fill="rgb(213,23,39)" fg:x="2680" fg:w="1"/><text x="94.6827%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.07%)</title><rect x="94.4679%" y="245" width="0.0705%" height="15" fill="rgb(238,48,10)" fg:x="2681" fg:w="2"/><text x="94.7179%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="94.5384%" y="245" width="0.0352%" height="15" fill="rgb(251,196,23)" fg:x="2683" fg:w="1"/><text x="94.7884%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (40 samples, 1.41%)</title><rect x="93.1994%" y="261" width="1.4094%" height="15" fill="rgb(250,152,24)" fg:x="2645" fg:w="40"/><text x="93.4494%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_setspecific (1 samples, 0.04%)</title><rect x="94.5736%" y="245" width="0.0352%" height="15" fill="rgb(209,150,17)" fg:x="2684" fg:w="1"/><text x="94.8236%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="94.6441%" y="213" width="0.0352%" height="15" fill="rgb(234,202,34)" fg:x="2686" fg:w="1"/><text x="94.8941%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.11%)</title><rect x="94.6089%" y="261" width="0.1057%" height="15" fill="rgb(253,148,53)" fg:x="2685" fg:w="3"/><text x="94.8589%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.11%)</title><rect x="94.6089%" y="245" width="0.1057%" height="15" fill="rgb(218,129,16)" fg:x="2685" fg:w="3"/><text x="94.8589%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.11%)</title><rect x="94.6089%" y="229" width="0.1057%" height="15" fill="rgb(216,85,19)" fg:x="2685" fg:w="3"/><text x="94.8589%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.04%)</title><rect x="94.6794%" y="213" width="0.0352%" height="15" fill="rgb(235,228,7)" fg:x="2687" fg:w="1"/><text x="94.9294%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.14%)</title><rect x="94.7146%" y="229" width="0.1409%" height="15" fill="rgb(245,175,0)" fg:x="2688" fg:w="4"/><text x="94.9646%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.11%)</title><rect x="94.7498%" y="213" width="0.1057%" height="15" fill="rgb(208,168,36)" fg:x="2689" fg:w="3"/><text x="94.9998%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.11%)</title><rect x="94.7498%" y="197" width="0.1057%" height="15" fill="rgb(246,171,24)" fg:x="2689" fg:w="3"/><text x="94.9998%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.07%)</title><rect x="94.7851%" y="181" width="0.0705%" height="15" fill="rgb(215,142,24)" fg:x="2690" fg:w="2"/><text x="95.0351%" y="191.50"></text></g><g><title>web-server`std::sys_common::thread_info::set (57 samples, 2.01%)</title><rect x="92.8823%" y="277" width="2.0085%" height="15" fill="rgb(250,187,7)" fg:x="2636" fg:w="57"/><text x="93.1323%" y="287.50">w..</text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.18%)</title><rect x="94.7146%" y="261" width="0.1762%" height="15" fill="rgb(228,66,33)" fg:x="2688" fg:w="5"/><text x="94.9646%" y="271.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (5 samples, 0.18%)</title><rect x="94.7146%" y="245" width="0.1762%" height="15" fill="rgb(234,215,21)" fg:x="2688" fg:w="5"/><text x="94.9646%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="94.8555%" y="229" width="0.0352%" height="15" fill="rgb(222,191,20)" fg:x="2692" fg:w="1"/><text x="95.1055%" y="239.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,583 samples, 55.78%)</title><rect x="39.1473%" y="293" width="55.7787%" height="15" fill="rgb(245,79,54)" fg:x="1111" fg:w="1583"/><text x="39.3973%" y="303.50">web-server`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>web-server`std::thread::Thread::cname (1 samples, 0.04%)</title><rect x="94.8908%" y="277" width="0.0352%" height="15" fill="rgb(240,10,37)" fg:x="2693" fg:w="1"/><text x="95.1408%" y="287.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.04%)</title><rect x="96.0183%" y="277" width="0.0352%" height="15" fill="rgb(214,192,32)" fg:x="2725" fg:w="1"/><text x="96.2683%" y="287.50"></text></g><g><title>libsystem_c.dylib`sysconf (2 samples, 0.07%)</title><rect x="96.0536%" y="277" width="0.0705%" height="15" fill="rgb(209,36,54)" fg:x="2726" fg:w="2"/><text x="96.3036%" y="287.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.04%)</title><rect x="96.0888%" y="261" width="0.0352%" height="15" fill="rgb(220,10,11)" fg:x="2727" fg:w="1"/><text x="96.3388%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (104 samples, 3.66%)</title><rect x="96.1240%" y="277" width="3.6646%" height="15" fill="rgb(221,106,17)" fg:x="2728" fg:w="104"/><text x="96.3740%" y="287.50">libs..</text></g><g><title>web-server`std::sys::unix::stack_overflow::imp::make_handler (140 samples, 4.93%)</title><rect x="94.9260%" y="293" width="4.9331%" height="15" fill="rgb(251,142,44)" fg:x="2694" fg:w="140"/><text x="95.1760%" y="303.50">web-se..</text></g><g><title>libsystem_kernel.dylib`mmap (2 samples, 0.07%)</title><rect x="99.7886%" y="277" width="0.0705%" height="15" fill="rgb(238,13,15)" fg:x="2832" fg:w="2"/><text x="100.0386%" y="287.50"></text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.07%)</title><rect x="99.8591%" y="293" width="0.0705%" height="15" fill="rgb(208,107,27)" fg:x="2834" fg:w="2"/><text x="100.1091%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (2,190 samples, 77.17%)</title><rect x="22.7977%" y="325" width="77.1670%" height="15" fill="rgb(205,136,37)" fg:x="647" fg:w="2190"/><text x="23.0477%" y="335.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (1,834 samples, 64.62%)</title><rect x="35.3418%" y="309" width="64.6230%" height="15" fill="rgb(250,205,27)" fg:x="1003" fg:w="1834"/><text x="35.5918%" y="319.50">web-server`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>web-server`std::sys_common::thread_info::set (1 samples, 0.04%)</title><rect x="99.9295%" y="293" width="0.0352%" height="15" fill="rgb(210,80,43)" fg:x="2836" fg:w="1"/><text x="100.1795%" y="303.50"></text></g><g><title>all (2,838 samples, 100%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(247,160,36)" fg:x="0" fg:w="2838"/><text x="0.2500%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (2,478 samples, 87.32%)</title><rect x="12.6850%" y="341" width="87.3150%" height="15" fill="rgb(234,13,49)" fg:x="360" fg:w="2478"/><text x="12.9350%" y="351.50">libsystem_pthread.dylib`thread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.04%)</title><rect x="99.9648%" y="325" width="0.0352%" height="15" fill="rgb(234,122,0)" fg:x="2837" fg:w="1"/><text x="100.2148%" y="335.50"></text></g></svg></svg>