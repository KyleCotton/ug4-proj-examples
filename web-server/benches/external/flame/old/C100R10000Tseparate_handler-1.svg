<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="502" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="485.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="485.00"> </text><svg id="frames" x="10" width="1180" total_samples="2390"><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="0.0000%" y="341" width="0.0418%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="0.0837%" y="325" width="0.0837%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="2"/><text x="0.3337%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.08%)</title><rect x="0.0837%" y="309" width="0.0837%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="2"/><text x="0.3337%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.08%)</title><rect x="0.0837%" y="293" width="0.0837%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="2"/><text x="0.3337%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.08%)</title><rect x="0.0837%" y="277" width="0.0837%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="2"/><text x="0.3337%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__accept (83 samples, 3.47%)</title><rect x="0.3347%" y="293" width="3.4728%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="83"/><text x="0.5847%" y="303.50">lib..</text></g><g><title>web-server`&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 3.89%)</title><rect x="0.1674%" y="325" width="3.8912%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="93"/><text x="0.4174%" y="335.50">web-..</text></g><g><title>web-server`std::net::tcp::TcpListener::accept (93 samples, 3.89%)</title><rect x="0.1674%" y="309" width="3.8912%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="93"/><text x="0.4174%" y="319.50">web-..</text></g><g><title>web-server`std::sys::unix::net::Socket::accept (6 samples, 0.25%)</title><rect x="3.8075%" y="293" width="0.2510%" height="15" fill="rgb(218,30,26)" fg:x="91" fg:w="6"/><text x="4.0575%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (6 samples, 0.25%)</title><rect x="3.8075%" y="277" width="0.2510%" height="15" fill="rgb(220,122,19)" fg:x="91" fg:w="6"/><text x="4.0575%" y="287.50"></text></g><g><title>web-server`std::net::tcp::TcpListener::bind (1 samples, 0.04%)</title><rect x="4.0586%" y="325" width="0.0418%" height="15" fill="rgb(250,228,42)" fg:x="97" fg:w="1"/><text x="4.3086%" y="335.50"></text></g><g><title>web-server`&lt;str as std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (1 samples, 0.04%)</title><rect x="4.0586%" y="309" width="0.0418%" height="15" fill="rgb(240,193,28)" fg:x="97" fg:w="1"/><text x="4.3086%" y="319.50"></text></g><g><title>web-server`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (1 samples, 0.04%)</title><rect x="4.0586%" y="293" width="0.0418%" height="15" fill="rgb(216,20,37)" fg:x="97" fg:w="1"/><text x="4.3086%" y="303.50"></text></g><g><title>web-server`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (1 samples, 0.04%)</title><rect x="4.0586%" y="277" width="0.0418%" height="15" fill="rgb(206,188,39)" fg:x="97" fg:w="1"/><text x="4.3086%" y="287.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (1 samples, 0.04%)</title><rect x="4.0586%" y="261" width="0.0418%" height="15" fill="rgb(217,207,13)" fg:x="97" fg:w="1"/><text x="4.3086%" y="271.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo (1 samples, 0.04%)</title><rect x="4.0586%" y="245" width="0.0418%" height="15" fill="rgb(231,73,38)" fg:x="97" fg:w="1"/><text x="4.3086%" y="255.50"></text></g><g><title>libsystem_info.dylib`_gai_sort_list (1 samples, 0.04%)</title><rect x="4.0586%" y="229" width="0.0418%" height="15" fill="rgb(225,20,46)" fg:x="97" fg:w="1"/><text x="4.3086%" y="239.50"></text></g><g><title>libsystem_c.dylib`_qsort (1 samples, 0.04%)</title><rect x="4.0586%" y="213" width="0.0418%" height="15" fill="rgb(210,31,41)" fg:x="97" fg:w="1"/><text x="4.3086%" y="223.50"></text></g><g><title>libsystem_c.dylib`_isort (1 samples, 0.04%)</title><rect x="4.0586%" y="197" width="0.0418%" height="15" fill="rgb(221,200,47)" fg:x="97" fg:w="1"/><text x="4.3086%" y="207.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare (1 samples, 0.04%)</title><rect x="4.0586%" y="181" width="0.0418%" height="15" fill="rgb(226,26,5)" fg:x="97" fg:w="1"/><text x="4.3086%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.04%)</title><rect x="4.0586%" y="165" width="0.0418%" height="15" fill="rgb(249,33,26)" fg:x="97" fg:w="1"/><text x="4.3086%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.04%)</title><rect x="4.0586%" y="149" width="0.0418%" height="15" fill="rgb(235,183,28)" fg:x="97" fg:w="1"/><text x="4.3086%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.04%)</title><rect x="4.0586%" y="133" width="0.0418%" height="15" fill="rgb(221,5,38)" fg:x="97" fg:w="1"/><text x="4.3086%" y="143.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare_init_once (1 samples, 0.04%)</title><rect x="4.0586%" y="117" width="0.0418%" height="15" fill="rgb(247,18,42)" fg:x="97" fg:w="1"/><text x="4.3086%" y="127.50"></text></g><g><title>libsystem_trace.dylib`os_log_create (1 samples, 0.04%)</title><rect x="4.0586%" y="101" width="0.0418%" height="15" fill="rgb(241,131,45)" fg:x="97" fg:w="1"/><text x="4.3086%" y="111.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.04%)</title><rect x="4.0586%" y="85" width="0.0418%" height="15" fill="rgb(249,31,29)" fg:x="97" fg:w="1"/><text x="4.3086%" y="95.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.04%)</title><rect x="4.0586%" y="69" width="0.0418%" height="15" fill="rgb(225,111,53)" fg:x="97" fg:w="1"/><text x="4.3086%" y="79.50"></text></g><g><title>libsystem_trace.dylib`_os_trace_init_slow (1 samples, 0.04%)</title><rect x="4.0586%" y="53" width="0.0418%" height="15" fill="rgb(238,160,17)" fg:x="97" fg:w="1"/><text x="4.3086%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__sysctl (1 samples, 0.04%)</title><rect x="4.0586%" y="37" width="0.0418%" height="15" fill="rgb(214,148,48)" fg:x="97" fg:w="1"/><text x="4.3086%" y="47.50"></text></g><g><title>0x1 (108 samples, 4.52%)</title><rect x="0.0000%" y="437" width="4.5188%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="108"/><text x="0.2500%" y="447.50">0x1</text></g><g><title>libdyld.dylib`start (108 samples, 4.52%)</title><rect x="0.0000%" y="421" width="4.5188%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="108"/><text x="0.2500%" y="431.50">libdy..</text></g><g><title>web-server`main (108 samples, 4.52%)</title><rect x="0.0000%" y="405" width="4.5188%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="108"/><text x="0.2500%" y="415.50">web-s..</text></g><g><title>web-server`std::rt::lang_start_internal (108 samples, 4.52%)</title><rect x="0.0000%" y="389" width="4.5188%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="108"/><text x="0.2500%" y="399.50">web-s..</text></g><g><title>web-server`std::rt::lang_start::_{{closure}} (108 samples, 4.52%)</title><rect x="0.0000%" y="373" width="4.5188%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="108"/><text x="0.2500%" y="383.50">web-s..</text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (108 samples, 4.52%)</title><rect x="0.0000%" y="357" width="4.5188%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="108"/><text x="0.2500%" y="367.50">web-s..</text></g><g><title>web-server`web_server::web_server::WebServer::start_with_separate_handler (107 samples, 4.48%)</title><rect x="0.0418%" y="341" width="4.4770%" height="15" fill="rgb(233,36,39)" fg:x="1" fg:w="107"/><text x="0.2918%" y="351.50">web-s..</text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (10 samples, 0.42%)</title><rect x="4.1004%" y="325" width="0.4184%" height="15" fill="rgb(226,3,54)" fg:x="98" fg:w="10"/><text x="4.3504%" y="335.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (10 samples, 0.42%)</title><rect x="4.1004%" y="309" width="0.4184%" height="15" fill="rgb(245,192,40)" fg:x="98" fg:w="10"/><text x="4.3504%" y="319.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (7 samples, 0.29%)</title><rect x="4.2259%" y="293" width="0.2929%" height="15" fill="rgb(238,167,29)" fg:x="101" fg:w="7"/><text x="4.4759%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (7 samples, 0.29%)</title><rect x="4.2259%" y="277" width="0.2929%" height="15" fill="rgb(232,182,51)" fg:x="101" fg:w="7"/><text x="4.4759%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (162 samples, 6.78%)</title><rect x="4.5188%" y="437" width="6.7782%" height="15" fill="rgb(231,60,39)" fg:x="108" fg:w="162"/><text x="4.7688%" y="447.50">libsystem..</text></g><g><title>libsystem_kernel.dylib`__thread_selfid (16 samples, 0.67%)</title><rect x="19.6234%" y="421" width="0.6695%" height="15" fill="rgb(208,69,12)" fg:x="469" fg:w="16"/><text x="19.8734%" y="431.50"></text></g><g><title>libsystem_c.dylib`sysconf (3 samples, 0.13%)</title><rect x="20.5858%" y="405" width="0.1255%" height="15" fill="rgb(235,93,37)" fg:x="492" fg:w="3"/><text x="20.8358%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__disable_threadsignal (9 samples, 0.38%)</title><rect x="20.7113%" y="405" width="0.3766%" height="15" fill="rgb(213,116,39)" fg:x="495" fg:w="9"/><text x="20.9613%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (72 samples, 3.01%)</title><rect x="21.0879%" y="405" width="3.0126%" height="15" fill="rgb(222,207,29)" fg:x="504" fg:w="72"/><text x="21.3379%" y="415.50">lib..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (21 samples, 0.88%)</title><rect x="24.1004%" y="405" width="0.8787%" height="15" fill="rgb(206,96,30)" fg:x="576" fg:w="21"/><text x="24.3504%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`munmap (1 samples, 0.04%)</title><rect x="24.9791%" y="405" width="0.0418%" height="15" fill="rgb(218,138,4)" fg:x="597" fg:w="1"/><text x="25.2291%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_finalize (1 samples, 0.04%)</title><rect x="25.0628%" y="389" width="0.0418%" height="15" fill="rgb(250,191,14)" fg:x="599" fg:w="1"/><text x="25.3128%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.04%)</title><rect x="25.1046%" y="389" width="0.0418%" height="15" fill="rgb(239,60,40)" fg:x="600" fg:w="1"/><text x="25.3546%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="25.1464%" y="389" width="0.0418%" height="15" fill="rgb(206,27,48)" fg:x="601" fg:w="1"/><text x="25.3964%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.04%)</title><rect x="25.3975%" y="357" width="0.0418%" height="15" fill="rgb(225,35,8)" fg:x="607" fg:w="1"/><text x="25.6475%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.17%)</title><rect x="25.5230%" y="341" width="0.1674%" height="15" fill="rgb(250,213,24)" fg:x="610" fg:w="4"/><text x="25.7730%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.13%)</title><rect x="25.5649%" y="325" width="0.1255%" height="15" fill="rgb(247,123,22)" fg:x="611" fg:w="3"/><text x="25.8149%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.13%)</title><rect x="25.5649%" y="309" width="0.1255%" height="15" fill="rgb(231,138,38)" fg:x="611" fg:w="3"/><text x="25.8149%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.08%)</title><rect x="26.0251%" y="309" width="0.0837%" height="15" fill="rgb(231,145,46)" fg:x="622" fg:w="2"/><text x="26.2751%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.46%)</title><rect x="25.6904%" y="341" width="0.4603%" height="15" fill="rgb(251,118,11)" fg:x="614" fg:w="11"/><text x="25.9404%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.29%)</title><rect x="25.8577%" y="325" width="0.2929%" height="15" fill="rgb(217,147,25)" fg:x="618" fg:w="7"/><text x="26.1077%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="26.1088%" y="309" width="0.0418%" height="15" fill="rgb(247,81,37)" fg:x="624" fg:w="1"/><text x="26.3588%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.04%)</title><rect x="26.1506%" y="341" width="0.0418%" height="15" fill="rgb(209,12,38)" fg:x="625" fg:w="1"/><text x="26.4006%" y="351.50"></text></g><g><title>web-server`DYLD-STUB$$pthread_mutex_destroy (1 samples, 0.04%)</title><rect x="26.1925%" y="341" width="0.0418%" height="15" fill="rgb(227,1,9)" fg:x="626" fg:w="1"/><text x="26.4425%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="26.2343%" y="325" width="0.0418%" height="15" fill="rgb(248,47,43)" fg:x="627" fg:w="1"/><text x="26.4843%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.29%)</title><rect x="26.2762%" y="325" width="0.2929%" height="15" fill="rgb(221,10,30)" fg:x="628" fg:w="7"/><text x="26.5262%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="26.5272%" y="309" width="0.0418%" height="15" fill="rgb(210,229,1)" fg:x="634" fg:w="1"/><text x="26.7772%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="26.5272%" y="293" width="0.0418%" height="15" fill="rgb(222,148,37)" fg:x="634" fg:w="1"/><text x="26.7772%" y="303.50"></text></g><g><title>web-server`alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.42%)</title><rect x="26.2343%" y="341" width="0.4184%" height="15" fill="rgb(234,67,33)" fg:x="627" fg:w="10"/><text x="26.4843%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (2 samples, 0.08%)</title><rect x="26.5690%" y="325" width="0.0837%" height="15" fill="rgb(247,98,35)" fg:x="635" fg:w="2"/><text x="26.8190%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_finalize_list (34 samples, 1.42%)</title><rect x="25.3975%" y="373" width="1.4226%" height="15" fill="rgb(247,138,52)" fg:x="607" fg:w="34"/><text x="25.6475%" y="383.50"></text></g><g><title>web-server`std::sys::unix::thread_local_dtor::register_dtor::run_dtors (33 samples, 1.38%)</title><rect x="25.4393%" y="357" width="1.3808%" height="15" fill="rgb(213,79,30)" fg:x="608" fg:w="33"/><text x="25.6893%" y="367.50"></text></g><g><title>web-server`std::sys_common::thread_info::THREAD_INFO::__getit::destroy (4 samples, 0.17%)</title><rect x="26.6527%" y="341" width="0.1674%" height="15" fill="rgb(246,177,23)" fg:x="637" fg:w="4"/><text x="26.9027%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="26.8201%" y="373" width="0.0418%" height="15" fill="rgb(230,62,27)" fg:x="641" fg:w="1"/><text x="27.0701%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.17%)</title><rect x="26.8619%" y="373" width="0.1674%" height="15" fill="rgb(216,154,8)" fg:x="642" fg:w="4"/><text x="27.1119%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.13%)</title><rect x="26.9038%" y="357" width="0.1255%" height="15" fill="rgb(244,35,45)" fg:x="643" fg:w="3"/><text x="27.1538%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (49 samples, 2.05%)</title><rect x="25.0209%" y="405" width="2.0502%" height="15" fill="rgb(251,115,12)" fg:x="598" fg:w="49"/><text x="25.2709%" y="415.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (45 samples, 1.88%)</title><rect x="25.1883%" y="389" width="1.8828%" height="15" fill="rgb(240,54,50)" fg:x="602" fg:w="45"/><text x="25.4383%" y="399.50">l..</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.04%)</title><rect x="27.0293%" y="373" width="0.0418%" height="15" fill="rgb(233,84,52)" fg:x="646" fg:w="1"/><text x="27.2793%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_setcancelstate_exit (1 samples, 0.04%)</title><rect x="27.0711%" y="405" width="0.0418%" height="15" fill="rgb(207,117,47)" fg:x="647" fg:w="1"/><text x="27.3211%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_terminate_invoke (1 samples, 0.04%)</title><rect x="27.1130%" y="405" width="0.0418%" height="15" fill="rgb(249,43,39)" fg:x="648" fg:w="1"/><text x="27.3630%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (100 samples, 4.18%)</title><rect x="27.1548%" y="373" width="4.1841%" height="15" fill="rgb(209,38,44)" fg:x="649" fg:w="100"/><text x="27.4048%" y="383.50">libsy..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (2 samples, 0.08%)</title><rect x="31.3389%" y="373" width="0.0837%" height="15" fill="rgb(236,212,23)" fg:x="749" fg:w="2"/><text x="31.5889%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (11 samples, 0.46%)</title><rect x="31.5063%" y="341" width="0.4603%" height="15" fill="rgb(242,79,21)" fg:x="753" fg:w="11"/><text x="31.7563%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_join$NOCANCEL (116 samples, 4.85%)</title><rect x="27.1548%" y="405" width="4.8536%" height="15" fill="rgb(211,96,35)" fg:x="649" fg:w="116"/><text x="27.4048%" y="415.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (116 samples, 4.85%)</title><rect x="27.1548%" y="389" width="4.8536%" height="15" fill="rgb(253,215,40)" fg:x="649" fg:w="116"/><text x="27.4048%" y="399.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (14 samples, 0.59%)</title><rect x="31.4226%" y="373" width="0.5858%" height="15" fill="rgb(211,81,21)" fg:x="751" fg:w="14"/><text x="31.6726%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mig_dealloc_reply_port (12 samples, 0.50%)</title><rect x="31.5063%" y="357" width="0.5021%" height="15" fill="rgb(208,190,38)" fg:x="753" fg:w="12"/><text x="31.7563%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_port_mod_refs (1 samples, 0.04%)</title><rect x="31.9665%" y="341" width="0.0418%" height="15" fill="rgb(235,213,38)" fg:x="764" fg:w="1"/><text x="32.2165%" y="351.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.04%)</title><rect x="32.0084%" y="405" width="0.0418%" height="15" fill="rgb(237,122,38)" fg:x="765" fg:w="1"/><text x="32.2584%" y="415.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (3 samples, 0.13%)</title><rect x="32.1339%" y="389" width="0.1255%" height="15" fill="rgb(244,218,35)" fg:x="768" fg:w="3"/><text x="32.3839%" y="399.50"></text></g><g><title>libsystem_c.dylib`sysconf (5 samples, 0.21%)</title><rect x="32.2594%" y="389" width="0.2092%" height="15" fill="rgb(240,68,47)" fg:x="771" fg:w="5"/><text x="32.5094%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (59 samples, 2.47%)</title><rect x="32.4686%" y="389" width="2.4686%" height="15" fill="rgb(210,16,53)" fg:x="776" fg:w="59"/><text x="32.7186%" y="399.50">li..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (38 samples, 1.59%)</title><rect x="34.9372%" y="389" width="1.5900%" height="15" fill="rgb(235,124,12)" fg:x="835" fg:w="38"/><text x="35.1872%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="36.5272%" y="389" width="0.0418%" height="15" fill="rgb(224,169,11)" fg:x="873" fg:w="1"/><text x="36.7772%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.13%)</title><rect x="36.5690%" y="389" width="0.1255%" height="15" fill="rgb(250,166,2)" fg:x="874" fg:w="3"/><text x="36.8190%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.13%)</title><rect x="36.5690%" y="373" width="0.1255%" height="15" fill="rgb(242,216,29)" fg:x="874" fg:w="3"/><text x="36.8190%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.13%)</title><rect x="36.5690%" y="357" width="0.1255%" height="15" fill="rgb(230,116,27)" fg:x="874" fg:w="3"/><text x="36.8190%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.17%)</title><rect x="36.6946%" y="389" width="0.1674%" height="15" fill="rgb(228,99,48)" fg:x="877" fg:w="4"/><text x="36.9446%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.13%)</title><rect x="36.7364%" y="373" width="0.1255%" height="15" fill="rgb(253,11,6)" fg:x="878" fg:w="3"/><text x="36.9864%" y="383.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (1 samples, 0.04%)</title><rect x="37.0293%" y="373" width="0.0418%" height="15" fill="rgb(247,143,39)" fg:x="885" fg:w="1"/><text x="37.2793%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.21%)</title><rect x="37.0711%" y="373" width="0.2092%" height="15" fill="rgb(236,97,10)" fg:x="886" fg:w="5"/><text x="37.3211%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="37.2803%" y="373" width="0.0418%" height="15" fill="rgb(233,208,19)" fg:x="891" fg:w="1"/><text x="37.5303%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.08%)</title><rect x="37.3222%" y="373" width="0.0837%" height="15" fill="rgb(216,164,2)" fg:x="892" fg:w="2"/><text x="37.5722%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="37.3640%" y="357" width="0.0418%" height="15" fill="rgb(220,129,5)" fg:x="893" fg:w="1"/><text x="37.6140%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="37.3640%" y="341" width="0.0418%" height="15" fill="rgb(242,17,10)" fg:x="893" fg:w="1"/><text x="37.6140%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="37.4059%" y="373" width="0.0418%" height="15" fill="rgb(242,107,0)" fg:x="894" fg:w="1"/><text x="37.6559%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stackaddr_np (1 samples, 0.04%)</title><rect x="37.4477%" y="373" width="0.0418%" height="15" fill="rgb(251,28,31)" fg:x="895" fg:w="1"/><text x="37.6977%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stacksize_np (1 samples, 0.04%)</title><rect x="37.4895%" y="373" width="0.0418%" height="15" fill="rgb(233,223,10)" fg:x="896" fg:w="1"/><text x="37.7395%" y="383.50"></text></g><g><title>web-server`DYLD-STUB$$_tlv_atexit (1 samples, 0.04%)</title><rect x="37.5314%" y="373" width="0.0418%" height="15" fill="rgb(215,21,27)" fg:x="897" fg:w="1"/><text x="37.7814%" y="383.50"></text></g><g><title>web-server`__rdl_dealloc (1 samples, 0.04%)</title><rect x="37.5732%" y="373" width="0.0418%" height="15" fill="rgb(232,23,21)" fg:x="898" fg:w="1"/><text x="37.8232%" y="383.50"></text></g><g><title>web-server`std::sys::unix::thread::guard::current (1 samples, 0.04%)</title><rect x="37.6151%" y="373" width="0.0418%" height="15" fill="rgb(244,5,23)" fg:x="899" fg:w="1"/><text x="37.8651%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (45 samples, 1.88%)</title><rect x="37.7406%" y="357" width="1.8828%" height="15" fill="rgb(226,81,46)" fg:x="902" fg:w="45"/><text x="37.9906%" y="367.50">l..</text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.17%)</title><rect x="39.6234%" y="357" width="0.1674%" height="15" fill="rgb(247,70,30)" fg:x="947" fg:w="4"/><text x="39.8734%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.13%)</title><rect x="39.6653%" y="341" width="0.1255%" height="15" fill="rgb(212,68,19)" fg:x="948" fg:w="3"/><text x="39.9153%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.13%)</title><rect x="39.6653%" y="325" width="0.1255%" height="15" fill="rgb(240,187,13)" fg:x="948" fg:w="3"/><text x="39.9153%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="39.8745%" y="341" width="0.0418%" height="15" fill="rgb(223,113,26)" fg:x="953" fg:w="1"/><text x="40.1245%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.21%)</title><rect x="39.7908%" y="357" width="0.2092%" height="15" fill="rgb(206,192,2)" fg:x="951" fg:w="5"/><text x="40.0408%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.08%)</title><rect x="39.9163%" y="341" width="0.0837%" height="15" fill="rgb(241,108,4)" fg:x="954" fg:w="2"/><text x="40.1663%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="39.9582%" y="325" width="0.0418%" height="15" fill="rgb(247,173,49)" fg:x="955" fg:w="1"/><text x="40.2082%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.04%)</title><rect x="40.0000%" y="357" width="0.0418%" height="15" fill="rgb(224,114,35)" fg:x="956" fg:w="1"/><text x="40.2500%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="40.0418%" y="357" width="0.0418%" height="15" fill="rgb(245,159,27)" fg:x="957" fg:w="1"/><text x="40.2918%" y="367.50"></text></g><g><title>web-server`&lt;T as core::any::Any&gt;::type_id (2 samples, 0.08%)</title><rect x="40.0837%" y="357" width="0.0837%" height="15" fill="rgb(245,172,44)" fg:x="958" fg:w="2"/><text x="40.3337%" y="367.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="40.1674%" y="357" width="0.0418%" height="15" fill="rgb(236,23,11)" fg:x="960" fg:w="1"/><text x="40.4174%" y="367.50"></text></g><g><title>web-server`__rdl_dealloc (2 samples, 0.08%)</title><rect x="40.2092%" y="357" width="0.0837%" height="15" fill="rgb(205,117,38)" fg:x="961" fg:w="2"/><text x="40.4592%" y="367.50"></text></g><g><title>web-server`__rust_alloc (1 samples, 0.04%)</title><rect x="40.2929%" y="357" width="0.0418%" height="15" fill="rgb(237,72,25)" fg:x="963" fg:w="1"/><text x="40.5429%" y="367.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="40.3347%" y="341" width="0.0837%" height="15" fill="rgb(244,70,9)" fg:x="964" fg:w="2"/><text x="40.5847%" y="351.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="40.4184%" y="325" width="0.0418%" height="15" fill="rgb(217,125,39)" fg:x="966" fg:w="1"/><text x="40.6684%" y="335.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (2 samples, 0.08%)</title><rect x="40.4184%" y="341" width="0.0837%" height="15" fill="rgb(235,36,10)" fg:x="966" fg:w="2"/><text x="40.6684%" y="351.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (1 samples, 0.04%)</title><rect x="40.4603%" y="325" width="0.0418%" height="15" fill="rgb(251,123,47)" fg:x="967" fg:w="1"/><text x="40.7103%" y="335.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::unary::transform_send&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},web_server::request::Request&gt;::{{closure}}&gt; (5 samples, 0.21%)</title><rect x="40.3347%" y="357" width="0.2092%" height="15" fill="rgb(221,13,13)" fg:x="964" fg:w="5"/><text x="40.5847%" y="367.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (1 samples, 0.04%)</title><rect x="40.5021%" y="341" width="0.0418%" height="15" fill="rgb(238,131,9)" fg:x="968" fg:w="1"/><text x="40.7521%" y="351.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (2 samples, 0.08%)</title><rect x="40.5439%" y="357" width="0.0837%" height="15" fill="rgb(211,50,8)" fg:x="969" fg:w="2"/><text x="40.7939%" y="367.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="40.5858%" y="341" width="0.0418%" height="15" fill="rgb(245,182,24)" fg:x="970" fg:w="1"/><text x="40.8358%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.33%)</title><rect x="40.9205%" y="341" width="0.3347%" height="15" fill="rgb(242,14,37)" fg:x="978" fg:w="8"/><text x="41.1705%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.29%)</title><rect x="40.9623%" y="325" width="0.2929%" height="15" fill="rgb(246,228,12)" fg:x="979" fg:w="7"/><text x="41.2123%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.25%)</title><rect x="41.0042%" y="309" width="0.2510%" height="15" fill="rgb(213,55,15)" fg:x="980" fg:w="6"/><text x="41.2542%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="41.2134%" y="293" width="0.0418%" height="15" fill="rgb(209,9,3)" fg:x="985" fg:w="1"/><text x="41.4634%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="41.2134%" y="277" width="0.0418%" height="15" fill="rgb(230,59,30)" fg:x="985" fg:w="1"/><text x="41.4634%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.17%)</title><rect x="41.2552%" y="341" width="0.1674%" height="15" fill="rgb(209,121,21)" fg:x="986" fg:w="4"/><text x="41.5052%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.13%)</title><rect x="41.2971%" y="325" width="0.1255%" height="15" fill="rgb(220,109,13)" fg:x="987" fg:w="3"/><text x="41.5471%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.13%)</title><rect x="41.2971%" y="309" width="0.1255%" height="15" fill="rgb(232,18,1)" fg:x="987" fg:w="3"/><text x="41.5471%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.08%)</title><rect x="41.4226%" y="341" width="0.0837%" height="15" fill="rgb(215,41,42)" fg:x="990" fg:w="2"/><text x="41.6726%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="41.4644%" y="325" width="0.0418%" height="15" fill="rgb(224,123,36)" fg:x="991" fg:w="1"/><text x="41.7144%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="41.5063%" y="341" width="0.0418%" height="15" fill="rgb(240,125,3)" fg:x="992" fg:w="1"/><text x="41.7563%" y="351.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::binary::FnBoxClone&gt;::clone_box (2 samples, 0.08%)</title><rect x="41.5481%" y="341" width="0.0837%" height="15" fill="rgb(205,98,50)" fg:x="993" fg:w="2"/><text x="41.7981%" y="351.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (1 samples, 0.04%)</title><rect x="41.6318%" y="341" width="0.0418%" height="15" fill="rgb(205,185,37)" fg:x="995" fg:w="1"/><text x="41.8818%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.13%)</title><rect x="41.7992%" y="293" width="0.1255%" height="15" fill="rgb(238,207,15)" fg:x="999" fg:w="3"/><text x="42.0492%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="41.8828%" y="277" width="0.0418%" height="15" fill="rgb(213,199,42)" fg:x="1001" fg:w="1"/><text x="42.1328%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.17%)</title><rect x="41.7992%" y="309" width="0.1674%" height="15" fill="rgb(235,201,11)" fg:x="999" fg:w="4"/><text x="42.0492%" y="319.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.04%)</title><rect x="41.9247%" y="293" width="0.0418%" height="15" fill="rgb(207,46,11)" fg:x="1002" fg:w="1"/><text x="42.1747%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.25%)</title><rect x="41.7573%" y="325" width="0.2510%" height="15" fill="rgb(241,35,35)" fg:x="998" fg:w="6"/><text x="42.0073%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="41.9665%" y="309" width="0.0418%" height="15" fill="rgb(243,32,47)" fg:x="1003" fg:w="1"/><text x="42.2165%" y="319.50"></text></g><g><title>web-server`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="42.2594%" y="309" width="0.0418%" height="15" fill="rgb(247,202,23)" fg:x="1010" fg:w="1"/><text x="42.5094%" y="319.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.71%)</title><rect x="41.6736%" y="341" width="0.7113%" height="15" fill="rgb(219,102,11)" fg:x="996" fg:w="17"/><text x="41.9236%" y="351.50"></text></g><g><title>web-server`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.38%)</title><rect x="42.0084%" y="325" width="0.3766%" height="15" fill="rgb(243,110,44)" fg:x="1004" fg:w="9"/><text x="42.2584%" y="335.50"></text></g><g><title>web-server`hashbrown::map::make_hash (2 samples, 0.08%)</title><rect x="42.3013%" y="309" width="0.0837%" height="15" fill="rgb(222,74,54)" fg:x="1011" fg:w="2"/><text x="42.5513%" y="319.50"></text></g><g><title>web-server`_dyld_private (1 samples, 0.04%)</title><rect x="42.3849%" y="341" width="0.0418%" height="15" fill="rgb(216,99,12)" fg:x="1013" fg:w="1"/><text x="42.6349%" y="351.50"></text></g><g><title>libdyld.dylib`dyld_stub_binder (1 samples, 0.04%)</title><rect x="42.3849%" y="325" width="0.0418%" height="15" fill="rgb(226,22,26)" fg:x="1013" fg:w="1"/><text x="42.6349%" y="335.50"></text></g><g><title>libdyld.dylib`_dyld_fast_stub_entry(void*, long) (1 samples, 0.04%)</title><rect x="42.3849%" y="309" width="0.0418%" height="15" fill="rgb(217,163,10)" fg:x="1013" fg:w="1"/><text x="42.6349%" y="319.50"></text></g><g><title>dyld`dyld::fastBindLazySymbol (1 samples, 0.04%)</title><rect x="42.3849%" y="293" width="0.0418%" height="15" fill="rgb(213,25,53)" fg:x="1013" fg:w="1"/><text x="42.6349%" y="303.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::doBindFastLazySymbol(unsigned int, ImageLoader::LinkContext const&amp;, void (*)(), void (*) (1 samples, 0.04%)</title><rect x="42.3849%" y="277" width="0.0418%" height="15" fill="rgb(252,105,26)" fg:x="1013" fg:w="1"/><text x="42.6349%" y="287.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolve (1 samples, 0.04%)</title><rect x="42.3849%" y="261" width="0.0418%" height="15" fill="rgb(220,39,43)" fg:x="1013" fg:w="1"/><text x="42.6349%" y="271.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolveTwolevel (1 samples, 0.04%)</title><rect x="42.3849%" y="245" width="0.0418%" height="15" fill="rgb(229,68,48)" fg:x="1013" fg:w="1"/><text x="42.6349%" y="255.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolAddress (1 samples, 0.04%)</title><rect x="42.3849%" y="229" width="0.0418%" height="15" fill="rgb(252,8,32)" fg:x="1013" fg:w="1"/><text x="42.6349%" y="239.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.04%)</title><rect x="42.3849%" y="213" width="0.0418%" height="15" fill="rgb(223,20,43)" fg:x="1013" fg:w="1"/><text x="42.6349%" y="223.50"></text></g><g><title>dyld`ImageLoaderMachO::libPath (1 samples, 0.04%)</title><rect x="42.3849%" y="197" width="0.0418%" height="15" fill="rgb(229,81,49)" fg:x="1013" fg:w="1"/><text x="42.6349%" y="207.50"></text></g><g><title>web-server`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="42.4268%" y="341" width="0.0418%" height="15" fill="rgb(236,28,36)" fg:x="1014" fg:w="1"/><text x="42.6768%" y="351.50"></text></g><g><title>web-server`hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="42.4686%" y="341" width="0.0418%" height="15" fill="rgb(249,185,26)" fg:x="1015" fg:w="1"/><text x="42.7186%" y="351.50"></text></g><g><title>web-server`hashbrown::map::make_insert_hash (3 samples, 0.13%)</title><rect x="42.5105%" y="341" width="0.1255%" height="15" fill="rgb(249,174,33)" fg:x="1016" fg:w="3"/><text x="42.7605%" y="351.50"></text></g><g><title>web-server`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="42.5941%" y="325" width="0.0418%" height="15" fill="rgb(233,201,37)" fg:x="1018" fg:w="1"/><text x="42.8441%" y="335.50"></text></g><g><title>web-server`rusty_junctions::bag::Bag&lt;K,V&gt;::add (20 samples, 0.84%)</title><rect x="42.6360%" y="341" width="0.8368%" height="15" fill="rgb(221,78,26)" fg:x="1019" fg:w="20"/><text x="42.8860%" y="351.50"></text></g><g><title>web-server`hashbrown::map::make_hash (20 samples, 0.84%)</title><rect x="42.6360%" y="325" width="0.8368%" height="15" fill="rgb(250,127,30)" fg:x="1019" fg:w="20"/><text x="42.8860%" y="335.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.04%)</title><rect x="43.4728%" y="325" width="0.0418%" height="15" fill="rgb(230,49,44)" fg:x="1039" fg:w="1"/><text x="43.7228%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="43.5146%" y="309" width="0.0418%" height="15" fill="rgb(229,67,23)" fg:x="1040" fg:w="1"/><text x="43.7646%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="43.5146%" y="293" width="0.0418%" height="15" fill="rgb(249,83,47)" fg:x="1040" fg:w="1"/><text x="43.7646%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="43.5146%" y="277" width="0.0418%" height="15" fill="rgb(215,43,3)" fg:x="1040" fg:w="1"/><text x="43.7646%" y="287.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::binary::FnBoxClone&gt;::clone_box (2 samples, 0.08%)</title><rect x="43.5146%" y="325" width="0.0837%" height="15" fill="rgb(238,154,13)" fg:x="1040" fg:w="2"/><text x="43.7646%" y="335.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="43.5565%" y="309" width="0.0418%" height="15" fill="rgb(219,56,2)" fg:x="1041" fg:w="1"/><text x="43.8065%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="43.7238%" y="261" width="0.0418%" height="15" fill="rgb(233,0,4)" fg:x="1045" fg:w="1"/><text x="43.9738%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.21%)</title><rect x="43.5983%" y="309" width="0.2092%" height="15" fill="rgb(235,30,7)" fg:x="1042" fg:w="5"/><text x="43.8483%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.17%)</title><rect x="43.6402%" y="293" width="0.1674%" height="15" fill="rgb(250,79,13)" fg:x="1043" fg:w="4"/><text x="43.8902%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.13%)</title><rect x="43.6820%" y="277" width="0.1255%" height="15" fill="rgb(211,146,34)" fg:x="1044" fg:w="3"/><text x="43.9320%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="43.7657%" y="261" width="0.0418%" height="15" fill="rgb(228,22,38)" fg:x="1046" fg:w="1"/><text x="44.0157%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="43.8075%" y="309" width="0.0418%" height="15" fill="rgb(235,168,5)" fg:x="1047" fg:w="1"/><text x="44.0575%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_setstacksize (1 samples, 0.04%)</title><rect x="43.8494%" y="309" width="0.0418%" height="15" fill="rgb(221,155,16)" fg:x="1048" fg:w="1"/><text x="44.0994%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="43.8912%" y="309" width="0.0418%" height="15" fill="rgb(215,215,53)" fg:x="1049" fg:w="1"/><text x="44.1412%" y="319.50"></text></g><g><title>web-server`__rdl_alloc (1 samples, 0.04%)</title><rect x="43.9331%" y="309" width="0.0418%" height="15" fill="rgb(223,4,10)" fg:x="1050" fg:w="1"/><text x="44.1831%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (44 samples, 1.84%)</title><rect x="44.0586%" y="293" width="1.8410%" height="15" fill="rgb(234,103,6)" fg:x="1053" fg:w="44"/><text x="44.3086%" y="303.50">l..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_no_tsd (1 samples, 0.04%)</title><rect x="45.8996%" y="293" width="0.0418%" height="15" fill="rgb(227,97,0)" fg:x="1097" fg:w="1"/><text x="46.1496%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (26 samples, 1.09%)</title><rect x="47.1967%" y="277" width="1.0879%" height="15" fill="rgb(234,150,53)" fg:x="1128" fg:w="26"/><text x="47.4467%" y="287.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (120 samples, 5.02%)</title><rect x="43.9749%" y="309" width="5.0209%" height="15" fill="rgb(228,201,54)" fg:x="1051" fg:w="120"/><text x="44.2249%" y="319.50">web-se..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (73 samples, 3.05%)</title><rect x="45.9414%" y="293" width="3.0544%" height="15" fill="rgb(222,22,37)" fg:x="1098" fg:w="73"/><text x="46.1914%" y="303.50">lib..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (17 samples, 0.71%)</title><rect x="48.2845%" y="277" width="0.7113%" height="15" fill="rgb(237,53,32)" fg:x="1154" fg:w="17"/><text x="48.5345%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutexattr_init (1 samples, 0.04%)</title><rect x="49.0377%" y="293" width="0.0418%" height="15" fill="rgb(233,25,53)" fg:x="1172" fg:w="1"/><text x="49.2877%" y="303.50"></text></g><g><title>web-server`rusty_junctions::patterns::binary::SendJoinPattern::fire (136 samples, 5.69%)</title><rect x="43.4728%" y="341" width="5.6904%" height="15" fill="rgb(210,40,34)" fg:x="1039" fg:w="136"/><text x="43.7228%" y="351.50">web-ser..</text></g><g><title>web-server`std::thread::spawn (133 samples, 5.56%)</title><rect x="43.5983%" y="325" width="5.5649%" height="15" fill="rgb(241,220,44)" fg:x="1042" fg:w="133"/><text x="43.8483%" y="335.50">web-ser..</text></g><g><title>web-server`std::thread::Thread::new (4 samples, 0.17%)</title><rect x="48.9958%" y="309" width="0.1674%" height="15" fill="rgb(235,28,35)" fg:x="1171" fg:w="4"/><text x="49.2458%" y="319.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (2 samples, 0.08%)</title><rect x="49.0795%" y="293" width="0.0837%" height="15" fill="rgb(210,56,17)" fg:x="1173" fg:w="2"/><text x="49.3295%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="49.1213%" y="277" width="0.0418%" height="15" fill="rgb(224,130,29)" fg:x="1174" fg:w="1"/><text x="49.3713%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="49.1213%" y="261" width="0.0418%" height="15" fill="rgb(235,212,8)" fg:x="1174" fg:w="1"/><text x="49.3713%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="49.1213%" y="245" width="0.0418%" height="15" fill="rgb(223,33,50)" fg:x="1174" fg:w="1"/><text x="49.3713%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="49.1213%" y="229" width="0.0418%" height="15" fill="rgb(219,149,13)" fg:x="1174" fg:w="1"/><text x="49.3713%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="49.2887%" y="325" width="0.0418%" height="15" fill="rgb(250,156,29)" fg:x="1178" fg:w="1"/><text x="49.5387%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="49.3724%" y="261" width="0.0418%" height="15" fill="rgb(216,193,19)" fg:x="1180" fg:w="1"/><text x="49.6224%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="49.3724%" y="309" width="0.0837%" height="15" fill="rgb(216,135,14)" fg:x="1180" fg:w="2"/><text x="49.6224%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.08%)</title><rect x="49.3724%" y="293" width="0.0837%" height="15" fill="rgb(241,47,5)" fg:x="1180" fg:w="2"/><text x="49.6224%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.08%)</title><rect x="49.3724%" y="277" width="0.0837%" height="15" fill="rgb(233,42,35)" fg:x="1180" fg:w="2"/><text x="49.6224%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="49.4142%" y="261" width="0.0418%" height="15" fill="rgb(231,13,6)" fg:x="1181" fg:w="1"/><text x="49.6642%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.04%)</title><rect x="49.4561%" y="309" width="0.0418%" height="15" fill="rgb(207,181,40)" fg:x="1182" fg:w="1"/><text x="49.7061%" y="319.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (6 samples, 0.25%)</title><rect x="49.3305%" y="325" width="0.2510%" height="15" fill="rgb(254,173,49)" fg:x="1179" fg:w="6"/><text x="49.5805%" y="335.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="49.4979%" y="309" width="0.0837%" height="15" fill="rgb(221,1,38)" fg:x="1183" fg:w="2"/><text x="49.7479%" y="319.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (2 samples, 0.08%)</title><rect x="49.5816%" y="325" width="0.0837%" height="15" fill="rgb(206,124,46)" fg:x="1185" fg:w="2"/><text x="49.8316%" y="335.50"></text></g><g><title>web-server`std::thread::Builder::new (1 samples, 0.04%)</title><rect x="49.6653%" y="325" width="0.0418%" height="15" fill="rgb(249,21,11)" fg:x="1187" fg:w="1"/><text x="49.9153%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.17%)</title><rect x="49.7908%" y="309" width="0.1674%" height="15" fill="rgb(222,201,40)" fg:x="1190" fg:w="4"/><text x="50.0408%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.17%)</title><rect x="49.7908%" y="293" width="0.1674%" height="15" fill="rgb(235,61,29)" fg:x="1190" fg:w="4"/><text x="50.0408%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.17%)</title><rect x="49.7908%" y="277" width="0.1674%" height="15" fill="rgb(219,207,3)" fg:x="1190" fg:w="4"/><text x="50.0408%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="49.9163%" y="261" width="0.0418%" height="15" fill="rgb(222,56,46)" fg:x="1193" fg:w="1"/><text x="50.1663%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_destroy (1 samples, 0.04%)</title><rect x="49.9582%" y="309" width="0.0418%" height="15" fill="rgb(239,76,54)" fg:x="1194" fg:w="1"/><text x="50.2082%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.08%)</title><rect x="50.0000%" y="309" width="0.0837%" height="15" fill="rgb(231,124,27)" fg:x="1195" fg:w="2"/><text x="50.2500%" y="319.50"></text></g><g><title>web-server`__rdl_alloc (1 samples, 0.04%)</title><rect x="50.0837%" y="309" width="0.0418%" height="15" fill="rgb(249,195,6)" fg:x="1197" fg:w="1"/><text x="50.3337%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (97 samples, 4.06%)</title><rect x="50.1255%" y="293" width="4.0586%" height="15" fill="rgb(237,174,47)" fg:x="1198" fg:w="97"/><text x="50.3755%" y="303.50">libs..</text></g><g><title>libsystem_kernel.dylib`mach_vm_map (1 samples, 0.04%)</title><rect x="54.1841%" y="293" width="0.0418%" height="15" fill="rgb(206,201,31)" fg:x="1295" fg:w="1"/><text x="54.4341%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="54.2259%" y="293" width="0.0418%" height="15" fill="rgb(231,57,52)" fg:x="1296" fg:w="1"/><text x="54.4759%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="54.2259%" y="277" width="0.0418%" height="15" fill="rgb(248,177,22)" fg:x="1296" fg:w="1"/><text x="54.4759%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="54.2259%" y="261" width="0.0418%" height="15" fill="rgb(215,211,37)" fg:x="1296" fg:w="1"/><text x="54.4759%" y="271.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_no_tsd (1 samples, 0.04%)</title><rect x="54.2678%" y="293" width="0.0418%" height="15" fill="rgb(241,128,51)" fg:x="1297" fg:w="1"/><text x="54.5178%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (61 samples, 2.55%)</title><rect x="57.2385%" y="277" width="2.5523%" height="15" fill="rgb(227,165,31)" fg:x="1368" fg:w="61"/><text x="57.4885%" y="287.50">li..</text></g><g><title>web-server`std::sys::unix::thread::Thread::new (266 samples, 11.13%)</title><rect x="50.1255%" y="309" width="11.1297%" height="15" fill="rgb(228,167,24)" fg:x="1198" fg:w="266"/><text x="50.3755%" y="319.50">web-server`std::..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (166 samples, 6.95%)</title><rect x="54.3096%" y="293" width="6.9456%" height="15" fill="rgb(228,143,12)" fg:x="1298" fg:w="166"/><text x="54.5596%" y="303.50">libsystem..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (35 samples, 1.46%)</title><rect x="59.7908%" y="277" width="1.4644%" height="15" fill="rgb(249,149,8)" fg:x="1429" fg:w="35"/><text x="60.0408%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.04%)</title><rect x="61.3808%" y="245" width="0.0418%" height="15" fill="rgb(243,35,44)" fg:x="1467" fg:w="1"/><text x="61.6308%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.17%)</title><rect x="61.2971%" y="277" width="0.1674%" height="15" fill="rgb(246,89,9)" fg:x="1465" fg:w="4"/><text x="61.5471%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.17%)</title><rect x="61.2971%" y="261" width="0.1674%" height="15" fill="rgb(233,213,13)" fg:x="1465" fg:w="4"/><text x="61.5471%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="61.4226%" y="245" width="0.0418%" height="15" fill="rgb(233,141,41)" fg:x="1468" fg:w="1"/><text x="61.6726%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.21%)</title><rect x="61.2971%" y="293" width="0.2092%" height="15" fill="rgb(239,167,4)" fg:x="1465" fg:w="5"/><text x="61.5471%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="61.4644%" y="277" width="0.0418%" height="15" fill="rgb(209,217,16)" fg:x="1469" fg:w="1"/><text x="61.7144%" y="287.50"></text></g><g><title>web-server`rusty_junctions::patterns::unary::SendJoinPattern::fire (296 samples, 12.38%)</title><rect x="49.1632%" y="341" width="12.3849%" height="15" fill="rgb(219,88,35)" fg:x="1175" fg:w="296"/><text x="49.4132%" y="351.50">web-server`rusty_j..</text></g><g><title>web-server`std::thread::spawn (283 samples, 11.84%)</title><rect x="49.7071%" y="325" width="11.8410%" height="15" fill="rgb(220,193,23)" fg:x="1188" fg:w="283"/><text x="49.9571%" y="335.50">web-server`std::th..</text></g><g><title>web-server`std::thread::Thread::new (7 samples, 0.29%)</title><rect x="61.2552%" y="309" width="0.2929%" height="15" fill="rgb(230,90,52)" fg:x="1464" fg:w="7"/><text x="61.5052%" y="319.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (1 samples, 0.04%)</title><rect x="61.5063%" y="293" width="0.0418%" height="15" fill="rgb(252,106,19)" fg:x="1470" fg:w="1"/><text x="61.7563%" y="303.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::tokens (2 samples, 0.08%)</title><rect x="61.5900%" y="325" width="0.0837%" height="15" fill="rgb(206,74,20)" fg:x="1472" fg:w="2"/><text x="61.8400%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.08%)</title><rect x="61.6736%" y="309" width="0.0837%" height="15" fill="rgb(230,138,44)" fg:x="1474" fg:w="2"/><text x="61.9236%" y="319.50"></text></g><g><title>web-server`__rust_dealloc (1 samples, 0.04%)</title><rect x="61.7573%" y="309" width="0.0418%" height="15" fill="rgb(235,182,43)" fg:x="1476" fg:w="1"/><text x="62.0073%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.21%)</title><rect x="61.8410%" y="293" width="0.2092%" height="15" fill="rgb(242,16,51)" fg:x="1478" fg:w="5"/><text x="62.0910%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.08%)</title><rect x="61.9665%" y="277" width="0.0837%" height="15" fill="rgb(248,9,4)" fg:x="1481" fg:w="2"/><text x="62.2165%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="62.0084%" y="261" width="0.0418%" height="15" fill="rgb(210,31,22)" fg:x="1482" fg:w="1"/><text x="62.2584%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.13%)</title><rect x="62.0502%" y="293" width="0.1255%" height="15" fill="rgb(239,54,39)" fg:x="1483" fg:w="3"/><text x="62.3002%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.08%)</title><rect x="62.0921%" y="277" width="0.0837%" height="15" fill="rgb(230,99,41)" fg:x="1484" fg:w="2"/><text x="62.3421%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.08%)</title><rect x="62.0921%" y="261" width="0.0837%" height="15" fill="rgb(253,106,12)" fg:x="1484" fg:w="2"/><text x="62.3421%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="62.1757%" y="293" width="0.0418%" height="15" fill="rgb(213,46,41)" fg:x="1486" fg:w="1"/><text x="62.4257%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="62.2176%" y="293" width="0.0418%" height="15" fill="rgb(215,133,35)" fg:x="1487" fg:w="1"/><text x="62.4676%" y="303.50"></text></g><g><title>web-server`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="62.2594%" y="293" width="0.0418%" height="15" fill="rgb(213,28,5)" fg:x="1488" fg:w="1"/><text x="62.5094%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.04%)</title><rect x="62.3431%" y="277" width="0.0418%" height="15" fill="rgb(215,77,49)" fg:x="1490" fg:w="1"/><text x="62.5931%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (76 samples, 3.18%)</title><rect x="62.3849%" y="277" width="3.1799%" height="15" fill="rgb(248,100,22)" fg:x="1491" fg:w="76"/><text x="62.6349%" y="287.50">lib..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.13%)</title><rect x="65.8159%" y="261" width="0.1255%" height="15" fill="rgb(208,67,9)" fg:x="1573" fg:w="3"/><text x="66.0659%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (10 samples, 0.42%)</title><rect x="65.5649%" y="277" width="0.4184%" height="15" fill="rgb(219,133,21)" fg:x="1567" fg:w="10"/><text x="65.8149%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.04%)</title><rect x="65.9414%" y="261" width="0.0418%" height="15" fill="rgb(246,46,29)" fg:x="1576" fg:w="1"/><text x="66.1914%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.04%)</title><rect x="65.9833%" y="277" width="0.0418%" height="15" fill="rgb(246,185,52)" fg:x="1577" fg:w="1"/><text x="66.2333%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::WaitToken::wait (103 samples, 4.31%)</title><rect x="61.7992%" y="309" width="4.3096%" height="15" fill="rgb(252,136,11)" fg:x="1477" fg:w="103"/><text x="62.0492%" y="319.50">web-s..</text></g><g><title>web-server`std::thread::park (91 samples, 3.81%)</title><rect x="62.3013%" y="293" width="3.8075%" height="15" fill="rgb(219,138,53)" fg:x="1489" fg:w="91"/><text x="62.5513%" y="303.50">web-..</text></g><g><title>web-server`std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.08%)</title><rect x="66.0251%" y="277" width="0.0837%" height="15" fill="rgb(211,51,23)" fg:x="1578" fg:w="2"/><text x="66.2751%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.08%)</title><rect x="66.1088%" y="293" width="0.0837%" height="15" fill="rgb(247,221,28)" fg:x="1580" fg:w="2"/><text x="66.3588%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="66.1925%" y="293" width="0.0418%" height="15" fill="rgb(251,222,45)" fg:x="1582" fg:w="1"/><text x="66.4425%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="66.1925%" y="277" width="0.0418%" height="15" fill="rgb(217,162,53)" fg:x="1582" fg:w="1"/><text x="66.4425%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="66.1925%" y="261" width="0.0418%" height="15" fill="rgb(229,93,14)" fg:x="1582" fg:w="1"/><text x="66.4425%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="66.1925%" y="245" width="0.0418%" height="15" fill="rgb(209,67,49)" fg:x="1582" fg:w="1"/><text x="66.4425%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::tokens (5 samples, 0.21%)</title><rect x="66.1088%" y="309" width="0.2092%" height="15" fill="rgb(213,87,29)" fg:x="1580" fg:w="5"/><text x="66.3588%" y="319.50"></text></g><g><title>web-server`std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.08%)</title><rect x="66.2343%" y="293" width="0.0837%" height="15" fill="rgb(205,151,52)" fg:x="1583" fg:w="2"/><text x="66.4843%" y="303.50"></text></g><g><title>web-server`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (1 samples, 0.04%)</title><rect x="66.3180%" y="309" width="0.0418%" height="15" fill="rgb(253,215,39)" fg:x="1585" fg:w="1"/><text x="66.5680%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.17%)</title><rect x="66.5272%" y="277" width="0.1674%" height="15" fill="rgb(221,220,41)" fg:x="1590" fg:w="4"/><text x="66.7772%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.17%)</title><rect x="66.5272%" y="261" width="0.1674%" height="15" fill="rgb(218,133,21)" fg:x="1590" fg:w="4"/><text x="66.7772%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.17%)</title><rect x="66.5272%" y="245" width="0.1674%" height="15" fill="rgb(221,193,43)" fg:x="1590" fg:w="4"/><text x="66.7772%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (13 samples, 0.54%)</title><rect x="66.3598%" y="309" width="0.5439%" height="15" fill="rgb(240,128,52)" fg:x="1586" fg:w="13"/><text x="66.6098%" y="319.50"></text></g><g><title>web-server`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (13 samples, 0.54%)</title><rect x="66.3598%" y="293" width="0.5439%" height="15" fill="rgb(253,114,12)" fg:x="1586" fg:w="13"/><text x="66.6098%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.21%)</title><rect x="66.6946%" y="277" width="0.2092%" height="15" fill="rgb(215,223,47)" fg:x="1594" fg:w="5"/><text x="66.9446%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.13%)</title><rect x="66.7782%" y="261" width="0.1255%" height="15" fill="rgb(248,225,23)" fg:x="1596" fg:w="3"/><text x="67.0282%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.08%)</title><rect x="66.8201%" y="245" width="0.0837%" height="15" fill="rgb(250,108,0)" fg:x="1597" fg:w="2"/><text x="67.0701%" y="255.50"></text></g><g><title>web-server`rusty_junctions::controller::Controller::handle_packets (629 samples, 26.32%)</title><rect x="40.6276%" y="357" width="26.3180%" height="15" fill="rgb(228,208,7)" fg:x="971" fg:w="629"/><text x="40.8776%" y="367.50">web-server`rusty_junctions::controller::Co..</text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (129 samples, 5.40%)</title><rect x="61.5481%" y="341" width="5.3975%" height="15" fill="rgb(244,45,10)" fg:x="1471" fg:w="129"/><text x="61.7981%" y="351.50">web-ser..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (126 samples, 5.27%)</title><rect x="61.6736%" y="325" width="5.2720%" height="15" fill="rgb(207,125,25)" fg:x="1474" fg:w="126"/><text x="61.9236%" y="335.50">web-se..</text></g><g><title>web-server`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.04%)</title><rect x="66.9038%" y="309" width="0.0418%" height="15" fill="rgb(210,195,18)" fg:x="1599" fg:w="1"/><text x="67.1538%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.13%)</title><rect x="66.9874%" y="341" width="0.1255%" height="15" fill="rgb(249,80,12)" fg:x="1601" fg:w="3"/><text x="67.2374%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.13%)</title><rect x="66.9874%" y="325" width="0.1255%" height="15" fill="rgb(221,65,9)" fg:x="1601" fg:w="3"/><text x="67.2374%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.13%)</title><rect x="66.9874%" y="309" width="0.1255%" height="15" fill="rgb(235,49,36)" fg:x="1601" fg:w="3"/><text x="67.2374%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.13%)</title><rect x="67.1130%" y="341" width="0.1255%" height="15" fill="rgb(225,32,20)" fg:x="1604" fg:w="3"/><text x="67.3630%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="67.2385%" y="341" width="0.0418%" height="15" fill="rgb(215,141,46)" fg:x="1607" fg:w="1"/><text x="67.4885%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="67.2385%" y="325" width="0.0418%" height="15" fill="rgb(250,160,47)" fg:x="1607" fg:w="1"/><text x="67.4885%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="67.2385%" y="309" width="0.0418%" height="15" fill="rgb(216,222,40)" fg:x="1607" fg:w="1"/><text x="67.4885%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.08%)</title><rect x="67.2803%" y="341" width="0.0837%" height="15" fill="rgb(234,217,39)" fg:x="1608" fg:w="2"/><text x="67.5303%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="67.3222%" y="325" width="0.0418%" height="15" fill="rgb(207,178,40)" fg:x="1609" fg:w="1"/><text x="67.5722%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="67.3222%" y="309" width="0.0418%" height="15" fill="rgb(221,136,13)" fg:x="1609" fg:w="1"/><text x="67.5722%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="67.4059%" y="309" width="0.0418%" height="15" fill="rgb(249,199,10)" fg:x="1611" fg:w="1"/><text x="67.6559%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="67.4059%" y="293" width="0.0418%" height="15" fill="rgb(249,222,13)" fg:x="1611" fg:w="1"/><text x="67.6559%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="67.4059%" y="277" width="0.0418%" height="15" fill="rgb(244,185,38)" fg:x="1611" fg:w="1"/><text x="67.6559%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (13 samples, 0.54%)</title><rect x="67.3640%" y="341" width="0.5439%" height="15" fill="rgb(236,202,9)" fg:x="1610" fg:w="13"/><text x="67.6140%" y="351.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (13 samples, 0.54%)</title><rect x="67.3640%" y="325" width="0.5439%" height="15" fill="rgb(250,229,37)" fg:x="1610" fg:w="13"/><text x="67.6140%" y="335.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (11 samples, 0.46%)</title><rect x="67.4477%" y="309" width="0.4603%" height="15" fill="rgb(206,174,23)" fg:x="1612" fg:w="11"/><text x="67.6977%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (10 samples, 0.42%)</title><rect x="67.4895%" y="293" width="0.4184%" height="15" fill="rgb(211,33,43)" fg:x="1613" fg:w="10"/><text x="67.7395%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (40 samples, 1.67%)</title><rect x="67.9498%" y="293" width="1.6736%" height="15" fill="rgb(245,58,50)" fg:x="1624" fg:w="40"/><text x="68.1998%" y="303.50"></text></g><g><title>libsystem_c.dylib`nanosleep (54 samples, 2.26%)</title><rect x="67.9079%" y="325" width="2.2594%" height="15" fill="rgb(244,68,36)" fg:x="1623" fg:w="54"/><text x="68.1579%" y="335.50">l..</text></g><g><title>libsystem_kernel.dylib`clock_get_time (53 samples, 2.22%)</title><rect x="67.9498%" y="309" width="2.2176%" height="15" fill="rgb(232,229,15)" fg:x="1624" fg:w="53"/><text x="68.1998%" y="319.50">l..</text></g><g><title>libsystem_kernel.dylib`mach_reply_port (13 samples, 0.54%)</title><rect x="69.6234%" y="293" width="0.5439%" height="15" fill="rgb(254,30,23)" fg:x="1664" fg:w="13"/><text x="69.8734%" y="303.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::binary::transform_send::_{{closure}} (107 samples, 4.48%)</title><rect x="66.9456%" y="357" width="4.4770%" height="15" fill="rgb(235,160,14)" fg:x="1600" fg:w="107"/><text x="67.1956%" y="367.50">web-s..</text></g><g><title>web-server`std::thread::sleep (84 samples, 3.51%)</title><rect x="67.9079%" y="341" width="3.5146%" height="15" fill="rgb(212,155,44)" fg:x="1623" fg:w="84"/><text x="68.1579%" y="351.50">web..</text></g><g><title>libsystem_kernel.dylib`__semwait_signal (30 samples, 1.26%)</title><rect x="70.1674%" y="325" width="1.2552%" height="15" fill="rgb(226,2,50)" fg:x="1677" fg:w="30"/><text x="70.4174%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (6 samples, 0.25%)</title><rect x="71.4644%" y="341" width="0.2510%" height="15" fill="rgb(234,177,6)" fg:x="1708" fg:w="6"/><text x="71.7144%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.04%)</title><rect x="71.7155%" y="341" width="0.0418%" height="15" fill="rgb(217,24,9)" fg:x="1714" fg:w="1"/><text x="71.9655%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="71.7573%" y="341" width="0.0418%" height="15" fill="rgb(220,13,46)" fg:x="1715" fg:w="1"/><text x="72.0073%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="71.7573%" y="325" width="0.0418%" height="15" fill="rgb(239,221,27)" fg:x="1715" fg:w="1"/><text x="72.0073%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="71.7573%" y="309" width="0.0418%" height="15" fill="rgb(222,198,25)" fg:x="1715" fg:w="1"/><text x="72.0073%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="71.7573%" y="293" width="0.0418%" height="15" fill="rgb(211,99,13)" fg:x="1715" fg:w="1"/><text x="72.0073%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.04%)</title><rect x="71.7992%" y="341" width="0.0418%" height="15" fill="rgb(232,111,31)" fg:x="1716" fg:w="1"/><text x="72.0492%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.13%)</title><rect x="71.8410%" y="341" width="0.1255%" height="15" fill="rgb(245,82,37)" fg:x="1717" fg:w="3"/><text x="72.0910%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.13%)</title><rect x="71.8410%" y="325" width="0.1255%" height="15" fill="rgb(227,149,46)" fg:x="1717" fg:w="3"/><text x="72.0910%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.13%)</title><rect x="71.8410%" y="309" width="0.1255%" height="15" fill="rgb(218,36,50)" fg:x="1717" fg:w="3"/><text x="72.0910%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.13%)</title><rect x="71.9665%" y="341" width="0.1255%" height="15" fill="rgb(226,80,48)" fg:x="1720" fg:w="3"/><text x="72.2165%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.13%)</title><rect x="71.9665%" y="325" width="0.1255%" height="15" fill="rgb(238,224,15)" fg:x="1720" fg:w="3"/><text x="72.2165%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="72.0921%" y="341" width="0.0418%" height="15" fill="rgb(241,136,10)" fg:x="1723" fg:w="1"/><text x="72.3421%" y="351.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="72.1339%" y="341" width="0.0418%" height="15" fill="rgb(208,32,45)" fg:x="1724" fg:w="1"/><text x="72.3839%" y="351.50"></text></g><g><title>web-server`&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="72.1757%" y="341" width="0.0418%" height="15" fill="rgb(207,135,9)" fg:x="1725" fg:w="1"/><text x="72.4257%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="72.2176%" y="325" width="0.0418%" height="15" fill="rgb(206,86,44)" fg:x="1726" fg:w="1"/><text x="72.4676%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (17 samples, 0.71%)</title><rect x="72.3013%" y="309" width="0.7113%" height="15" fill="rgb(245,177,15)" fg:x="1728" fg:w="17"/><text x="72.5513%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (17 samples, 0.71%)</title><rect x="72.3013%" y="293" width="0.7113%" height="15" fill="rgb(206,64,50)" fg:x="1728" fg:w="17"/><text x="72.5513%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (11 samples, 0.46%)</title><rect x="73.0126%" y="309" width="0.4603%" height="15" fill="rgb(234,36,40)" fg:x="1745" fg:w="11"/><text x="73.2626%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (11 samples, 0.46%)</title><rect x="73.0126%" y="293" width="0.4603%" height="15" fill="rgb(213,64,8)" fg:x="1745" fg:w="11"/><text x="73.2626%" y="303.50"></text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (1 samples, 0.04%)</title><rect x="73.4728%" y="309" width="0.0418%" height="15" fill="rgb(210,75,36)" fg:x="1756" fg:w="1"/><text x="73.7228%" y="319.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (32 samples, 1.34%)</title><rect x="73.5146%" y="293" width="1.3389%" height="15" fill="rgb(229,88,21)" fg:x="1757" fg:w="32"/><text x="73.7646%" y="303.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (32 samples, 1.34%)</title><rect x="73.5146%" y="277" width="1.3389%" height="15" fill="rgb(252,204,47)" fg:x="1757" fg:w="32"/><text x="73.7646%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`write (32 samples, 1.34%)</title><rect x="73.5146%" y="261" width="1.3389%" height="15" fill="rgb(208,77,27)" fg:x="1757" fg:w="32"/><text x="73.7646%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="74.8954%" y="229" width="0.0837%" height="15" fill="rgb(221,76,26)" fg:x="1790" fg:w="2"/><text x="75.1454%" y="239.50"></text></g><g><title>web-server`core::fmt::Formatter::debug_struct (4 samples, 0.17%)</title><rect x="74.8536%" y="277" width="0.1674%" height="15" fill="rgb(225,139,18)" fg:x="1789" fg:w="4"/><text x="75.1036%" y="287.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.13%)</title><rect x="74.8954%" y="261" width="0.1255%" height="15" fill="rgb(230,137,11)" fg:x="1790" fg:w="3"/><text x="75.1454%" y="271.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.13%)</title><rect x="74.8954%" y="245" width="0.1255%" height="15" fill="rgb(212,28,1)" fg:x="1790" fg:w="3"/><text x="75.1454%" y="255.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="74.9791%" y="229" width="0.0418%" height="15" fill="rgb(248,164,17)" fg:x="1792" fg:w="1"/><text x="75.2291%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__getpeername (10 samples, 0.42%)</title><rect x="75.0628%" y="261" width="0.4184%" height="15" fill="rgb(222,171,42)" fg:x="1794" fg:w="10"/><text x="75.3128%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__getsockname (22 samples, 0.92%)</title><rect x="75.4812%" y="261" width="0.9205%" height="15" fill="rgb(243,84,45)" fg:x="1804" fg:w="22"/><text x="75.7312%" y="271.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="76.5272%" y="245" width="0.0418%" height="15" fill="rgb(252,49,23)" fg:x="1829" fg:w="1"/><text x="76.7772%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="76.5690%" y="213" width="0.0418%" height="15" fill="rgb(215,19,7)" fg:x="1830" fg:w="1"/><text x="76.8190%" y="223.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.17%)</title><rect x="76.5690%" y="229" width="0.1674%" height="15" fill="rgb(238,81,41)" fg:x="1830" fg:w="4"/><text x="76.8190%" y="239.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.13%)</title><rect x="76.6109%" y="213" width="0.1255%" height="15" fill="rgb(210,199,37)" fg:x="1831" fg:w="3"/><text x="76.8609%" y="223.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="76.6946%" y="197" width="0.0418%" height="15" fill="rgb(244,192,49)" fg:x="1833" fg:w="1"/><text x="76.9446%" y="207.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="76.8619%" y="181" width="0.0418%" height="15" fill="rgb(226,211,11)" fg:x="1837" fg:w="1"/><text x="77.1119%" y="191.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="76.8619%" y="165" width="0.0418%" height="15" fill="rgb(236,162,54)" fg:x="1837" fg:w="1"/><text x="77.1119%" y="175.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="76.9874%" y="165" width="0.0418%" height="15" fill="rgb(220,229,9)" fg:x="1840" fg:w="1"/><text x="77.2374%" y="175.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="76.9874%" y="149" width="0.0418%" height="15" fill="rgb(250,87,22)" fg:x="1840" fg:w="1"/><text x="77.2374%" y="159.50"></text></g><g><title>web-server`&lt;std::net::ip::Ipv6Addr as core::fmt::Display&gt;::fmt (4 samples, 0.17%)</title><rect x="76.9038%" y="181" width="0.1674%" height="15" fill="rgb(239,43,17)" fg:x="1838" fg:w="4"/><text x="77.1538%" y="191.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="77.0293%" y="165" width="0.0418%" height="15" fill="rgb(231,177,25)" fg:x="1841" fg:w="1"/><text x="77.2793%" y="175.50"></text></g><g><title>web-server`core::fmt::Formatter::pad_integral (1 samples, 0.04%)</title><rect x="77.0711%" y="165" width="0.0418%" height="15" fill="rgb(219,179,1)" fg:x="1842" fg:w="1"/><text x="77.3211%" y="175.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddrV6 as core::fmt::Display&gt;::fmt (10 samples, 0.42%)</title><rect x="76.7364%" y="229" width="0.4184%" height="15" fill="rgb(238,219,53)" fg:x="1834" fg:w="10"/><text x="76.9864%" y="239.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (8 samples, 0.33%)</title><rect x="76.8201%" y="213" width="0.3347%" height="15" fill="rgb(232,167,36)" fg:x="1836" fg:w="8"/><text x="77.0701%" y="223.50"></text></g><g><title>web-server`core::fmt::write (8 samples, 0.33%)</title><rect x="76.8201%" y="197" width="0.3347%" height="15" fill="rgb(244,19,51)" fg:x="1836" fg:w="8"/><text x="77.0701%" y="207.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (2 samples, 0.08%)</title><rect x="77.0711%" y="181" width="0.0837%" height="15" fill="rgb(224,6,22)" fg:x="1842" fg:w="2"/><text x="77.3211%" y="191.50"></text></g><g><title>web-server`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.04%)</title><rect x="77.1130%" y="165" width="0.0418%" height="15" fill="rgb(224,145,5)" fg:x="1843" fg:w="1"/><text x="77.3630%" y="175.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (15 samples, 0.63%)</title><rect x="76.5690%" y="245" width="0.6276%" height="15" fill="rgb(234,130,49)" fg:x="1830" fg:w="15"/><text x="76.8190%" y="255.50"></text></g><g><title>web-server`core::fmt::num::_&lt;impl core::fmt::Debug for i32&gt;::fmt (1 samples, 0.04%)</title><rect x="77.1548%" y="229" width="0.0418%" height="15" fill="rgb(254,6,2)" fg:x="1844" fg:w="1"/><text x="77.4048%" y="239.50"></text></g><g><title>web-server`&lt;std::sys_common::net::TcpStream as core::fmt::Debug&gt;::fmt (20 samples, 0.84%)</title><rect x="76.4017%" y="261" width="0.8368%" height="15" fill="rgb(208,96,46)" fg:x="1826" fg:w="20"/><text x="76.6517%" y="271.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::finish (1 samples, 0.04%)</title><rect x="77.1967%" y="245" width="0.0418%" height="15" fill="rgb(239,3,39)" fg:x="1845" fg:w="1"/><text x="77.4467%" y="255.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="77.1967%" y="229" width="0.0418%" height="15" fill="rgb(233,210,1)" fg:x="1845" fg:w="1"/><text x="77.4467%" y="239.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="77.1967%" y="213" width="0.0418%" height="15" fill="rgb(244,137,37)" fg:x="1845" fg:w="1"/><text x="77.4467%" y="223.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="77.1967%" y="197" width="0.0418%" height="15" fill="rgb(240,136,2)" fg:x="1845" fg:w="1"/><text x="77.4467%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="77.3222%" y="229" width="0.0418%" height="15" fill="rgb(239,18,37)" fg:x="1848" fg:w="1"/><text x="77.5722%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="77.3640%" y="213" width="0.0418%" height="15" fill="rgb(218,185,22)" fg:x="1849" fg:w="1"/><text x="77.6140%" y="223.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.17%)</title><rect x="77.3222%" y="245" width="0.1674%" height="15" fill="rgb(225,218,4)" fg:x="1848" fg:w="4"/><text x="77.5722%" y="255.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (3 samples, 0.13%)</title><rect x="77.3640%" y="229" width="0.1255%" height="15" fill="rgb(230,182,32)" fg:x="1849" fg:w="3"/><text x="77.6140%" y="239.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (2 samples, 0.08%)</title><rect x="77.4059%" y="213" width="0.0837%" height="15" fill="rgb(242,56,43)" fg:x="1850" fg:w="2"/><text x="77.6559%" y="223.50"></text></g><g><title>web-server`core::unicode::printable::check (3 samples, 0.13%)</title><rect x="77.4895%" y="245" width="0.1255%" height="15" fill="rgb(233,99,24)" fg:x="1852" fg:w="3"/><text x="77.7395%" y="255.50"></text></g><g><title>web-server`&lt;str as core::fmt::Debug&gt;::fmt (10 samples, 0.42%)</title><rect x="77.2385%" y="261" width="0.4184%" height="15" fill="rgb(234,209,42)" fg:x="1846" fg:w="10"/><text x="77.4885%" y="271.50"></text></g><g><title>web-server`core::unicode::unicode_data::grapheme_extend::lookup (1 samples, 0.04%)</title><rect x="77.6151%" y="245" width="0.0418%" height="15" fill="rgb(227,7,12)" fg:x="1855" fg:w="1"/><text x="77.8651%" y="255.50"></text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (68 samples, 2.85%)</title><rect x="74.8536%" y="293" width="2.8452%" height="15" fill="rgb(245,203,43)" fg:x="1789" fg:w="68"/><text x="75.1036%" y="303.50">we..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (64 samples, 2.68%)</title><rect x="75.0209%" y="277" width="2.6778%" height="15" fill="rgb(238,205,33)" fg:x="1793" fg:w="64"/><text x="75.2709%" y="287.50">we..</text></g><g><title>web-server`core::fmt::Write::write_char (1 samples, 0.04%)</title><rect x="77.6569%" y="261" width="0.0418%" height="15" fill="rgb(231,56,7)" fg:x="1856" fg:w="1"/><text x="77.9069%" y="271.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="77.6569%" y="245" width="0.0418%" height="15" fill="rgb(244,186,29)" fg:x="1856" fg:w="1"/><text x="77.9069%" y="255.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="77.6569%" y="229" width="0.0418%" height="15" fill="rgb(234,111,31)" fg:x="1856" fg:w="1"/><text x="77.9069%" y="239.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.04%)</title><rect x="77.6569%" y="213" width="0.0418%" height="15" fill="rgb(241,149,10)" fg:x="1856" fg:w="1"/><text x="77.9069%" y="223.50"></text></g><g><title>web-server`std::io::stdio::_print (132 samples, 5.52%)</title><rect x="72.2176%" y="341" width="5.5230%" height="15" fill="rgb(249,206,44)" fg:x="1726" fg:w="132"/><text x="72.4676%" y="351.50">web-ser..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (131 samples, 5.48%)</title><rect x="72.2594%" y="325" width="5.4812%" height="15" fill="rgb(251,153,30)" fg:x="1727" fg:w="131"/><text x="72.5094%" y="335.50">web-ser..</text></g><g><title>web-server`core::fmt::write (101 samples, 4.23%)</title><rect x="73.5146%" y="309" width="4.2259%" height="15" fill="rgb(239,152,38)" fg:x="1757" fg:w="101"/><text x="73.7646%" y="319.50">web-s..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::finish (1 samples, 0.04%)</title><rect x="77.6987%" y="293" width="0.0418%" height="15" fill="rgb(249,139,47)" fg:x="1857" fg:w="1"/><text x="77.9487%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.13%)</title><rect x="77.9498%" y="309" width="0.1255%" height="15" fill="rgb(244,64,35)" fg:x="1863" fg:w="3"/><text x="78.1998%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.13%)</title><rect x="77.9498%" y="293" width="0.1255%" height="15" fill="rgb(216,46,15)" fg:x="1863" fg:w="3"/><text x="78.1998%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.13%)</title><rect x="77.9498%" y="277" width="0.1255%" height="15" fill="rgb(250,74,19)" fg:x="1863" fg:w="3"/><text x="78.1998%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.13%)</title><rect x="77.9498%" y="261" width="0.1255%" height="15" fill="rgb(249,42,33)" fg:x="1863" fg:w="3"/><text x="78.1998%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.08%)</title><rect x="77.9916%" y="245" width="0.0837%" height="15" fill="rgb(242,149,17)" fg:x="1864" fg:w="2"/><text x="78.2416%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (13 samples, 0.54%)</title><rect x="77.7406%" y="341" width="0.5439%" height="15" fill="rgb(244,29,21)" fg:x="1858" fg:w="13"/><text x="77.9906%" y="351.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (11 samples, 0.46%)</title><rect x="77.8243%" y="325" width="0.4603%" height="15" fill="rgb(220,130,37)" fg:x="1860" fg:w="11"/><text x="78.0743%" y="335.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (5 samples, 0.21%)</title><rect x="78.0753%" y="309" width="0.2092%" height="15" fill="rgb(211,67,2)" fg:x="1866" fg:w="5"/><text x="78.3253%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (5 samples, 0.21%)</title><rect x="78.0753%" y="293" width="0.2092%" height="15" fill="rgb(235,68,52)" fg:x="1866" fg:w="5"/><text x="78.3253%" y="303.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (1 samples, 0.04%)</title><rect x="78.2845%" y="341" width="0.0418%" height="15" fill="rgb(246,142,3)" fg:x="1871" fg:w="1"/><text x="78.5345%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (64 samples, 2.68%)</title><rect x="78.3682%" y="325" width="2.6778%" height="15" fill="rgb(241,25,7)" fg:x="1873" fg:w="64"/><text x="78.6182%" y="335.50">li..</text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.04%)</title><rect x="81.0460%" y="325" width="0.0418%" height="15" fill="rgb(242,119,39)" fg:x="1937" fg:w="1"/><text x="81.2960%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="81.0879%" y="325" width="0.0418%" height="15" fill="rgb(241,98,45)" fg:x="1938" fg:w="1"/><text x="81.3379%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.25%)</title><rect x="81.1297%" y="325" width="0.2510%" height="15" fill="rgb(254,28,30)" fg:x="1939" fg:w="6"/><text x="81.3797%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.21%)</title><rect x="81.1715%" y="309" width="0.2092%" height="15" fill="rgb(241,142,54)" fg:x="1940" fg:w="5"/><text x="81.4215%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.13%)</title><rect x="81.2552%" y="293" width="0.1255%" height="15" fill="rgb(222,85,15)" fg:x="1942" fg:w="3"/><text x="81.5052%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.13%)</title><rect x="81.3808%" y="325" width="0.1255%" height="15" fill="rgb(210,85,47)" fg:x="1945" fg:w="3"/><text x="81.6308%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="81.5063%" y="325" width="0.0418%" height="15" fill="rgb(224,206,25)" fg:x="1948" fg:w="1"/><text x="81.7563%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.08%)</title><rect x="81.5481%" y="325" width="0.0837%" height="15" fill="rgb(243,201,19)" fg:x="1949" fg:w="2"/><text x="81.7981%" y="335.50"></text></g><g><title>web-server`httparse::Request::parse (1 samples, 0.04%)</title><rect x="81.6318%" y="325" width="0.0418%" height="15" fill="rgb(236,59,4)" fg:x="1951" fg:w="1"/><text x="81.8818%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (9 samples, 0.38%)</title><rect x="81.7155%" y="293" width="0.3766%" height="15" fill="rgb(254,179,45)" fg:x="1953" fg:w="9"/><text x="81.9655%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (8 samples, 0.33%)</title><rect x="81.7573%" y="277" width="0.3347%" height="15" fill="rgb(226,14,10)" fg:x="1954" fg:w="8"/><text x="82.0073%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.04%)</title><rect x="82.0921%" y="293" width="0.0418%" height="15" fill="rgb(244,27,41)" fg:x="1962" fg:w="1"/><text x="82.3421%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`write (51 samples, 2.13%)</title><rect x="82.1339%" y="261" width="2.1339%" height="15" fill="rgb(235,35,32)" fg:x="1963" fg:w="51"/><text x="82.3839%" y="271.50">l..</text></g><g><title>web-server`std::io::stdio::_print (63 samples, 2.64%)</title><rect x="81.6736%" y="325" width="2.6360%" height="15" fill="rgb(218,68,31)" fg:x="1952" fg:w="63"/><text x="81.9236%" y="335.50">we..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (62 samples, 2.59%)</title><rect x="81.7155%" y="309" width="2.5941%" height="15" fill="rgb(207,120,37)" fg:x="1953" fg:w="62"/><text x="81.9655%" y="319.50">we..</text></g><g><title>web-server`core::fmt::write (52 samples, 2.18%)</title><rect x="82.1339%" y="293" width="2.1757%" height="15" fill="rgb(227,98,0)" fg:x="1963" fg:w="52"/><text x="82.3839%" y="303.50">w..</text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (52 samples, 2.18%)</title><rect x="82.1339%" y="277" width="2.1757%" height="15" fill="rgb(207,7,3)" fg:x="1963" fg:w="52"/><text x="82.3839%" y="287.50">w..</text></g><g><title>web-server`DYLD-STUB$$write (1 samples, 0.04%)</title><rect x="84.2678%" y="261" width="0.0418%" height="15" fill="rgb(206,98,19)" fg:x="2014" fg:w="1"/><text x="84.5178%" y="271.50"></text></g><g><title>web-server`std::net::udp::UdpSocket::recv (2 samples, 0.08%)</title><rect x="84.3096%" y="325" width="0.0837%" height="15" fill="rgb(217,5,26)" fg:x="2015" fg:w="2"/><text x="84.5596%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.17%)</title><rect x="84.4770%" y="309" width="0.1674%" height="15" fill="rgb(235,190,38)" fg:x="2019" fg:w="4"/><text x="84.7270%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.17%)</title><rect x="84.4770%" y="293" width="0.1674%" height="15" fill="rgb(247,86,24)" fg:x="2019" fg:w="4"/><text x="84.7270%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.13%)</title><rect x="84.5188%" y="277" width="0.1255%" height="15" fill="rgb(205,101,16)" fg:x="2020" fg:w="3"/><text x="84.7688%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.08%)</title><rect x="84.5607%" y="261" width="0.0837%" height="15" fill="rgb(246,168,33)" fg:x="2021" fg:w="2"/><text x="84.8107%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="84.6025%" y="245" width="0.0418%" height="15" fill="rgb(231,114,1)" fg:x="2022" fg:w="1"/><text x="84.8525%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.08%)</title><rect x="84.6444%" y="309" width="0.0837%" height="15" fill="rgb(207,184,53)" fg:x="2023" fg:w="2"/><text x="84.8944%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="84.7280%" y="309" width="0.0418%" height="15" fill="rgb(224,95,51)" fg:x="2025" fg:w="1"/><text x="84.9780%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="84.7699%" y="309" width="0.0418%" height="15" fill="rgb(212,188,45)" fg:x="2026" fg:w="1"/><text x="85.0199%" y="319.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.08%)</title><rect x="84.8117%" y="309" width="0.0837%" height="15" fill="rgb(223,154,38)" fg:x="2027" fg:w="2"/><text x="85.0617%" y="319.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (2 samples, 0.08%)</title><rect x="84.8117%" y="293" width="0.0837%" height="15" fill="rgb(251,22,52)" fg:x="2027" fg:w="2"/><text x="85.0617%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.08%)</title><rect x="84.8117%" y="277" width="0.0837%" height="15" fill="rgb(229,209,22)" fg:x="2027" fg:w="2"/><text x="85.0617%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.08%)</title><rect x="84.8117%" y="261" width="0.0837%" height="15" fill="rgb(234,138,34)" fg:x="2027" fg:w="2"/><text x="85.0617%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.08%)</title><rect x="84.8117%" y="245" width="0.0837%" height="15" fill="rgb(212,95,11)" fg:x="2027" fg:w="2"/><text x="85.0617%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="84.8536%" y="229" width="0.0418%" height="15" fill="rgb(240,179,47)" fg:x="2028" fg:w="1"/><text x="85.1036%" y="239.50"></text></g><g><title>web-server`httparse::parse_headers_iter_uninit (2 samples, 0.08%)</title><rect x="84.8954%" y="277" width="0.0837%" height="15" fill="rgb(240,163,11)" fg:x="2029" fg:w="2"/><text x="85.1454%" y="287.50"></text></g><g><title>web-server`httparse::parse_version (1 samples, 0.04%)</title><rect x="84.9791%" y="277" width="0.0418%" height="15" fill="rgb(236,37,12)" fg:x="2031" fg:w="1"/><text x="85.2291%" y="287.50"></text></g><g><title>web-server`web_server::request::Request::from_tcp_stream (170 samples, 7.11%)</title><rect x="78.3264%" y="341" width="7.1130%" height="15" fill="rgb(232,164,16)" fg:x="1872" fg:w="170"/><text x="78.5764%" y="351.50">web-server..</text></g><g><title>web-server`web_server::header::Header::from_request (25 samples, 1.05%)</title><rect x="84.3933%" y="325" width="1.0460%" height="15" fill="rgb(244,205,15)" fg:x="2017" fg:w="25"/><text x="84.6433%" y="335.50"></text></g><g><title>web-server`httparse::Request::parse (13 samples, 0.54%)</title><rect x="84.8954%" y="309" width="0.5439%" height="15" fill="rgb(223,117,47)" fg:x="2029" fg:w="13"/><text x="85.1454%" y="319.50"></text></g><g><title>web-server`httparse::Request::parse_with_uninit_headers (13 samples, 0.54%)</title><rect x="84.8954%" y="293" width="0.5439%" height="15" fill="rgb(244,107,35)" fg:x="2029" fg:w="13"/><text x="85.1454%" y="303.50"></text></g><g><title>web-server`httparse::simd::runtime::match_uri_vectored (10 samples, 0.42%)</title><rect x="85.0209%" y="277" width="0.4184%" height="15" fill="rgb(205,140,8)" fg:x="2032" fg:w="10"/><text x="85.2709%" y="287.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (9 samples, 0.38%)</title><rect x="85.0628%" y="261" width="0.3766%" height="15" fill="rgb(228,84,46)" fg:x="2033" fg:w="9"/><text x="85.3128%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.04%)</title><rect x="85.5230%" y="325" width="0.0418%" height="15" fill="rgb(254,188,9)" fg:x="2044" fg:w="1"/><text x="85.7730%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.04%)</title><rect x="85.5230%" y="309" width="0.0418%" height="15" fill="rgb(206,112,54)" fg:x="2044" fg:w="1"/><text x="85.7730%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.04%)</title><rect x="85.5230%" y="293" width="0.0418%" height="15" fill="rgb(216,84,49)" fg:x="2044" fg:w="1"/><text x="85.7730%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.13%)</title><rect x="85.5649%" y="325" width="0.1255%" height="15" fill="rgb(214,194,35)" fg:x="2045" fg:w="3"/><text x="85.8149%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="85.6904%" y="325" width="0.0418%" height="15" fill="rgb(249,28,3)" fg:x="2048" fg:w="1"/><text x="85.9404%" y="335.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="85.7322%" y="325" width="0.0418%" height="15" fill="rgb(222,56,52)" fg:x="2049" fg:w="1"/><text x="85.9822%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="85.7741%" y="309" width="0.0418%" height="15" fill="rgb(245,217,50)" fg:x="2050" fg:w="1"/><text x="86.0241%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="85.7741%" y="293" width="0.0418%" height="15" fill="rgb(213,201,24)" fg:x="2050" fg:w="1"/><text x="86.0241%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="85.7741%" y="277" width="0.0418%" height="15" fill="rgb(248,116,28)" fg:x="2050" fg:w="1"/><text x="86.0241%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="85.7741%" y="261" width="0.0418%" height="15" fill="rgb(219,72,43)" fg:x="2050" fg:w="1"/><text x="86.0241%" y="271.50"></text></g><g><title>web-server`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="85.8159%" y="309" width="0.1255%" height="15" fill="rgb(209,138,14)" fg:x="2051" fg:w="3"/><text x="86.0659%" y="319.50"></text></g><g><title>web-server`core::str::pattern::TwoWaySearcher::next (3 samples, 0.13%)</title><rect x="85.8159%" y="293" width="0.1255%" height="15" fill="rgb(222,18,33)" fg:x="2051" fg:w="3"/><text x="86.0659%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (1 samples, 0.04%)</title><rect x="85.9833%" y="245" width="0.0418%" height="15" fill="rgb(213,199,7)" fg:x="2055" fg:w="1"/><text x="86.2333%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.08%)</title><rect x="85.9833%" y="261" width="0.0837%" height="15" fill="rgb(250,110,10)" fg:x="2055" fg:w="2"/><text x="86.2333%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.04%)</title><rect x="86.0251%" y="245" width="0.0418%" height="15" fill="rgb(248,123,6)" fg:x="2056" fg:w="1"/><text x="86.2751%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="86.0251%" y="229" width="0.0418%" height="15" fill="rgb(206,91,31)" fg:x="2056" fg:w="1"/><text x="86.2751%" y="239.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.33%)</title><rect x="85.7741%" y="325" width="0.3347%" height="15" fill="rgb(211,154,13)" fg:x="2050" fg:w="8"/><text x="86.0241%" y="335.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.17%)</title><rect x="85.9414%" y="309" width="0.1674%" height="15" fill="rgb(225,148,7)" fg:x="2054" fg:w="4"/><text x="86.1914%" y="319.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (4 samples, 0.17%)</title><rect x="85.9414%" y="293" width="0.1674%" height="15" fill="rgb(220,160,43)" fg:x="2054" fg:w="4"/><text x="86.1914%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.17%)</title><rect x="85.9414%" y="277" width="0.1674%" height="15" fill="rgb(213,52,39)" fg:x="2054" fg:w="4"/><text x="86.1914%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.04%)</title><rect x="86.0669%" y="261" width="0.0418%" height="15" fill="rgb(243,137,7)" fg:x="2057" fg:w="1"/><text x="86.3169%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="86.1088%" y="309" width="0.0418%" height="15" fill="rgb(230,79,13)" fg:x="2058" fg:w="1"/><text x="86.3588%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="86.1088%" y="293" width="0.0418%" height="15" fill="rgb(247,105,23)" fg:x="2058" fg:w="1"/><text x="86.3588%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="86.1088%" y="277" width="0.0418%" height="15" fill="rgb(223,179,41)" fg:x="2058" fg:w="1"/><text x="86.3588%" y="287.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="86.1506%" y="309" width="0.0418%" height="15" fill="rgb(218,9,34)" fg:x="2059" fg:w="1"/><text x="86.4006%" y="319.50"></text></g><g><title>web-server`alloc::fmt::format (3 samples, 0.13%)</title><rect x="86.1088%" y="325" width="0.1255%" height="15" fill="rgb(222,106,8)" fg:x="2058" fg:w="3"/><text x="86.3588%" y="335.50"></text></g><g><title>web-server`core::fmt::write (1 samples, 0.04%)</title><rect x="86.1925%" y="309" width="0.0418%" height="15" fill="rgb(211,220,0)" fg:x="2060" fg:w="1"/><text x="86.4425%" y="319.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="86.1925%" y="293" width="0.0418%" height="15" fill="rgb(229,52,16)" fg:x="2060" fg:w="1"/><text x="86.4425%" y="303.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="86.2343%" y="325" width="0.0418%" height="15" fill="rgb(212,155,18)" fg:x="2061" fg:w="1"/><text x="86.4843%" y="335.50"></text></g><g><title>web-server`std::os::unix::net::stream::UnixStream::try_clone (24 samples, 1.00%)</title><rect x="86.2762%" y="325" width="1.0042%" height="15" fill="rgb(242,21,14)" fg:x="2062" fg:w="24"/><text x="86.5262%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (24 samples, 1.00%)</title><rect x="86.2762%" y="309" width="1.0042%" height="15" fill="rgb(222,19,48)" fg:x="2062" fg:w="24"/><text x="86.5262%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="87.3640%" y="293" width="0.0418%" height="15" fill="rgb(232,45,27)" fg:x="2088" fg:w="1"/><text x="87.6140%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="87.3640%" y="277" width="0.0418%" height="15" fill="rgb(249,103,42)" fg:x="2088" fg:w="1"/><text x="87.6140%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (11 samples, 0.46%)</title><rect x="87.4059%" y="277" width="0.4603%" height="15" fill="rgb(246,81,33)" fg:x="2089" fg:w="11"/><text x="87.6559%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (15 samples, 0.63%)</title><rect x="87.2803%" y="325" width="0.6276%" height="15" fill="rgb(252,33,42)" fg:x="2086" fg:w="15"/><text x="87.5303%" y="335.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (15 samples, 0.63%)</title><rect x="87.2803%" y="309" width="0.6276%" height="15" fill="rgb(209,212,41)" fg:x="2086" fg:w="15"/><text x="87.5303%" y="319.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (12 samples, 0.50%)</title><rect x="87.4059%" y="293" width="0.5021%" height="15" fill="rgb(207,154,6)" fg:x="2089" fg:w="12"/><text x="87.6559%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.04%)</title><rect x="87.8661%" y="277" width="0.0418%" height="15" fill="rgb(223,64,47)" fg:x="2100" fg:w="1"/><text x="88.1161%" y="287.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (1 samples, 0.04%)</title><rect x="87.9079%" y="325" width="0.0418%" height="15" fill="rgb(211,161,38)" fg:x="2101" fg:w="1"/><text x="88.1579%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (91 samples, 3.81%)</title><rect x="87.9916%" y="309" width="3.8075%" height="15" fill="rgb(219,138,40)" fg:x="2103" fg:w="91"/><text x="88.2416%" y="319.50">libs..</text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.08%)</title><rect x="91.7992%" y="309" width="0.0837%" height="15" fill="rgb(241,228,46)" fg:x="2194" fg:w="2"/><text x="92.0492%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.04%)</title><rect x="91.8410%" y="293" width="0.0418%" height="15" fill="rgb(223,209,38)" fg:x="2195" fg:w="1"/><text x="92.0910%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.04%)</title><rect x="91.8410%" y="277" width="0.0418%" height="15" fill="rgb(236,164,45)" fg:x="2195" fg:w="1"/><text x="92.0910%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.04%)</title><rect x="91.8828%" y="309" width="0.0418%" height="15" fill="rgb(231,15,5)" fg:x="2196" fg:w="1"/><text x="92.1328%" y="319.50"></text></g><g><title>web-server`alloc::fmt::format (1 samples, 0.04%)</title><rect x="91.9247%" y="309" width="0.0418%" height="15" fill="rgb(252,35,15)" fg:x="2197" fg:w="1"/><text x="92.1747%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="91.9247%" y="293" width="0.0418%" height="15" fill="rgb(248,181,18)" fg:x="2197" fg:w="1"/><text x="92.1747%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="91.9247%" y="277" width="0.0418%" height="15" fill="rgb(233,39,42)" fg:x="2197" fg:w="1"/><text x="92.1747%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="91.9247%" y="261" width="0.0418%" height="15" fill="rgb(238,110,33)" fg:x="2197" fg:w="1"/><text x="92.1747%" y="271.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (492 samples, 20.59%)</title><rect x="71.4226%" y="357" width="20.5858%" height="15" fill="rgb(233,195,10)" fg:x="1707" fg:w="492"/><text x="71.6726%" y="367.50">web-server`rusty_junctions::func..</text></g><g><title>web-server`web_server::request::Request::handle_pooled (157 samples, 6.57%)</title><rect x="85.4393%" y="341" width="6.5690%" height="15" fill="rgb(254,105,3)" fg:x="2042" fg:w="157"/><text x="85.6893%" y="351.50">web-serve..</text></g><g><title>web-server`web_server::request::Request::respond_ok (97 samples, 4.06%)</title><rect x="87.9498%" y="325" width="4.0586%" height="15" fill="rgb(221,225,9)" fg:x="2102" fg:w="97"/><text x="88.1998%" y="335.50">web-..</text></g><g><title>web-server`std::net::udp::UdpSocket::send (1 samples, 0.04%)</title><rect x="91.9665%" y="309" width="0.0418%" height="15" fill="rgb(224,227,45)" fg:x="2198" fg:w="1"/><text x="92.2165%" y="319.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (1 samples, 0.04%)</title><rect x="92.0084%" y="357" width="0.0418%" height="15" fill="rgb(229,198,43)" fg:x="2199" fg:w="1"/><text x="92.2584%" y="367.50"></text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (1,301 samples, 54.44%)</title><rect x="37.6569%" y="373" width="54.4351%" height="15" fill="rgb(206,209,35)" fg:x="900" fg:w="1301"/><text x="37.9069%" y="383.50">web-server`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>web-server`web_server::request::Request::from_tcp_stream (1 samples, 0.04%)</title><rect x="92.0502%" y="357" width="0.0418%" height="15" fill="rgb(245,195,53)" fg:x="2200" fg:w="1"/><text x="92.3002%" y="367.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (8 samples, 0.33%)</title><rect x="92.1339%" y="357" width="0.3347%" height="15" fill="rgb(240,92,26)" fg:x="2202" fg:w="8"/><text x="92.3839%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.25%)</title><rect x="92.2176%" y="341" width="0.2510%" height="15" fill="rgb(207,40,23)" fg:x="2204" fg:w="6"/><text x="92.4676%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.25%)</title><rect x="92.2176%" y="325" width="0.2510%" height="15" fill="rgb(223,111,35)" fg:x="2204" fg:w="6"/><text x="92.4676%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.25%)</title><rect x="92.2176%" y="309" width="0.2510%" height="15" fill="rgb(229,147,28)" fg:x="2204" fg:w="6"/><text x="92.4676%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.17%)</title><rect x="92.3013%" y="293" width="0.1674%" height="15" fill="rgb(211,29,28)" fg:x="2206" fg:w="4"/><text x="92.5513%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="92.4268%" y="277" width="0.0418%" height="15" fill="rgb(228,72,33)" fg:x="2209" fg:w="1"/><text x="92.6768%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.33%)</title><rect x="93.0962%" y="325" width="0.3347%" height="15" fill="rgb(205,214,31)" fg:x="2225" fg:w="8"/><text x="93.3462%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.21%)</title><rect x="93.2218%" y="309" width="0.2092%" height="15" fill="rgb(224,111,15)" fg:x="2228" fg:w="5"/><text x="93.4718%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.21%)</title><rect x="93.2218%" y="293" width="0.2092%" height="15" fill="rgb(253,21,26)" fg:x="2228" fg:w="5"/><text x="93.4718%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="93.3891%" y="277" width="0.0418%" height="15" fill="rgb(245,139,43)" fg:x="2232" fg:w="1"/><text x="93.6391%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="93.3891%" y="261" width="0.0418%" height="15" fill="rgb(252,170,7)" fg:x="2232" fg:w="1"/><text x="93.6391%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.21%)</title><rect x="93.4310%" y="325" width="0.2092%" height="15" fill="rgb(231,118,14)" fg:x="2233" fg:w="5"/><text x="93.6810%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.04%)</title><rect x="93.6402%" y="325" width="0.0418%" height="15" fill="rgb(238,83,0)" fg:x="2238" fg:w="1"/><text x="93.8902%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_allocate_and_initialize_for_key (21 samples, 0.88%)</title><rect x="92.8452%" y="341" width="0.8787%" height="15" fill="rgb(221,39,39)" fg:x="2219" fg:w="21"/><text x="93.0952%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="93.6820%" y="325" width="0.0418%" height="15" fill="rgb(222,119,46)" fg:x="2239" fg:w="1"/><text x="93.9320%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.04%)</title><rect x="93.7238%" y="341" width="0.0418%" height="15" fill="rgb(222,165,49)" fg:x="2240" fg:w="1"/><text x="93.9738%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="93.7657%" y="341" width="0.0418%" height="15" fill="rgb(219,113,52)" fg:x="2241" fg:w="1"/><text x="94.0157%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (34 samples, 1.42%)</title><rect x="92.4686%" y="357" width="1.4226%" height="15" fill="rgb(214,7,15)" fg:x="2210" fg:w="34"/><text x="92.7186%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_setspecific (2 samples, 0.08%)</title><rect x="93.8075%" y="341" width="0.0837%" height="15" fill="rgb(235,32,4)" fg:x="2242" fg:w="2"/><text x="94.0575%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.04%)</title><rect x="94.0167%" y="309" width="0.0418%" height="15" fill="rgb(238,90,54)" fg:x="2247" fg:w="1"/><text x="94.2667%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.21%)</title><rect x="93.8912%" y="357" width="0.2092%" height="15" fill="rgb(213,208,19)" fg:x="2244" fg:w="5"/><text x="94.1412%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.21%)</title><rect x="93.8912%" y="341" width="0.2092%" height="15" fill="rgb(233,156,4)" fg:x="2244" fg:w="5"/><text x="94.1412%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.21%)</title><rect x="93.8912%" y="325" width="0.2092%" height="15" fill="rgb(207,194,5)" fg:x="2244" fg:w="5"/><text x="94.1412%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.04%)</title><rect x="94.0586%" y="309" width="0.0418%" height="15" fill="rgb(206,111,30)" fg:x="2248" fg:w="1"/><text x="94.3086%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.04%)</title><rect x="94.0586%" y="293" width="0.0418%" height="15" fill="rgb(243,70,54)" fg:x="2248" fg:w="1"/><text x="94.3086%" y="303.50"></text></g><g><title>web-server`std::sys_common::thread_info::set (49 samples, 2.05%)</title><rect x="92.0921%" y="373" width="2.0502%" height="15" fill="rgb(242,28,8)" fg:x="2201" fg:w="49"/><text x="92.3421%" y="383.50">w..</text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="94.1004%" y="357" width="0.0418%" height="15" fill="rgb(219,106,18)" fg:x="2249" fg:w="1"/><text x="94.3504%" y="367.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="94.1004%" y="341" width="0.0418%" height="15" fill="rgb(244,222,10)" fg:x="2249" fg:w="1"/><text x="94.3504%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.04%)</title><rect x="94.1004%" y="325" width="0.0418%" height="15" fill="rgb(236,179,52)" fg:x="2249" fg:w="1"/><text x="94.3504%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.04%)</title><rect x="94.1004%" y="309" width="0.0418%" height="15" fill="rgb(213,23,39)" fg:x="2249" fg:w="1"/><text x="94.3504%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.04%)</title><rect x="94.1004%" y="293" width="0.0418%" height="15" fill="rgb(238,48,10)" fg:x="2249" fg:w="1"/><text x="94.3504%" y="303.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,370 samples, 57.32%)</title><rect x="36.8619%" y="389" width="57.3222%" height="15" fill="rgb(251,196,23)" fg:x="881" fg:w="1370"/><text x="37.1119%" y="399.50">web-server`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>web-server`std::thread::Thread::cname (1 samples, 0.04%)</title><rect x="94.1423%" y="373" width="0.0418%" height="15" fill="rgb(250,152,24)" fg:x="2250" fg:w="1"/><text x="94.3923%" y="383.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.04%)</title><rect x="96.0251%" y="373" width="0.0418%" height="15" fill="rgb(209,150,17)" fg:x="2295" fg:w="1"/><text x="96.2751%" y="383.50"></text></g><g><title>libsystem_c.dylib`sysconf (3 samples, 0.13%)</title><rect x="96.0669%" y="373" width="0.1255%" height="15" fill="rgb(234,202,34)" fg:x="2296" fg:w="3"/><text x="96.3169%" y="383.50"></text></g><g><title>libsystem_c.dylib`getpagesize (2 samples, 0.08%)</title><rect x="96.1088%" y="357" width="0.0837%" height="15" fill="rgb(253,148,53)" fg:x="2297" fg:w="2"/><text x="96.3588%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (85 samples, 3.56%)</title><rect x="96.1925%" y="373" width="3.5565%" height="15" fill="rgb(218,129,16)" fg:x="2299" fg:w="85"/><text x="96.4425%" y="383.50">libs..</text></g><g><title>web-server`std::sys::unix::stack_overflow::imp::make_handler (136 samples, 5.69%)</title><rect x="94.1841%" y="389" width="5.6904%" height="15" fill="rgb(216,85,19)" fg:x="2251" fg:w="136"/><text x="94.4341%" y="399.50">web-ser..</text></g><g><title>libsystem_kernel.dylib`mmap (3 samples, 0.13%)</title><rect x="99.7490%" y="373" width="0.1255%" height="15" fill="rgb(235,228,7)" fg:x="2384" fg:w="3"/><text x="99.9990%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (1,903 samples, 79.62%)</title><rect x="20.2929%" y="421" width="79.6234%" height="15" fill="rgb(245,175,0)" fg:x="485" fg:w="1903"/><text x="20.5429%" y="431.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (1,622 samples, 67.87%)</title><rect x="32.0502%" y="405" width="67.8661%" height="15" fill="rgb(208,168,36)" fg:x="766" fg:w="1622"/><text x="32.3002%" y="415.50">web-server`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.04%)</title><rect x="99.8745%" y="389" width="0.0418%" height="15" fill="rgb(246,171,24)" fg:x="2387" fg:w="1"/><text x="100.1245%" y="399.50"></text></g><g><title>all (2,390 samples, 100%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(215,142,24)" fg:x="0" fg:w="2390"/><text x="0.2500%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (2,120 samples, 88.70%)</title><rect x="11.2971%" y="437" width="88.7029%" height="15" fill="rgb(250,187,7)" fg:x="270" fg:w="2120"/><text x="11.5471%" y="447.50">libsystem_pthread.dylib`thread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.08%)</title><rect x="99.9163%" y="421" width="0.0837%" height="15" fill="rgb(228,66,33)" fg:x="2388" fg:w="2"/><text x="100.1663%" y="431.50"></text></g></svg></svg>