<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="406" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="389.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="389.00"> </text><svg id="frames" x="10" width="1180" total_samples="2925"><g><title>web-server`__rdl_alloc (1 samples, 0.03%)</title><rect x="0.0000%" y="245" width="0.0342%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>web-server`__rust_alloc (1 samples, 0.03%)</title><rect x="0.0342%" y="245" width="0.0342%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2842%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (1 samples, 0.03%)</title><rect x="0.0684%" y="245" width="0.0342%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.3184%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.10%)</title><rect x="0.1368%" y="229" width="0.1026%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="3"/><text x="0.3868%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.10%)</title><rect x="0.1368%" y="213" width="0.1026%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="3"/><text x="0.3868%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.10%)</title><rect x="0.1368%" y="197" width="0.1026%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="3"/><text x="0.3868%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.10%)</title><rect x="0.1368%" y="181" width="0.1026%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="3"/><text x="0.3868%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__accept (102 samples, 3.49%)</title><rect x="0.5128%" y="197" width="3.4872%" height="15" fill="rgb(228,23,34)" fg:x="15" fg:w="102"/><text x="0.7628%" y="207.50">lib..</text></g><g><title>libsystem_kernel.dylib`ioctl (2 samples, 0.07%)</title><rect x="4.0000%" y="197" width="0.0684%" height="15" fill="rgb(218,30,26)" fg:x="117" fg:w="2"/><text x="4.2500%" y="207.50"></text></g><g><title>web-server`&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (124 samples, 4.24%)</title><rect x="0.2393%" y="229" width="4.2393%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="124"/><text x="0.4893%" y="239.50">web-s..</text></g><g><title>web-server`std::net::tcp::TcpListener::accept (124 samples, 4.24%)</title><rect x="0.2393%" y="213" width="4.2393%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="124"/><text x="0.4893%" y="223.50">web-s..</text></g><g><title>web-server`std::sys::unix::net::Socket::accept (12 samples, 0.41%)</title><rect x="4.0684%" y="197" width="0.4103%" height="15" fill="rgb(240,193,28)" fg:x="119" fg:w="12"/><text x="4.3184%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (12 samples, 0.41%)</title><rect x="4.0684%" y="181" width="0.4103%" height="15" fill="rgb(216,20,37)" fg:x="119" fg:w="12"/><text x="4.3184%" y="191.50"></text></g><g><title>web-server`std::net::tcp::TcpListener::bind (1 samples, 0.03%)</title><rect x="4.4786%" y="229" width="0.0342%" height="15" fill="rgb(206,188,39)" fg:x="131" fg:w="1"/><text x="4.7286%" y="239.50"></text></g><g><title>web-server`std::sys_common::net::TcpListener::bind (1 samples, 0.03%)</title><rect x="4.4786%" y="213" width="0.0342%" height="15" fill="rgb(217,207,13)" fg:x="131" fg:w="1"/><text x="4.7286%" y="223.50"></text></g><g><title>web-server`_dyld_private (1 samples, 0.03%)</title><rect x="4.4786%" y="197" width="0.0342%" height="15" fill="rgb(231,73,38)" fg:x="131" fg:w="1"/><text x="4.7286%" y="207.50"></text></g><g><title>libdyld.dylib`dyld_stub_binder (1 samples, 0.03%)</title><rect x="4.4786%" y="181" width="0.0342%" height="15" fill="rgb(225,20,46)" fg:x="131" fg:w="1"/><text x="4.7286%" y="191.50"></text></g><g><title>libdyld.dylib`_dyld_fast_stub_entry(void*, long) (1 samples, 0.03%)</title><rect x="4.4786%" y="165" width="0.0342%" height="15" fill="rgb(210,31,41)" fg:x="131" fg:w="1"/><text x="4.7286%" y="175.50"></text></g><g><title>dyld`dyld::fastBindLazySymbol (1 samples, 0.03%)</title><rect x="4.4786%" y="149" width="0.0342%" height="15" fill="rgb(221,200,47)" fg:x="131" fg:w="1"/><text x="4.7286%" y="159.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::doBindFastLazySymbol(unsigned int, ImageLoader::LinkContext const&amp;, void (*)(), void (*) (1 samples, 0.03%)</title><rect x="4.4786%" y="133" width="0.0342%" height="15" fill="rgb(226,26,5)" fg:x="131" fg:w="1"/><text x="4.7286%" y="143.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolve (1 samples, 0.03%)</title><rect x="4.4786%" y="117" width="0.0342%" height="15" fill="rgb(249,33,26)" fg:x="131" fg:w="1"/><text x="4.7286%" y="127.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolveTwolevel (1 samples, 0.03%)</title><rect x="4.4786%" y="101" width="0.0342%" height="15" fill="rgb(235,183,28)" fg:x="131" fg:w="1"/><text x="4.7286%" y="111.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolAddress (1 samples, 0.03%)</title><rect x="4.4786%" y="85" width="0.0342%" height="15" fill="rgb(221,5,38)" fg:x="131" fg:w="1"/><text x="4.7286%" y="95.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.03%)</title><rect x="4.4786%" y="69" width="0.0342%" height="15" fill="rgb(247,18,42)" fg:x="131" fg:w="1"/><text x="4.7286%" y="79.50"></text></g><g><title>dyld`ImageLoaderMachO::libPath (1 samples, 0.03%)</title><rect x="4.4786%" y="53" width="0.0342%" height="15" fill="rgb(241,131,45)" fg:x="131" fg:w="1"/><text x="4.7286%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="4.5128%" y="213" width="0.0342%" height="15" fill="rgb(249,31,29)" fg:x="132" fg:w="1"/><text x="4.7628%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="4.5812%" y="197" width="0.0684%" height="15" fill="rgb(225,111,53)" fg:x="134" fg:w="2"/><text x="4.8312%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="4.5812%" y="181" width="0.0684%" height="15" fill="rgb(238,160,17)" fg:x="134" fg:w="2"/><text x="4.8312%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="4.5812%" y="165" width="0.0684%" height="15" fill="rgb(214,148,48)" fg:x="134" fg:w="2"/><text x="4.8312%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="4.6154%" y="149" width="0.0342%" height="15" fill="rgb(232,36,49)" fg:x="135" fg:w="1"/><text x="4.8654%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="4.6496%" y="197" width="0.0342%" height="15" fill="rgb(209,103,24)" fg:x="136" fg:w="1"/><text x="4.8996%" y="207.50"></text></g><g><title>0x1 (139 samples, 4.75%)</title><rect x="0.0000%" y="341" width="4.7521%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="139"/><text x="0.2500%" y="351.50">0x1</text></g><g><title>libdyld.dylib`start (139 samples, 4.75%)</title><rect x="0.0000%" y="325" width="4.7521%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="139"/><text x="0.2500%" y="335.50">libdyl..</text></g><g><title>web-server`main (139 samples, 4.75%)</title><rect x="0.0000%" y="309" width="4.7521%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="139"/><text x="0.2500%" y="319.50">web-se..</text></g><g><title>web-server`std::rt::lang_start_internal (139 samples, 4.75%)</title><rect x="0.0000%" y="293" width="4.7521%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="139"/><text x="0.2500%" y="303.50">web-se..</text></g><g><title>web-server`std::rt::lang_start::_{{closure}} (139 samples, 4.75%)</title><rect x="0.0000%" y="277" width="4.7521%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="139"/><text x="0.2500%" y="287.50">web-se..</text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (139 samples, 4.75%)</title><rect x="0.0000%" y="261" width="4.7521%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="139"/><text x="0.2500%" y="271.50">web-se..</text></g><g><title>web-server`web_server::web_server::WebServer::start_with_separate_handler (136 samples, 4.65%)</title><rect x="0.1026%" y="245" width="4.6496%" height="15" fill="rgb(245,192,40)" fg:x="3" fg:w="136"/><text x="0.3526%" y="255.50">web-s..</text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (7 samples, 0.24%)</title><rect x="4.5128%" y="229" width="0.2393%" height="15" fill="rgb(238,167,29)" fg:x="132" fg:w="7"/><text x="4.7628%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (6 samples, 0.21%)</title><rect x="4.5470%" y="213" width="0.2051%" height="15" fill="rgb(232,182,51)" fg:x="133" fg:w="6"/><text x="4.7970%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (2 samples, 0.07%)</title><rect x="4.6838%" y="197" width="0.0684%" height="15" fill="rgb(231,60,39)" fg:x="137" fg:w="2"/><text x="4.9338%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (2 samples, 0.07%)</title><rect x="4.6838%" y="181" width="0.0684%" height="15" fill="rgb(208,69,12)" fg:x="137" fg:w="2"/><text x="4.9338%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (253 samples, 8.65%)</title><rect x="4.7521%" y="341" width="8.6496%" height="15" fill="rgb(235,93,37)" fg:x="139" fg:w="253"/><text x="5.0021%" y="351.50">libsystem_ke..</text></g><g><title>libsystem_kernel.dylib`__thread_selfid (21 samples, 0.72%)</title><rect x="22.5641%" y="325" width="0.7179%" height="15" fill="rgb(213,116,39)" fg:x="660" fg:w="21"/><text x="22.8141%" y="335.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (1 samples, 0.03%)</title><rect x="23.4530%" y="309" width="0.0342%" height="15" fill="rgb(222,207,29)" fg:x="686" fg:w="1"/><text x="23.7030%" y="319.50"></text></g><g><title>libsystem_c.dylib`sysconf (4 samples, 0.14%)</title><rect x="23.4872%" y="309" width="0.1368%" height="15" fill="rgb(206,96,30)" fg:x="687" fg:w="4"/><text x="23.7372%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__disable_threadsignal (12 samples, 0.41%)</title><rect x="23.6239%" y="309" width="0.4103%" height="15" fill="rgb(218,138,4)" fg:x="691" fg:w="12"/><text x="23.8739%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (125 samples, 4.27%)</title><rect x="24.0342%" y="309" width="4.2735%" height="15" fill="rgb(250,191,14)" fg:x="703" fg:w="125"/><text x="24.2842%" y="319.50">libsy..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (19 samples, 0.65%)</title><rect x="28.3077%" y="309" width="0.6496%" height="15" fill="rgb(239,60,40)" fg:x="828" fg:w="19"/><text x="28.5577%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.03%)</title><rect x="28.9573%" y="309" width="0.0342%" height="15" fill="rgb(206,27,48)" fg:x="847" fg:w="1"/><text x="29.2073%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$__disable_threadsignal (1 samples, 0.03%)</title><rect x="28.9915%" y="309" width="0.0342%" height="15" fill="rgb(225,35,8)" fg:x="848" fg:w="1"/><text x="29.2415%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_finalize (1 samples, 0.03%)</title><rect x="29.0256%" y="293" width="0.0342%" height="15" fill="rgb(250,213,24)" fg:x="849" fg:w="1"/><text x="29.2756%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_free (2 samples, 0.07%)</title><rect x="29.0598%" y="293" width="0.0684%" height="15" fill="rgb(247,123,22)" fg:x="850" fg:w="2"/><text x="29.3098%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="29.1282%" y="293" width="0.0342%" height="15" fill="rgb(231,138,38)" fg:x="852" fg:w="1"/><text x="29.3782%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="29.4359%" y="261" width="0.0342%" height="15" fill="rgb(231,145,46)" fg:x="861" fg:w="1"/><text x="29.6859%" y="271.50"></text></g><g><title>web-server`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.03%)</title><rect x="29.4701%" y="261" width="0.0342%" height="15" fill="rgb(251,118,11)" fg:x="862" fg:w="1"/><text x="29.7201%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.21%)</title><rect x="29.5726%" y="245" width="0.2051%" height="15" fill="rgb(217,147,25)" fg:x="865" fg:w="6"/><text x="29.8226%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.14%)</title><rect x="29.6410%" y="229" width="0.1368%" height="15" fill="rgb(247,81,37)" fg:x="867" fg:w="4"/><text x="29.8910%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.14%)</title><rect x="29.6410%" y="213" width="0.1368%" height="15" fill="rgb(209,12,38)" fg:x="867" fg:w="4"/><text x="29.8910%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="29.9487%" y="229" width="0.0342%" height="15" fill="rgb(227,1,9)" fg:x="876" fg:w="1"/><text x="30.1987%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="29.9829%" y="229" width="0.0342%" height="15" fill="rgb(248,47,43)" fg:x="877" fg:w="1"/><text x="30.2329%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.14%)</title><rect x="30.1197%" y="213" width="0.1368%" height="15" fill="rgb(221,10,30)" fg:x="881" fg:w="4"/><text x="30.3697%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.55%)</title><rect x="29.7778%" y="245" width="0.5470%" height="15" fill="rgb(210,229,1)" fg:x="871" fg:w="16"/><text x="30.0278%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.31%)</title><rect x="30.0171%" y="229" width="0.3077%" height="15" fill="rgb(222,148,37)" fg:x="878" fg:w="9"/><text x="30.2671%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.07%)</title><rect x="30.2564%" y="213" width="0.0684%" height="15" fill="rgb(234,67,33)" fg:x="885" fg:w="2"/><text x="30.5064%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.03%)</title><rect x="30.3248%" y="245" width="0.0342%" height="15" fill="rgb(247,98,35)" fg:x="887" fg:w="1"/><text x="30.5748%" y="255.50"></text></g><g><title>web-server`__rust_dealloc (1 samples, 0.03%)</title><rect x="30.3590%" y="245" width="0.0342%" height="15" fill="rgb(247,138,52)" fg:x="888" fg:w="1"/><text x="30.6090%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.07%)</title><rect x="30.4274%" y="229" width="0.0684%" height="15" fill="rgb(213,79,30)" fg:x="890" fg:w="2"/><text x="30.6774%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.07%)</title><rect x="30.4274%" y="213" width="0.0684%" height="15" fill="rgb(246,177,23)" fg:x="890" fg:w="2"/><text x="30.6774%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.07%)</title><rect x="30.4274%" y="197" width="0.0684%" height="15" fill="rgb(230,62,27)" fg:x="890" fg:w="2"/><text x="30.6774%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (3 samples, 0.10%)</title><rect x="30.5983%" y="213" width="0.1026%" height="15" fill="rgb(216,154,8)" fg:x="895" fg:w="3"/><text x="30.8483%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.27%)</title><rect x="30.4957%" y="229" width="0.2735%" height="15" fill="rgb(244,35,45)" fg:x="892" fg:w="8"/><text x="30.7457%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.07%)</title><rect x="30.7009%" y="213" width="0.0684%" height="15" fill="rgb(251,115,12)" fg:x="898" fg:w="2"/><text x="30.9509%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="30.7350%" y="197" width="0.0342%" height="15" fill="rgb(240,54,50)" fg:x="899" fg:w="1"/><text x="30.9850%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="30.7692%" y="229" width="0.0342%" height="15" fill="rgb(233,84,52)" fg:x="900" fg:w="1"/><text x="31.0192%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (1 samples, 0.03%)</title><rect x="30.8034%" y="229" width="0.0342%" height="15" fill="rgb(207,117,47)" fg:x="901" fg:w="1"/><text x="31.0534%" y="239.50"></text></g><g><title>web-server`alloc::sync::Arc&lt;T&gt;::drop_slow (15 samples, 0.51%)</title><rect x="30.3932%" y="245" width="0.5128%" height="15" fill="rgb(249,43,39)" fg:x="889" fg:w="15"/><text x="30.6432%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (2 samples, 0.07%)</title><rect x="30.8376%" y="229" width="0.0684%" height="15" fill="rgb(209,38,44)" fg:x="902" fg:w="2"/><text x="31.0876%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_finalize_list (47 samples, 1.61%)</title><rect x="29.4017%" y="277" width="1.6068%" height="15" fill="rgb(236,212,23)" fg:x="860" fg:w="47"/><text x="29.6517%" y="287.50"></text></g><g><title>web-server`std::sys::unix::thread_local_dtor::register_dtor::run_dtors (44 samples, 1.50%)</title><rect x="29.5043%" y="261" width="1.5043%" height="15" fill="rgb(242,79,21)" fg:x="863" fg:w="44"/><text x="29.7543%" y="271.50"></text></g><g><title>web-server`std::sys_common::thread_info::THREAD_INFO::__getit::destroy (3 samples, 0.10%)</title><rect x="30.9060%" y="245" width="0.1026%" height="15" fill="rgb(211,96,35)" fg:x="904" fg:w="3"/><text x="31.1560%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.07%)</title><rect x="31.1111%" y="261" width="0.0684%" height="15" fill="rgb(253,215,40)" fg:x="910" fg:w="2"/><text x="31.3611%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="31.1453%" y="245" width="0.0342%" height="15" fill="rgb(211,81,21)" fg:x="911" fg:w="1"/><text x="31.3953%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (64 samples, 2.19%)</title><rect x="29.0256%" y="309" width="2.1880%" height="15" fill="rgb(208,190,38)" fg:x="849" fg:w="64"/><text x="29.2756%" y="319.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (60 samples, 2.05%)</title><rect x="29.1624%" y="293" width="2.0513%" height="15" fill="rgb(235,213,38)" fg:x="853" fg:w="60"/><text x="29.4124%" y="303.50">l..</text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.21%)</title><rect x="31.0085%" y="277" width="0.2051%" height="15" fill="rgb(237,122,38)" fg:x="907" fg:w="6"/><text x="31.2585%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.03%)</title><rect x="31.1795%" y="261" width="0.0342%" height="15" fill="rgb(244,218,35)" fg:x="912" fg:w="1"/><text x="31.4295%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_terminate_invoke (1 samples, 0.03%)</title><rect x="31.2137%" y="309" width="0.0342%" height="15" fill="rgb(240,68,47)" fg:x="913" fg:w="1"/><text x="31.4637%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (138 samples, 4.72%)</title><rect x="31.2479%" y="277" width="4.7179%" height="15" fill="rgb(210,16,53)" fg:x="914" fg:w="138"/><text x="31.4979%" y="287.50">libsy..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (3 samples, 0.10%)</title><rect x="35.9658%" y="277" width="0.1026%" height="15" fill="rgb(235,124,12)" fg:x="1052" fg:w="3"/><text x="36.2158%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_join$NOCANCEL (158 samples, 5.40%)</title><rect x="31.2479%" y="309" width="5.4017%" height="15" fill="rgb(224,169,11)" fg:x="914" fg:w="158"/><text x="31.4979%" y="319.50">libsyst..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (158 samples, 5.40%)</title><rect x="31.2479%" y="293" width="5.4017%" height="15" fill="rgb(250,166,2)" fg:x="914" fg:w="158"/><text x="31.4979%" y="303.50">libsyst..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (17 samples, 0.58%)</title><rect x="36.0684%" y="277" width="0.5812%" height="15" fill="rgb(242,216,29)" fg:x="1055" fg:w="17"/><text x="36.3184%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mig_dealloc_reply_port (12 samples, 0.41%)</title><rect x="36.2393%" y="261" width="0.4103%" height="15" fill="rgb(230,116,27)" fg:x="1060" fg:w="12"/><text x="36.4893%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (12 samples, 0.41%)</title><rect x="36.2393%" y="245" width="0.4103%" height="15" fill="rgb(228,99,48)" fg:x="1060" fg:w="12"/><text x="36.4893%" y="255.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.07%)</title><rect x="36.6496%" y="309" width="0.0684%" height="15" fill="rgb(253,11,6)" fg:x="1072" fg:w="2"/><text x="36.8996%" y="319.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (1 samples, 0.03%)</title><rect x="36.9231%" y="293" width="0.0342%" height="15" fill="rgb(247,143,39)" fg:x="1080" fg:w="1"/><text x="37.1731%" y="303.50"></text></g><g><title>libsystem_c.dylib`sysconf (3 samples, 0.10%)</title><rect x="36.9573%" y="293" width="0.1026%" height="15" fill="rgb(236,97,10)" fg:x="1081" fg:w="3"/><text x="37.2073%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (84 samples, 2.87%)</title><rect x="37.0598%" y="293" width="2.8718%" height="15" fill="rgb(233,208,19)" fg:x="1084" fg:w="84"/><text x="37.3098%" y="303.50">li..</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (34 samples, 1.16%)</title><rect x="39.9316%" y="293" width="1.1624%" height="15" fill="rgb(216,164,2)" fg:x="1168" fg:w="34"/><text x="40.1816%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (2 samples, 0.07%)</title><rect x="41.0940%" y="293" width="0.0684%" height="15" fill="rgb(220,129,5)" fg:x="1202" fg:w="2"/><text x="41.3440%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mmap (1 samples, 0.03%)</title><rect x="41.1624%" y="293" width="0.0342%" height="15" fill="rgb(242,17,10)" fg:x="1204" fg:w="1"/><text x="41.4124%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`munmap (1 samples, 0.03%)</title><rect x="41.1966%" y="293" width="0.0342%" height="15" fill="rgb(242,107,0)" fg:x="1205" fg:w="1"/><text x="41.4466%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.10%)</title><rect x="41.2308%" y="293" width="0.1026%" height="15" fill="rgb(251,28,31)" fg:x="1206" fg:w="3"/><text x="41.4808%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.07%)</title><rect x="41.2650%" y="277" width="0.0684%" height="15" fill="rgb(233,223,10)" fg:x="1207" fg:w="2"/><text x="41.5150%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.07%)</title><rect x="41.2650%" y="261" width="0.0684%" height="15" fill="rgb(215,21,27)" fg:x="1207" fg:w="2"/><text x="41.5150%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="41.4359%" y="277" width="0.0342%" height="15" fill="rgb(232,23,21)" fg:x="1212" fg:w="1"/><text x="41.6859%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.07%)</title><rect x="41.5043%" y="261" width="0.0684%" height="15" fill="rgb(244,5,23)" fg:x="1214" fg:w="2"/><text x="41.7543%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.31%)</title><rect x="41.3333%" y="293" width="0.3077%" height="15" fill="rgb(226,81,46)" fg:x="1209" fg:w="9"/><text x="41.5833%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.17%)</title><rect x="41.4701%" y="277" width="0.1709%" height="15" fill="rgb(247,70,30)" fg:x="1213" fg:w="5"/><text x="41.7201%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.07%)</title><rect x="41.5726%" y="261" width="0.0684%" height="15" fill="rgb(212,68,19)" fg:x="1216" fg:w="2"/><text x="41.8226%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.10%)</title><rect x="41.7094%" y="277" width="0.1026%" height="15" fill="rgb(240,187,13)" fg:x="1220" fg:w="3"/><text x="41.9594%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.14%)</title><rect x="41.8120%" y="277" width="0.1368%" height="15" fill="rgb(223,113,26)" fg:x="1223" fg:w="4"/><text x="42.0620%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.07%)</title><rect x="41.8803%" y="261" width="0.0684%" height="15" fill="rgb(206,192,2)" fg:x="1225" fg:w="2"/><text x="42.1303%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="41.9145%" y="245" width="0.0342%" height="15" fill="rgb(241,108,4)" fg:x="1226" fg:w="1"/><text x="42.1645%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (1 samples, 0.03%)</title><rect x="41.9487%" y="277" width="0.0342%" height="15" fill="rgb(247,173,49)" fg:x="1227" fg:w="1"/><text x="42.1987%" y="287.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.07%)</title><rect x="41.9829%" y="277" width="0.0684%" height="15" fill="rgb(224,114,35)" fg:x="1228" fg:w="2"/><text x="42.2329%" y="287.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::binary::transform_send::_{{closure}} (1 samples, 0.03%)</title><rect x="42.0513%" y="277" width="0.0342%" height="15" fill="rgb(245,159,27)" fg:x="1230" fg:w="1"/><text x="42.3013%" y="287.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (1 samples, 0.03%)</title><rect x="42.0855%" y="277" width="0.0342%" height="15" fill="rgb(245,172,44)" fg:x="1231" fg:w="1"/><text x="42.3355%" y="287.50"></text></g><g><title>web-server`std::io::stdio::set_output_capture (1 samples, 0.03%)</title><rect x="42.1197%" y="277" width="0.0342%" height="15" fill="rgb(236,23,11)" fg:x="1232" fg:w="1"/><text x="42.3697%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stackaddr_np (1 samples, 0.03%)</title><rect x="42.1538%" y="261" width="0.0342%" height="15" fill="rgb(205,117,38)" fg:x="1233" fg:w="1"/><text x="42.4038%" y="271.50"></text></g><g><title>web-server`std::sys::unix::thread::guard::current (2 samples, 0.07%)</title><rect x="42.1538%" y="277" width="0.0684%" height="15" fill="rgb(237,72,25)" fg:x="1233" fg:w="2"/><text x="42.4038%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stacksize_np (1 samples, 0.03%)</title><rect x="42.1880%" y="261" width="0.0342%" height="15" fill="rgb(244,70,9)" fg:x="1234" fg:w="1"/><text x="42.4380%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (91 samples, 3.11%)</title><rect x="42.2906%" y="261" width="3.1111%" height="15" fill="rgb(217,125,39)" fg:x="1237" fg:w="91"/><text x="42.5406%" y="271.50">lib..</text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.10%)</title><rect x="45.4017%" y="261" width="0.1026%" height="15" fill="rgb(235,36,10)" fg:x="1328" fg:w="3"/><text x="45.6517%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="45.4701%" y="245" width="0.0342%" height="15" fill="rgb(251,123,47)" fg:x="1330" fg:w="1"/><text x="45.7201%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="45.4701%" y="229" width="0.0342%" height="15" fill="rgb(221,13,13)" fg:x="1330" fg:w="1"/><text x="45.7201%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="45.6068%" y="229" width="0.0342%" height="15" fill="rgb(238,131,9)" fg:x="1334" fg:w="1"/><text x="45.8568%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.17%)</title><rect x="45.5043%" y="261" width="0.1709%" height="15" fill="rgb(211,50,8)" fg:x="1331" fg:w="5"/><text x="45.7543%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.10%)</title><rect x="45.5726%" y="245" width="0.1026%" height="15" fill="rgb(245,182,24)" fg:x="1333" fg:w="3"/><text x="45.8226%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="45.6410%" y="229" width="0.0342%" height="15" fill="rgb(242,14,37)" fg:x="1335" fg:w="1"/><text x="45.8910%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="45.6752%" y="261" width="0.0342%" height="15" fill="rgb(246,228,12)" fg:x="1336" fg:w="1"/><text x="45.9252%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.07%)</title><rect x="45.7094%" y="261" width="0.0684%" height="15" fill="rgb(213,55,15)" fg:x="1337" fg:w="2"/><text x="45.9594%" y="271.50"></text></g><g><title>web-server`DYLD-STUB$$free (1 samples, 0.03%)</title><rect x="45.7778%" y="261" width="0.0342%" height="15" fill="rgb(209,9,3)" fg:x="1339" fg:w="1"/><text x="46.0278%" y="271.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::binary::transform_recv&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},i64,i64&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="45.8120%" y="261" width="0.0342%" height="15" fill="rgb(230,59,30)" fg:x="1340" fg:w="1"/><text x="46.0620%" y="271.50"></text></g><g><title>web-server`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::unary::transform_send&lt;web_server::web_server::WebServer::run_multi_threaded::{{closure}},web_server::request::Request&gt;::{{closure}}&gt; (1 samples, 0.03%)</title><rect x="45.8462%" y="261" width="0.0342%" height="15" fill="rgb(209,121,21)" fg:x="1341" fg:w="1"/><text x="46.0962%" y="271.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (1 samples, 0.03%)</title><rect x="45.8462%" y="245" width="0.0342%" height="15" fill="rgb(220,109,13)" fg:x="1341" fg:w="1"/><text x="46.0962%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="46.2222%" y="197" width="0.0342%" height="15" fill="rgb(232,18,1)" fg:x="1352" fg:w="1"/><text x="46.4722%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.31%)</title><rect x="46.0513%" y="245" width="0.3077%" height="15" fill="rgb(215,41,42)" fg:x="1347" fg:w="9"/><text x="46.3013%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.24%)</title><rect x="46.1197%" y="229" width="0.2393%" height="15" fill="rgb(224,123,36)" fg:x="1349" fg:w="7"/><text x="46.3697%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.24%)</title><rect x="46.1197%" y="213" width="0.2393%" height="15" fill="rgb(240,125,3)" fg:x="1349" fg:w="7"/><text x="46.3697%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.10%)</title><rect x="46.2564%" y="197" width="0.1026%" height="15" fill="rgb(205,98,50)" fg:x="1353" fg:w="3"/><text x="46.5064%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.03%)</title><rect x="46.3590%" y="245" width="0.0342%" height="15" fill="rgb(205,185,37)" fg:x="1356" fg:w="1"/><text x="46.6090%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.07%)</title><rect x="46.3932%" y="245" width="0.0684%" height="15" fill="rgb(238,207,15)" fg:x="1357" fg:w="2"/><text x="46.6432%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (2 samples, 0.07%)</title><rect x="46.5641%" y="229" width="0.0684%" height="15" fill="rgb(213,199,42)" fg:x="1362" fg:w="2"/><text x="46.8141%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.10%)</title><rect x="46.6667%" y="213" width="0.1026%" height="15" fill="rgb(235,201,11)" fg:x="1365" fg:w="3"/><text x="46.9167%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.34%)</title><rect x="46.4615%" y="245" width="0.3419%" height="15" fill="rgb(207,46,11)" fg:x="1359" fg:w="10"/><text x="46.7115%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.17%)</title><rect x="46.6325%" y="229" width="0.1709%" height="15" fill="rgb(241,35,35)" fg:x="1364" fg:w="5"/><text x="46.8825%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="46.7692%" y="213" width="0.0342%" height="15" fill="rgb(243,32,47)" fg:x="1368" fg:w="1"/><text x="47.0192%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.03%)</title><rect x="46.8034%" y="245" width="0.0342%" height="15" fill="rgb(247,202,23)" fg:x="1369" fg:w="1"/><text x="47.0534%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="46.8376%" y="245" width="0.0342%" height="15" fill="rgb(219,102,11)" fg:x="1370" fg:w="1"/><text x="47.0876%" y="255.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (1 samples, 0.03%)</title><rect x="46.8718%" y="245" width="0.0342%" height="15" fill="rgb(243,110,44)" fg:x="1371" fg:w="1"/><text x="47.1218%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.17%)</title><rect x="46.9744%" y="229" width="0.1709%" height="15" fill="rgb(222,74,54)" fg:x="1374" fg:w="5"/><text x="47.2244%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.10%)</title><rect x="47.0427%" y="213" width="0.1026%" height="15" fill="rgb(216,99,12)" fg:x="1376" fg:w="3"/><text x="47.2927%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.10%)</title><rect x="47.0427%" y="197" width="0.1026%" height="15" fill="rgb(226,22,26)" fg:x="1376" fg:w="3"/><text x="47.2927%" y="207.50"></text></g><g><title>web-server`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.03%)</title><rect x="47.1795%" y="213" width="0.0342%" height="15" fill="rgb(217,163,10)" fg:x="1380" fg:w="1"/><text x="47.4295%" y="223.50"></text></g><g><title>web-server`hashbrown::map::make_hash (4 samples, 0.14%)</title><rect x="47.2137%" y="213" width="0.1368%" height="15" fill="rgb(213,25,53)" fg:x="1381" fg:w="4"/><text x="47.4637%" y="223.50"></text></g><g><title>web-server`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.10%)</title><rect x="47.2479%" y="197" width="0.1026%" height="15" fill="rgb(252,105,26)" fg:x="1382" fg:w="3"/><text x="47.4979%" y="207.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.48%)</title><rect x="46.9060%" y="245" width="0.4786%" height="15" fill="rgb(220,39,43)" fg:x="1372" fg:w="14"/><text x="47.1560%" y="255.50"></text></g><g><title>web-server`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.24%)</title><rect x="47.1453%" y="229" width="0.2393%" height="15" fill="rgb(229,68,48)" fg:x="1379" fg:w="7"/><text x="47.3953%" y="239.50"></text></g><g><title>web-server`rusty_junctions::bag::Bag&lt;K,V&gt;::count_items (1 samples, 0.03%)</title><rect x="47.3504%" y="213" width="0.0342%" height="15" fill="rgb(252,8,32)" fg:x="1385" fg:w="1"/><text x="47.6004%" y="223.50"></text></g><g><title>web-server`hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="47.3504%" y="197" width="0.0342%" height="15" fill="rgb(223,20,43)" fg:x="1385" fg:w="1"/><text x="47.6004%" y="207.50"></text></g><g><title>web-server`core::slice::sort::recurse (1 samples, 0.03%)</title><rect x="47.3846%" y="245" width="0.0342%" height="15" fill="rgb(229,81,49)" fg:x="1386" fg:w="1"/><text x="47.6346%" y="255.50"></text></g><g><title>web-server`hashbrown::map::make_hash (2 samples, 0.07%)</title><rect x="47.4188%" y="245" width="0.0684%" height="15" fill="rgb(236,28,36)" fg:x="1387" fg:w="2"/><text x="47.6688%" y="255.50"></text></g><g><title>web-server`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.03%)</title><rect x="47.4530%" y="229" width="0.0342%" height="15" fill="rgb(249,185,26)" fg:x="1388" fg:w="1"/><text x="47.7030%" y="239.50"></text></g><g><title>web-server`hashbrown::map::make_insert_hash (4 samples, 0.14%)</title><rect x="47.4872%" y="245" width="0.1368%" height="15" fill="rgb(249,174,33)" fg:x="1389" fg:w="4"/><text x="47.7372%" y="255.50"></text></g><g><title>web-server`rusty_junctions::bag::Bag&lt;K,V&gt;::add (11 samples, 0.38%)</title><rect x="47.6239%" y="245" width="0.3761%" height="15" fill="rgb(233,201,37)" fg:x="1393" fg:w="11"/><text x="47.8739%" y="255.50"></text></g><g><title>web-server`hashbrown::map::make_hash (7 samples, 0.24%)</title><rect x="47.7607%" y="229" width="0.2393%" height="15" fill="rgb(221,78,26)" fg:x="1397" fg:w="7"/><text x="48.0107%" y="239.50"></text></g><g><title>web-server`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.03%)</title><rect x="47.9658%" y="213" width="0.0342%" height="15" fill="rgb(250,127,30)" fg:x="1403" fg:w="1"/><text x="48.2158%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (2 samples, 0.07%)</title><rect x="48.0342%" y="229" width="0.0684%" height="15" fill="rgb(230,49,44)" fg:x="1405" fg:w="2"/><text x="48.2842%" y="239.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::binary::FnBoxClone&gt;::clone_box (1 samples, 0.03%)</title><rect x="48.1026%" y="229" width="0.0342%" height="15" fill="rgb(229,67,23)" fg:x="1407" fg:w="1"/><text x="48.3526%" y="239.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="48.1026%" y="213" width="0.0342%" height="15" fill="rgb(249,83,47)" fg:x="1407" fg:w="1"/><text x="48.3526%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.14%)</title><rect x="48.1709%" y="213" width="0.1368%" height="15" fill="rgb(215,43,3)" fg:x="1409" fg:w="4"/><text x="48.4209%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="48.2393%" y="197" width="0.0684%" height="15" fill="rgb(238,154,13)" fg:x="1411" fg:w="2"/><text x="48.4893%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="48.2393%" y="181" width="0.0684%" height="15" fill="rgb(219,56,2)" fg:x="1411" fg:w="2"/><text x="48.4893%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="48.2735%" y="165" width="0.0342%" height="15" fill="rgb(233,0,4)" fg:x="1412" fg:w="1"/><text x="48.5235%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (57 samples, 1.95%)</title><rect x="48.3419%" y="197" width="1.9487%" height="15" fill="rgb(235,30,7)" fg:x="1414" fg:w="57"/><text x="48.5919%" y="207.50">l..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.03%)</title><rect x="50.2906%" y="197" width="0.0342%" height="15" fill="rgb(250,79,13)" fg:x="1471" fg:w="1"/><text x="50.5406%" y="207.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_no_tsd (1 samples, 0.03%)</title><rect x="50.3248%" y="197" width="0.0342%" height="15" fill="rgb(211,146,34)" fg:x="1472" fg:w="1"/><text x="50.5748%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (39 samples, 1.33%)</title><rect x="51.6239%" y="181" width="1.3333%" height="15" fill="rgb(228,22,38)" fg:x="1510" fg:w="39"/><text x="51.8739%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (28 samples, 0.96%)</title><rect x="52.9573%" y="181" width="0.9573%" height="15" fill="rgb(235,168,5)" fg:x="1549" fg:w="28"/><text x="53.2073%" y="191.50"></text></g><g><title>web-server`std::sys::unix::thread::Thread::new (165 samples, 5.64%)</title><rect x="48.3077%" y="213" width="5.6410%" height="15" fill="rgb(221,155,16)" fg:x="1413" fg:w="165"/><text x="48.5577%" y="223.50">web-ser..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (105 samples, 3.59%)</title><rect x="50.3590%" y="197" width="3.5897%" height="15" fill="rgb(215,215,53)" fg:x="1473" fg:w="105"/><text x="50.6090%" y="207.50">libs..</text></g><g><title>libsystem_kernel.dylib`mach_vm_map (1 samples, 0.03%)</title><rect x="53.9145%" y="181" width="0.0342%" height="15" fill="rgb(223,4,10)" fg:x="1577" fg:w="1"/><text x="54.1645%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="53.9487%" y="197" width="0.0684%" height="15" fill="rgb(234,103,6)" fg:x="1578" fg:w="2"/><text x="54.1987%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="53.9487%" y="181" width="0.0684%" height="15" fill="rgb(227,97,0)" fg:x="1578" fg:w="2"/><text x="54.1987%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="53.9487%" y="165" width="0.0684%" height="15" fill="rgb(234,150,53)" fg:x="1578" fg:w="2"/><text x="54.1987%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.03%)</title><rect x="53.9829%" y="149" width="0.0342%" height="15" fill="rgb(228,201,54)" fg:x="1579" fg:w="1"/><text x="54.2329%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="54.0171%" y="197" width="0.0342%" height="15" fill="rgb(222,22,37)" fg:x="1580" fg:w="1"/><text x="54.2671%" y="207.50"></text></g><g><title>web-server`rusty_junctions::patterns::binary::SendJoinPattern::fire (179 samples, 6.12%)</title><rect x="48.0000%" y="245" width="6.1197%" height="15" fill="rgb(237,53,32)" fg:x="1404" fg:w="179"/><text x="48.2500%" y="255.50">web-serv..</text></g><g><title>web-server`std::thread::spawn (175 samples, 5.98%)</title><rect x="48.1368%" y="229" width="5.9829%" height="15" fill="rgb(233,25,53)" fg:x="1408" fg:w="175"/><text x="48.3868%" y="239.50">web-serv..</text></g><g><title>web-server`std::thread::Thread::new (5 samples, 0.17%)</title><rect x="53.9487%" y="213" width="0.1709%" height="15" fill="rgb(210,40,34)" fg:x="1578" fg:w="5"/><text x="54.1987%" y="223.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (2 samples, 0.07%)</title><rect x="54.0513%" y="197" width="0.0684%" height="15" fill="rgb(241,220,44)" fg:x="1581" fg:w="2"/><text x="54.3013%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="54.0513%" y="181" width="0.0684%" height="15" fill="rgb(235,28,35)" fg:x="1581" fg:w="2"/><text x="54.3013%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="54.0513%" y="165" width="0.0684%" height="15" fill="rgb(210,56,17)" fg:x="1581" fg:w="2"/><text x="54.3013%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="54.0513%" y="149" width="0.0684%" height="15" fill="rgb(224,130,29)" fg:x="1581" fg:w="2"/><text x="54.3013%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (6 samples, 0.21%)</title><rect x="54.1880%" y="229" width="0.2051%" height="15" fill="rgb(235,212,8)" fg:x="1585" fg:w="6"/><text x="54.4380%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="54.3590%" y="213" width="0.0342%" height="15" fill="rgb(223,33,50)" fg:x="1590" fg:w="1"/><text x="54.6090%" y="223.50"></text></g><g><title>web-server`&lt;F as rusty_junctions::types::functions::unary::FnBoxClone&gt;::clone_box (1 samples, 0.03%)</title><rect x="54.3932%" y="229" width="0.0342%" height="15" fill="rgb(219,149,13)" fg:x="1591" fg:w="1"/><text x="54.6432%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="54.3932%" y="213" width="0.0342%" height="15" fill="rgb(250,156,29)" fg:x="1591" fg:w="1"/><text x="54.6432%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="54.3932%" y="197" width="0.0342%" height="15" fill="rgb(216,193,19)" fg:x="1591" fg:w="1"/><text x="54.6432%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="54.3932%" y="181" width="0.0342%" height="15" fill="rgb(216,135,14)" fg:x="1591" fg:w="1"/><text x="54.6432%" y="191.50"></text></g><g><title>web-server`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="54.4274%" y="229" width="0.0342%" height="15" fill="rgb(241,47,5)" fg:x="1592" fg:w="1"/><text x="54.6774%" y="239.50"></text></g><g><title>web-server`std::sys_common::thread::min_stack (1 samples, 0.03%)</title><rect x="54.4615%" y="229" width="0.0342%" height="15" fill="rgb(233,42,35)" fg:x="1593" fg:w="1"/><text x="54.7115%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.03%)</title><rect x="54.6325%" y="165" width="0.0342%" height="15" fill="rgb(231,13,6)" fg:x="1598" fg:w="1"/><text x="54.8825%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="54.6667%" y="165" width="0.0342%" height="15" fill="rgb(207,181,40)" fg:x="1599" fg:w="1"/><text x="54.9167%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.10%)</title><rect x="54.6325%" y="213" width="0.1026%" height="15" fill="rgb(254,173,49)" fg:x="1598" fg:w="3"/><text x="54.8825%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.10%)</title><rect x="54.6325%" y="197" width="0.1026%" height="15" fill="rgb(221,1,38)" fg:x="1598" fg:w="3"/><text x="54.8825%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.10%)</title><rect x="54.6325%" y="181" width="0.1026%" height="15" fill="rgb(206,124,46)" fg:x="1598" fg:w="3"/><text x="54.8825%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.03%)</title><rect x="54.7009%" y="165" width="0.0342%" height="15" fill="rgb(249,21,11)" fg:x="1600" fg:w="1"/><text x="54.9509%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_destroy (1 samples, 0.03%)</title><rect x="54.7350%" y="213" width="0.0342%" height="15" fill="rgb(222,201,40)" fg:x="1601" fg:w="1"/><text x="54.9850%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_init (1 samples, 0.03%)</title><rect x="54.7692%" y="213" width="0.0342%" height="15" fill="rgb(235,61,29)" fg:x="1602" fg:w="1"/><text x="55.0192%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_setstacksize (1 samples, 0.03%)</title><rect x="54.8034%" y="213" width="0.0342%" height="15" fill="rgb(219,207,3)" fg:x="1603" fg:w="1"/><text x="55.0534%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (102 samples, 3.49%)</title><rect x="54.8718%" y="197" width="3.4872%" height="15" fill="rgb(222,56,46)" fg:x="1605" fg:w="102"/><text x="55.1218%" y="207.50">lib..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.10%)</title><rect x="58.3590%" y="197" width="0.1026%" height="15" fill="rgb(239,76,54)" fg:x="1707" fg:w="3"/><text x="58.6090%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="58.3932%" y="181" width="0.0684%" height="15" fill="rgb(231,124,27)" fg:x="1708" fg:w="2"/><text x="58.6432%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="58.3932%" y="165" width="0.0684%" height="15" fill="rgb(249,195,6)" fg:x="1708" fg:w="2"/><text x="58.6432%" y="175.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_no_tsd (1 samples, 0.03%)</title><rect x="58.4615%" y="197" width="0.0342%" height="15" fill="rgb(237,174,47)" fg:x="1710" fg:w="1"/><text x="58.7115%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="61.5726%" y="181" width="0.0342%" height="15" fill="rgb(206,201,31)" fg:x="1801" fg:w="1"/><text x="61.8226%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (82 samples, 2.80%)</title><rect x="61.6068%" y="181" width="2.8034%" height="15" fill="rgb(231,57,52)" fg:x="1802" fg:w="82"/><text x="61.8568%" y="191.50">li..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (53 samples, 1.81%)</title><rect x="64.4103%" y="181" width="1.8120%" height="15" fill="rgb(248,177,22)" fg:x="1884" fg:w="53"/><text x="64.6603%" y="191.50">l..</text></g><g><title>web-server`std::sys::unix::thread::Thread::new (334 samples, 11.42%)</title><rect x="54.8376%" y="213" width="11.4188%" height="15" fill="rgb(215,211,37)" fg:x="1604" fg:w="334"/><text x="55.0876%" y="223.50">web-server`std::s..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (227 samples, 7.76%)</title><rect x="58.4957%" y="197" width="7.7607%" height="15" fill="rgb(241,128,51)" fg:x="1711" fg:w="227"/><text x="58.7457%" y="207.50">libsystem_p..</text></g><g><title>libsystem_kernel.dylib`mach_vm_protect (1 samples, 0.03%)</title><rect x="66.2222%" y="181" width="0.0342%" height="15" fill="rgb(227,165,31)" fg:x="1937" fg:w="1"/><text x="66.4722%" y="191.50"></text></g><g><title>web-server`std::sys_common::thread::min_stack (1 samples, 0.03%)</title><rect x="66.2564%" y="213" width="0.0342%" height="15" fill="rgb(228,167,24)" fg:x="1938" fg:w="1"/><text x="66.5064%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="66.2906%" y="197" width="0.0342%" height="15" fill="rgb(228,143,12)" fg:x="1939" fg:w="1"/><text x="66.5406%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="66.2906%" y="181" width="0.0342%" height="15" fill="rgb(249,149,8)" fg:x="1939" fg:w="1"/><text x="66.5406%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="66.2906%" y="165" width="0.0342%" height="15" fill="rgb(243,35,44)" fg:x="1939" fg:w="1"/><text x="66.5406%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="66.2906%" y="149" width="0.0342%" height="15" fill="rgb(246,89,9)" fg:x="1939" fg:w="1"/><text x="66.5406%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="66.3248%" y="197" width="0.0342%" height="15" fill="rgb(233,213,13)" fg:x="1940" fg:w="1"/><text x="66.5748%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="66.3590%" y="197" width="0.0342%" height="15" fill="rgb(233,141,41)" fg:x="1941" fg:w="1"/><text x="66.6090%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutexattr_init (1 samples, 0.03%)</title><rect x="66.3932%" y="197" width="0.0342%" height="15" fill="rgb(239,167,4)" fg:x="1942" fg:w="1"/><text x="66.6432%" y="207.50"></text></g><g><title>web-server`rusty_junctions::patterns::unary::SendJoinPattern::fire (362 samples, 12.38%)</title><rect x="54.1197%" y="245" width="12.3761%" height="15" fill="rgb(209,217,16)" fg:x="1583" fg:w="362"/><text x="54.3697%" y="255.50">web-server`rusty_j..</text></g><g><title>web-server`std::thread::spawn (351 samples, 12.00%)</title><rect x="54.4957%" y="229" width="12.0000%" height="15" fill="rgb(219,88,35)" fg:x="1594" fg:w="351"/><text x="54.7457%" y="239.50">web-server`std::th..</text></g><g><title>web-server`std::thread::Thread::new (6 samples, 0.21%)</title><rect x="66.2906%" y="213" width="0.2051%" height="15" fill="rgb(220,193,23)" fg:x="1939" fg:w="6"/><text x="66.5406%" y="223.50"></text></g><g><title>web-server`std::sys_common::mutex::MovableMutex::new (2 samples, 0.07%)</title><rect x="66.4274%" y="197" width="0.0684%" height="15" fill="rgb(230,90,52)" fg:x="1943" fg:w="2"/><text x="66.6774%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="66.4274%" y="181" width="0.0684%" height="15" fill="rgb(252,106,19)" fg:x="1943" fg:w="2"/><text x="66.6774%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="66.4274%" y="165" width="0.0684%" height="15" fill="rgb(206,74,20)" fg:x="1943" fg:w="2"/><text x="66.6774%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="66.4274%" y="149" width="0.0684%" height="15" fill="rgb(230,138,44)" fg:x="1943" fg:w="2"/><text x="66.6774%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="66.4615%" y="133" width="0.0342%" height="15" fill="rgb(235,182,43)" fg:x="1944" fg:w="1"/><text x="66.7115%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.03%)</title><rect x="66.6325%" y="197" width="0.0342%" height="15" fill="rgb(242,16,51)" fg:x="1949" fg:w="1"/><text x="66.8825%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.10%)</title><rect x="66.6667%" y="197" width="0.1026%" height="15" fill="rgb(248,9,4)" fg:x="1950" fg:w="3"/><text x="66.9167%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.07%)</title><rect x="66.7009%" y="181" width="0.0684%" height="15" fill="rgb(210,31,22)" fg:x="1951" fg:w="2"/><text x="66.9509%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.07%)</title><rect x="66.7009%" y="165" width="0.0684%" height="15" fill="rgb(239,54,39)" fg:x="1951" fg:w="2"/><text x="66.9509%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.07%)</title><rect x="66.7692%" y="197" width="0.0684%" height="15" fill="rgb(230,99,41)" fg:x="1953" fg:w="2"/><text x="67.0192%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="66.8034%" y="181" width="0.0342%" height="15" fill="rgb(253,106,12)" fg:x="1954" fg:w="1"/><text x="67.0534%" y="191.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.03%)</title><rect x="66.8376%" y="197" width="0.0342%" height="15" fill="rgb(213,46,41)" fg:x="1955" fg:w="1"/><text x="67.0876%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (25 samples, 0.85%)</title><rect x="67.0085%" y="181" width="0.8547%" height="15" fill="rgb(215,133,35)" fg:x="1960" fg:w="25"/><text x="67.2585%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (3 samples, 0.10%)</title><rect x="67.8632%" y="181" width="0.1026%" height="15" fill="rgb(213,28,5)" fg:x="1985" fg:w="3"/><text x="68.1132%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.07%)</title><rect x="67.8974%" y="165" width="0.0684%" height="15" fill="rgb(215,77,49)" fg:x="1986" fg:w="2"/><text x="68.1474%" y="175.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::WaitToken::wait (41 samples, 1.40%)</title><rect x="66.6325%" y="213" width="1.4017%" height="15" fill="rgb(248,100,22)" fg:x="1949" fg:w="41"/><text x="66.8825%" y="223.50"></text></g><g><title>web-server`std::thread::park (34 samples, 1.16%)</title><rect x="66.8718%" y="197" width="1.1624%" height="15" fill="rgb(208,67,9)" fg:x="1956" fg:w="34"/><text x="67.1218%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (2 samples, 0.07%)</title><rect x="67.9658%" y="181" width="0.0684%" height="15" fill="rgb(219,133,21)" fg:x="1988" fg:w="2"/><text x="68.2158%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.03%)</title><rect x="68.0342%" y="197" width="0.0342%" height="15" fill="rgb(246,46,29)" fg:x="1990" fg:w="1"/><text x="68.2842%" y="207.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::tokens (2 samples, 0.07%)</title><rect x="68.0342%" y="213" width="0.0684%" height="15" fill="rgb(246,185,52)" fg:x="1990" fg:w="2"/><text x="68.2842%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="68.0684%" y="197" width="0.0342%" height="15" fill="rgb(252,136,11)" fg:x="1991" fg:w="1"/><text x="68.3184%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="68.0684%" y="181" width="0.0342%" height="15" fill="rgb(219,138,53)" fg:x="1991" fg:w="1"/><text x="68.3184%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="68.0684%" y="165" width="0.0342%" height="15" fill="rgb(211,51,23)" fg:x="1991" fg:w="1"/><text x="68.3184%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="68.2051%" y="181" width="0.0342%" height="15" fill="rgb(247,221,28)" fg:x="1995" fg:w="1"/><text x="68.4551%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="68.2051%" y="165" width="0.0342%" height="15" fill="rgb(251,222,45)" fg:x="1995" fg:w="1"/><text x="68.4551%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.03%)</title><rect x="68.2051%" y="149" width="0.0342%" height="15" fill="rgb(217,162,53)" fg:x="1995" fg:w="1"/><text x="68.4551%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.03%)</title><rect x="68.3077%" y="165" width="0.0342%" height="15" fill="rgb(229,93,14)" fg:x="1998" fg:w="1"/><text x="68.5577%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="68.4444%" y="149" width="0.0342%" height="15" fill="rgb(209,67,49)" fg:x="2002" fg:w="1"/><text x="68.6944%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.27%)</title><rect x="68.2393%" y="181" width="0.2735%" height="15" fill="rgb(213,87,29)" fg:x="1996" fg:w="8"/><text x="68.4893%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.17%)</title><rect x="68.3419%" y="165" width="0.1709%" height="15" fill="rgb(205,151,52)" fg:x="1999" fg:w="5"/><text x="68.5919%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="68.4786%" y="149" width="0.0342%" height="15" fill="rgb(253,215,39)" fg:x="2003" fg:w="1"/><text x="68.7286%" y="159.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (13 samples, 0.44%)</title><rect x="68.1026%" y="213" width="0.4444%" height="15" fill="rgb(221,220,41)" fg:x="1992" fg:w="13"/><text x="68.3526%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (12 samples, 0.41%)</title><rect x="68.1368%" y="197" width="0.4103%" height="15" fill="rgb(218,133,21)" fg:x="1993" fg:w="12"/><text x="68.3868%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__ulock_wake (1 samples, 0.03%)</title><rect x="68.5128%" y="181" width="0.0342%" height="15" fill="rgb(221,193,43)" fg:x="2004" fg:w="1"/><text x="68.7628%" y="191.50"></text></g><g><title>web-server`std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.03%)</title><rect x="68.5470%" y="213" width="0.0342%" height="15" fill="rgb(240,128,52)" fg:x="2005" fg:w="1"/><text x="68.7970%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (62 samples, 2.12%)</title><rect x="66.4957%" y="245" width="2.1197%" height="15" fill="rgb(253,114,12)" fg:x="1945" fg:w="62"/><text x="66.7457%" y="255.50">w..</text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (60 samples, 2.05%)</title><rect x="66.5641%" y="229" width="2.0513%" height="15" fill="rgb(215,223,47)" fg:x="1947" fg:w="60"/><text x="66.8141%" y="239.50">w..</text></g><g><title>web-server`std::thread::park (1 samples, 0.03%)</title><rect x="68.5812%" y="213" width="0.0342%" height="15" fill="rgb(248,225,23)" fg:x="2006" fg:w="1"/><text x="68.8312%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (1 samples, 0.03%)</title><rect x="68.6154%" y="245" width="0.0342%" height="15" fill="rgb(250,108,0)" fg:x="2007" fg:w="1"/><text x="68.8654%" y="255.50"></text></g><g><title>web-server`rusty_junctions::controller::Controller::handle_packets (667 samples, 22.80%)</title><rect x="45.8803%" y="261" width="22.8034%" height="15" fill="rgb(228,208,7)" fg:x="1342" fg:w="667"/><text x="46.1303%" y="271.50">web-server`rusty_junctions::controll..</text></g><g><title>web-server`std::thread::spawn (1 samples, 0.03%)</title><rect x="68.6496%" y="245" width="0.0342%" height="15" fill="rgb(244,45,10)" fg:x="2008" fg:w="1"/><text x="68.8996%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="68.7179%" y="245" width="0.0684%" height="15" fill="rgb(207,125,25)" fg:x="2010" fg:w="2"/><text x="68.9679%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="68.7179%" y="229" width="0.0684%" height="15" fill="rgb(210,195,18)" fg:x="2010" fg:w="2"/><text x="68.9679%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="68.7179%" y="213" width="0.0684%" height="15" fill="rgb(249,80,12)" fg:x="2010" fg:w="2"/><text x="68.9679%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="68.7521%" y="197" width="0.0342%" height="15" fill="rgb(221,65,9)" fg:x="2011" fg:w="1"/><text x="69.0021%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.07%)</title><rect x="68.7863%" y="245" width="0.0684%" height="15" fill="rgb(235,49,36)" fg:x="2012" fg:w="2"/><text x="69.0363%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="68.8889%" y="213" width="0.0342%" height="15" fill="rgb(225,32,20)" fg:x="2015" fg:w="1"/><text x="69.1389%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.10%)</title><rect x="68.8547%" y="245" width="0.1026%" height="15" fill="rgb(215,141,46)" fg:x="2014" fg:w="3"/><text x="69.1047%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.10%)</title><rect x="68.8547%" y="229" width="0.1026%" height="15" fill="rgb(250,160,47)" fg:x="2014" fg:w="3"/><text x="69.1047%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="68.9231%" y="213" width="0.0342%" height="15" fill="rgb(216,222,40)" fg:x="2016" fg:w="1"/><text x="69.1731%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="69.0256%" y="213" width="0.0342%" height="15" fill="rgb(234,217,39)" fg:x="2019" fg:w="1"/><text x="69.2756%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="69.0256%" y="197" width="0.0342%" height="15" fill="rgb(207,178,40)" fg:x="2019" fg:w="1"/><text x="69.2756%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="69.0256%" y="181" width="0.0342%" height="15" fill="rgb(221,136,13)" fg:x="2019" fg:w="1"/><text x="69.2756%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.03%)</title><rect x="69.0256%" y="165" width="0.0342%" height="15" fill="rgb(249,199,10)" fg:x="2019" fg:w="1"/><text x="69.2756%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (10 samples, 0.34%)</title><rect x="69.0598%" y="197" width="0.3419%" height="15" fill="rgb(249,222,13)" fg:x="2020" fg:w="10"/><text x="69.3098%" y="207.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (14 samples, 0.48%)</title><rect x="68.9573%" y="245" width="0.4786%" height="15" fill="rgb(244,185,38)" fg:x="2017" fg:w="14"/><text x="69.2073%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (14 samples, 0.48%)</title><rect x="68.9573%" y="229" width="0.4786%" height="15" fill="rgb(236,202,9)" fg:x="2017" fg:w="14"/><text x="69.2073%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (11 samples, 0.38%)</title><rect x="69.0598%" y="213" width="0.3761%" height="15" fill="rgb(250,229,37)" fg:x="2020" fg:w="11"/><text x="69.3098%" y="223.50"></text></g><g><title>web-server`std::sys_common::thread_parker::generic::Parker::unpark (1 samples, 0.03%)</title><rect x="69.4017%" y="197" width="0.0342%" height="15" fill="rgb(206,174,23)" fg:x="2030" fg:w="1"/><text x="69.6517%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.03%)</title><rect x="69.4017%" y="181" width="0.0342%" height="15" fill="rgb(211,33,43)" fg:x="2030" fg:w="1"/><text x="69.6517%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (41 samples, 1.40%)</title><rect x="69.5726%" y="197" width="1.4017%" height="15" fill="rgb(245,58,50)" fg:x="2035" fg:w="41"/><text x="69.8226%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_reply_port (12 samples, 0.41%)</title><rect x="70.9744%" y="197" width="0.4103%" height="15" fill="rgb(244,68,36)" fg:x="2076" fg:w="12"/><text x="71.2244%" y="207.50"></text></g><g><title>libsystem_c.dylib`nanosleep (58 samples, 1.98%)</title><rect x="69.4359%" y="229" width="1.9829%" height="15" fill="rgb(232,229,15)" fg:x="2031" fg:w="58"/><text x="69.6859%" y="239.50">l..</text></g><g><title>libsystem_kernel.dylib`clock_get_time (55 samples, 1.88%)</title><rect x="69.5385%" y="213" width="1.8803%" height="15" fill="rgb(254,30,23)" fg:x="2034" fg:w="55"/><text x="69.7885%" y="223.50">l..</text></g><g><title>libsystem_kernel.dylib`mig_get_reply_port (1 samples, 0.03%)</title><rect x="71.3846%" y="197" width="0.0342%" height="15" fill="rgb(235,160,14)" fg:x="2088" fg:w="1"/><text x="71.6346%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (34 samples, 1.16%)</title><rect x="71.4188%" y="229" width="1.1624%" height="15" fill="rgb(212,155,44)" fg:x="2089" fg:w="34"/><text x="71.6688%" y="239.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::binary::transform_send::_{{closure}} (117 samples, 4.00%)</title><rect x="68.6838%" y="261" width="4.0000%" height="15" fill="rgb(226,2,50)" fg:x="2009" fg:w="117"/><text x="68.9338%" y="271.50">web-..</text></g><g><title>web-server`std::thread::sleep (95 samples, 3.25%)</title><rect x="69.4359%" y="245" width="3.2479%" height="15" fill="rgb(234,177,6)" fg:x="2031" fg:w="95"/><text x="69.6859%" y="255.50">web..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (3 samples, 0.10%)</title><rect x="72.5812%" y="229" width="0.1026%" height="15" fill="rgb(217,24,9)" fg:x="2123" fg:w="3"/><text x="72.8312%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (13 samples, 0.44%)</title><rect x="72.8205%" y="245" width="0.4444%" height="15" fill="rgb(220,13,46)" fg:x="2130" fg:w="13"/><text x="73.0705%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.10%)</title><rect x="73.2650%" y="245" width="0.1026%" height="15" fill="rgb(239,221,27)" fg:x="2143" fg:w="3"/><text x="73.5150%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.10%)</title><rect x="73.2650%" y="229" width="0.1026%" height="15" fill="rgb(222,198,25)" fg:x="2143" fg:w="3"/><text x="73.5150%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="73.2991%" y="213" width="0.0684%" height="15" fill="rgb(211,99,13)" fg:x="2144" fg:w="2"/><text x="73.5491%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="73.3333%" y="197" width="0.0342%" height="15" fill="rgb(232,111,31)" fg:x="2145" fg:w="1"/><text x="73.5833%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.03%)</title><rect x="73.3675%" y="245" width="0.0342%" height="15" fill="rgb(245,82,37)" fg:x="2146" fg:w="1"/><text x="73.6175%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.10%)</title><rect x="73.4017%" y="245" width="0.1026%" height="15" fill="rgb(227,149,46)" fg:x="2147" fg:w="3"/><text x="73.6517%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.10%)</title><rect x="73.4017%" y="229" width="0.1026%" height="15" fill="rgb(218,36,50)" fg:x="2147" fg:w="3"/><text x="73.6517%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="73.4701%" y="213" width="0.0342%" height="15" fill="rgb(226,80,48)" fg:x="2149" fg:w="1"/><text x="73.7201%" y="223.50"></text></g><g><title>web-server`__rdl_dealloc (1 samples, 0.03%)</title><rect x="73.5043%" y="245" width="0.0342%" height="15" fill="rgb(238,224,15)" fg:x="2150" fg:w="1"/><text x="73.7543%" y="255.50"></text></g><g><title>web-server`_dyld_private (1 samples, 0.03%)</title><rect x="73.5385%" y="245" width="0.0342%" height="15" fill="rgb(241,136,10)" fg:x="2151" fg:w="1"/><text x="73.7885%" y="255.50"></text></g><g><title>libdyld.dylib`dyld_stub_binder (1 samples, 0.03%)</title><rect x="73.5385%" y="229" width="0.0342%" height="15" fill="rgb(208,32,45)" fg:x="2151" fg:w="1"/><text x="73.7885%" y="239.50"></text></g><g><title>libdyld.dylib`_dyld_fast_stub_entry(void*, long) (1 samples, 0.03%)</title><rect x="73.5385%" y="213" width="0.0342%" height="15" fill="rgb(207,135,9)" fg:x="2151" fg:w="1"/><text x="73.7885%" y="223.50"></text></g><g><title>dyld`dyld::fastBindLazySymbol (1 samples, 0.03%)</title><rect x="73.5385%" y="197" width="0.0342%" height="15" fill="rgb(206,86,44)" fg:x="2151" fg:w="1"/><text x="73.7885%" y="207.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::doBindFastLazySymbol(unsigned int, ImageLoader::LinkContext const&amp;, void (*)(), void (*) (1 samples, 0.03%)</title><rect x="73.5385%" y="181" width="0.0342%" height="15" fill="rgb(245,177,15)" fg:x="2151" fg:w="1"/><text x="73.7885%" y="191.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolve (1 samples, 0.03%)</title><rect x="73.5385%" y="165" width="0.0342%" height="15" fill="rgb(206,64,50)" fg:x="2151" fg:w="1"/><text x="73.7885%" y="175.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::resolveTwolevel (1 samples, 0.03%)</title><rect x="73.5385%" y="149" width="0.0342%" height="15" fill="rgb(234,36,40)" fg:x="2151" fg:w="1"/><text x="73.7885%" y="159.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolAddress (1 samples, 0.03%)</title><rect x="73.5385%" y="133" width="0.0342%" height="15" fill="rgb(213,64,8)" fg:x="2151" fg:w="1"/><text x="73.7885%" y="143.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (1 samples, 0.03%)</title><rect x="73.5385%" y="117" width="0.0342%" height="15" fill="rgb(210,75,36)" fg:x="2151" fg:w="1"/><text x="73.7885%" y="127.50"></text></g><g><title>dyld`ImageLoaderMachO::libPath (1 samples, 0.03%)</title><rect x="73.5385%" y="101" width="0.0342%" height="15" fill="rgb(229,88,21)" fg:x="2151" fg:w="1"/><text x="73.7885%" y="111.50"></text></g><g><title>web-server`core::fmt::Formatter::pad (1 samples, 0.03%)</title><rect x="73.5726%" y="245" width="0.0342%" height="15" fill="rgb(252,204,47)" fg:x="2152" fg:w="1"/><text x="73.8226%" y="255.50"></text></g><g><title>web-server`core::num::_&lt;impl core::str::traits::FromStr for i64&gt;::from_str (1 samples, 0.03%)</title><rect x="73.6068%" y="245" width="0.0342%" height="15" fill="rgb(208,77,27)" fg:x="2153" fg:w="1"/><text x="73.8568%" y="255.50"></text></g><g><title>web-server`core::str::pattern::StrSearcher::new (2 samples, 0.07%)</title><rect x="73.6410%" y="245" width="0.0684%" height="15" fill="rgb(221,76,26)" fg:x="2154" fg:w="2"/><text x="73.8910%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (1 samples, 0.03%)</title><rect x="73.7094%" y="229" width="0.0342%" height="15" fill="rgb(225,139,18)" fg:x="2156" fg:w="1"/><text x="73.9594%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (29 samples, 0.99%)</title><rect x="73.7778%" y="213" width="0.9915%" height="15" fill="rgb(230,137,11)" fg:x="2158" fg:w="29"/><text x="74.0278%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (29 samples, 0.99%)</title><rect x="73.7778%" y="197" width="0.9915%" height="15" fill="rgb(212,28,1)" fg:x="2158" fg:w="29"/><text x="74.0278%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (22 samples, 0.75%)</title><rect x="74.7692%" y="213" width="0.7521%" height="15" fill="rgb(248,164,17)" fg:x="2187" fg:w="22"/><text x="75.0192%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (22 samples, 0.75%)</title><rect x="74.7692%" y="197" width="0.7521%" height="15" fill="rgb(222,171,42)" fg:x="2187" fg:w="22"/><text x="75.0192%" y="207.50"></text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="75.5214%" y="213" width="0.0342%" height="15" fill="rgb(243,84,45)" fg:x="2209" fg:w="1"/><text x="75.7714%" y="223.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (48 samples, 1.64%)</title><rect x="75.5897%" y="181" width="1.6410%" height="15" fill="rgb(252,49,23)" fg:x="2211" fg:w="48"/><text x="75.8397%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`write (47 samples, 1.61%)</title><rect x="75.6239%" y="165" width="1.6068%" height="15" fill="rgb(215,19,7)" fg:x="2212" fg:w="47"/><text x="75.8739%" y="175.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (49 samples, 1.68%)</title><rect x="75.5897%" y="197" width="1.6752%" height="15" fill="rgb(238,81,41)" fg:x="2211" fg:w="49"/><text x="75.8397%" y="207.50"></text></g><g><title>web-server`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.03%)</title><rect x="77.2308%" y="181" width="0.0342%" height="15" fill="rgb(210,199,37)" fg:x="2259" fg:w="1"/><text x="77.4808%" y="191.50"></text></g><g><title>web-server`&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="77.2650%" y="181" width="0.0342%" height="15" fill="rgb(244,192,49)" fg:x="2260" fg:w="1"/><text x="77.5150%" y="191.50"></text></g><g><title>web-server`&lt;std::net::tcp::TcpStream as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="77.2991%" y="181" width="0.0342%" height="15" fill="rgb(226,211,11)" fg:x="2261" fg:w="1"/><text x="77.5491%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="77.3333%" y="149" width="0.0342%" height="15" fill="rgb(236,162,54)" fg:x="2262" fg:w="1"/><text x="77.5833%" y="159.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="77.3675%" y="149" width="0.0342%" height="15" fill="rgb(220,229,9)" fg:x="2263" fg:w="1"/><text x="77.6175%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="77.3675%" y="133" width="0.0342%" height="15" fill="rgb(250,87,22)" fg:x="2263" fg:w="1"/><text x="77.6175%" y="143.50"></text></g><g><title>web-server`core::fmt::Formatter::debug_struct (3 samples, 0.10%)</title><rect x="77.3333%" y="181" width="0.1026%" height="15" fill="rgb(239,43,17)" fg:x="2262" fg:w="3"/><text x="77.5833%" y="191.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.10%)</title><rect x="77.3333%" y="165" width="0.1026%" height="15" fill="rgb(231,177,25)" fg:x="2262" fg:w="3"/><text x="77.5833%" y="175.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="77.4017%" y="149" width="0.0342%" height="15" fill="rgb(219,179,1)" fg:x="2264" fg:w="1"/><text x="77.6517%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__getpeername (19 samples, 0.65%)</title><rect x="77.5385%" y="165" width="0.6496%" height="15" fill="rgb(238,219,53)" fg:x="2268" fg:w="19"/><text x="77.7885%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__getsockname (29 samples, 0.99%)</title><rect x="78.1880%" y="165" width="0.9915%" height="15" fill="rgb(232,167,36)" fg:x="2287" fg:w="29"/><text x="78.4380%" y="175.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="79.1795%" y="165" width="0.0342%" height="15" fill="rgb(244,19,51)" fg:x="2316" fg:w="1"/><text x="79.4295%" y="175.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="79.1795%" y="149" width="0.0342%" height="15" fill="rgb(224,6,22)" fg:x="2316" fg:w="1"/><text x="79.4295%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="79.1795%" y="133" width="0.0342%" height="15" fill="rgb(224,145,5)" fg:x="2316" fg:w="1"/><text x="79.4295%" y="143.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.10%)</title><rect x="79.3162%" y="149" width="0.1026%" height="15" fill="rgb(234,130,49)" fg:x="2320" fg:w="3"/><text x="79.5662%" y="159.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddr as core::fmt::Debug&gt;::fmt (1 samples, 0.03%)</title><rect x="79.4188%" y="149" width="0.0342%" height="15" fill="rgb(254,6,2)" fg:x="2323" fg:w="1"/><text x="79.6688%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.07%)</title><rect x="79.5556%" y="101" width="0.0684%" height="15" fill="rgb(208,96,46)" fg:x="2327" fg:w="2"/><text x="79.8056%" y="111.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (6 samples, 0.21%)</title><rect x="79.4530%" y="133" width="0.2051%" height="15" fill="rgb(239,3,39)" fg:x="2324" fg:w="6"/><text x="79.7030%" y="143.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (6 samples, 0.21%)</title><rect x="79.4530%" y="117" width="0.2051%" height="15" fill="rgb(233,210,1)" fg:x="2324" fg:w="6"/><text x="79.7030%" y="127.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="79.6239%" y="101" width="0.0342%" height="15" fill="rgb(244,137,37)" fg:x="2329" fg:w="1"/><text x="79.8739%" y="111.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (1 samples, 0.03%)</title><rect x="79.6923%" y="101" width="0.0342%" height="15" fill="rgb(240,136,2)" fg:x="2331" fg:w="1"/><text x="79.9423%" y="111.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="79.7949%" y="85" width="0.0342%" height="15" fill="rgb(239,18,37)" fg:x="2334" fg:w="1"/><text x="80.0449%" y="95.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="79.7949%" y="69" width="0.0342%" height="15" fill="rgb(218,185,22)" fg:x="2334" fg:w="1"/><text x="80.0449%" y="79.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="79.7949%" y="53" width="0.0342%" height="15" fill="rgb(225,218,4)" fg:x="2334" fg:w="1"/><text x="80.0449%" y="63.50"></text></g><g><title>web-server`&lt;std::net::ip::Ipv6Addr as core::fmt::Display&gt;::fmt (2 samples, 0.07%)</title><rect x="79.8291%" y="85" width="0.0684%" height="15" fill="rgb(230,182,32)" fg:x="2335" fg:w="2"/><text x="80.0791%" y="95.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="79.8632%" y="69" width="0.0342%" height="15" fill="rgb(242,56,43)" fg:x="2336" fg:w="1"/><text x="80.1132%" y="79.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="79.8632%" y="53" width="0.0342%" height="15" fill="rgb(233,99,24)" fg:x="2336" fg:w="1"/><text x="80.1132%" y="63.50"></text></g><g><title>web-server`&lt;std::net::addr::SocketAddrV6 as core::fmt::Display&gt;::fmt (8 samples, 0.27%)</title><rect x="79.6581%" y="133" width="0.2735%" height="15" fill="rgb(234,209,42)" fg:x="2330" fg:w="8"/><text x="79.9081%" y="143.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (7 samples, 0.24%)</title><rect x="79.6923%" y="117" width="0.2393%" height="15" fill="rgb(227,7,12)" fg:x="2331" fg:w="7"/><text x="79.9423%" y="127.50"></text></g><g><title>web-server`core::fmt::write (6 samples, 0.21%)</title><rect x="79.7265%" y="101" width="0.2051%" height="15" fill="rgb(245,203,43)" fg:x="2332" fg:w="6"/><text x="79.9765%" y="111.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u16&gt;::fmt (1 samples, 0.03%)</title><rect x="79.8974%" y="85" width="0.0342%" height="15" fill="rgb(238,205,33)" fg:x="2337" fg:w="1"/><text x="80.1474%" y="95.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="79.8974%" y="69" width="0.0342%" height="15" fill="rgb(231,56,7)" fg:x="2337" fg:w="1"/><text x="80.1474%" y="79.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="79.8974%" y="53" width="0.0342%" height="15" fill="rgb(244,186,29)" fg:x="2337" fg:w="1"/><text x="80.1474%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="79.8974%" y="37" width="0.0342%" height="15" fill="rgb(234,111,31)" fg:x="2337" fg:w="1"/><text x="80.1474%" y="47.50"></text></g><g><title>web-server`core::fmt::Formatter::debug_upper_hex (1 samples, 0.03%)</title><rect x="79.9316%" y="133" width="0.0342%" height="15" fill="rgb(241,149,10)" fg:x="2338" fg:w="1"/><text x="80.1816%" y="143.50"></text></g><g><title>web-server`&lt;std::sys_common::net::TcpStream as core::fmt::Debug&gt;::fmt (23 samples, 0.79%)</title><rect x="79.2137%" y="165" width="0.7863%" height="15" fill="rgb(249,206,44)" fg:x="2317" fg:w="23"/><text x="79.4637%" y="175.50"></text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (16 samples, 0.55%)</title><rect x="79.4530%" y="149" width="0.5470%" height="15" fill="rgb(251,153,30)" fg:x="2324" fg:w="16"/><text x="79.7030%" y="159.50"></text></g><g><title>web-server`core::fmt::Formatter::write_fmt (1 samples, 0.03%)</title><rect x="79.9658%" y="133" width="0.0342%" height="15" fill="rgb(239,152,38)" fg:x="2339" fg:w="1"/><text x="80.2158%" y="143.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="80.0342%" y="149" width="0.0342%" height="15" fill="rgb(249,139,47)" fg:x="2341" fg:w="1"/><text x="80.2842%" y="159.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="80.0342%" y="133" width="0.0342%" height="15" fill="rgb(244,64,35)" fg:x="2341" fg:w="1"/><text x="80.2842%" y="143.50"></text></g><g><title>web-server`core::fmt::Write::write_char (1 samples, 0.03%)</title><rect x="80.0684%" y="149" width="0.0342%" height="15" fill="rgb(216,46,15)" fg:x="2342" fg:w="1"/><text x="80.3184%" y="159.50"></text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="80.0684%" y="133" width="0.0342%" height="15" fill="rgb(250,74,19)" fg:x="2342" fg:w="1"/><text x="80.3184%" y="143.50"></text></g><g><title>web-server`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.03%)</title><rect x="80.0684%" y="117" width="0.0342%" height="15" fill="rgb(249,42,33)" fg:x="2342" fg:w="1"/><text x="80.3184%" y="127.50"></text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="80.0684%" y="101" width="0.0342%" height="15" fill="rgb(242,149,17)" fg:x="2342" fg:w="1"/><text x="80.3184%" y="111.50"></text></g><g><title>web-server`core::unicode::printable::check (1 samples, 0.03%)</title><rect x="80.1026%" y="149" width="0.0342%" height="15" fill="rgb(244,29,21)" fg:x="2343" fg:w="1"/><text x="80.3526%" y="159.50"></text></g><g><title>web-server`&lt;str as core::fmt::Debug&gt;::fmt (6 samples, 0.21%)</title><rect x="80.0000%" y="165" width="0.2051%" height="15" fill="rgb(220,130,37)" fg:x="2340" fg:w="6"/><text x="80.2500%" y="175.50"></text></g><g><title>web-server`core::unicode::unicode_data::grapheme_extend::lookup (2 samples, 0.07%)</title><rect x="80.1368%" y="149" width="0.0684%" height="15" fill="rgb(211,67,2)" fg:x="2344" fg:w="2"/><text x="80.3868%" y="159.50"></text></g><g><title>web-server`core::fmt::Write::write_char (1 samples, 0.03%)</title><rect x="80.2051%" y="165" width="0.0342%" height="15" fill="rgb(235,68,52)" fg:x="2346" fg:w="1"/><text x="80.4551%" y="175.50"></text></g><g><title>web-server`std::io::stdio::_print (192 samples, 6.56%)</title><rect x="73.7094%" y="245" width="6.5641%" height="15" fill="rgb(246,142,3)" fg:x="2156" fg:w="192"/><text x="73.9594%" y="255.50">web-serve..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (191 samples, 6.53%)</title><rect x="73.7436%" y="229" width="6.5299%" height="15" fill="rgb(241,25,7)" fg:x="2157" fg:w="191"/><text x="73.9936%" y="239.50">web-serve..</text></g><g><title>web-server`core::fmt::write (138 samples, 4.72%)</title><rect x="75.5556%" y="213" width="4.7179%" height="15" fill="rgb(242,119,39)" fg:x="2210" fg:w="138"/><text x="75.8056%" y="223.50">web-s..</text></g><g><title>web-server`&lt;web_server::request::Request as core::fmt::Debug&gt;::fmt (88 samples, 3.01%)</title><rect x="77.2650%" y="197" width="3.0085%" height="15" fill="rgb(241,98,45)" fg:x="2260" fg:w="88"/><text x="77.5150%" y="207.50">web..</text></g><g><title>web-server`core::fmt::builders::DebugStruct::field (83 samples, 2.84%)</title><rect x="77.4359%" y="181" width="2.8376%" height="15" fill="rgb(254,28,30)" fg:x="2265" fg:w="83"/><text x="77.6859%" y="191.50">we..</text></g><g><title>web-server`core::unicode::printable::check (1 samples, 0.03%)</title><rect x="80.2393%" y="165" width="0.0342%" height="15" fill="rgb(241,142,54)" fg:x="2347" fg:w="1"/><text x="80.4893%" y="175.50"></text></g><g><title>web-server`std::os::unix::net::stream::UnixStream::try_clone (1 samples, 0.03%)</title><rect x="80.2735%" y="245" width="0.0342%" height="15" fill="rgb(222,85,15)" fg:x="2348" fg:w="1"/><text x="80.5235%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="80.4786%" y="213" width="0.0342%" height="15" fill="rgb(210,85,47)" fg:x="2354" fg:w="1"/><text x="80.7286%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="80.4786%" y="197" width="0.0342%" height="15" fill="rgb(224,206,25)" fg:x="2354" fg:w="1"/><text x="80.7286%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="80.4786%" y="181" width="0.0342%" height="15" fill="rgb(243,201,19)" fg:x="2354" fg:w="1"/><text x="80.7286%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="80.4786%" y="165" width="0.0342%" height="15" fill="rgb(236,59,4)" fg:x="2354" fg:w="1"/><text x="80.7286%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="80.4786%" y="149" width="0.0342%" height="15" fill="rgb(254,179,45)" fg:x="2354" fg:w="1"/><text x="80.7286%" y="159.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (7 samples, 0.24%)</title><rect x="80.3077%" y="245" width="0.2393%" height="15" fill="rgb(226,14,10)" fg:x="2349" fg:w="7"/><text x="80.5577%" y="255.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (6 samples, 0.21%)</title><rect x="80.3419%" y="229" width="0.2051%" height="15" fill="rgb(244,27,41)" fg:x="2350" fg:w="6"/><text x="80.5919%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (1 samples, 0.03%)</title><rect x="80.5128%" y="213" width="0.0342%" height="15" fill="rgb(235,35,32)" fg:x="2355" fg:w="1"/><text x="80.7628%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.03%)</title><rect x="80.5128%" y="197" width="0.0342%" height="15" fill="rgb(218,68,31)" fg:x="2355" fg:w="1"/><text x="80.7628%" y="207.50"></text></g><g><title>web-server`web_server::header::Header::from_request (1 samples, 0.03%)</title><rect x="80.5470%" y="245" width="0.0342%" height="15" fill="rgb(207,120,37)" fg:x="2356" fg:w="1"/><text x="80.7970%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (79 samples, 2.70%)</title><rect x="80.6154%" y="229" width="2.7009%" height="15" fill="rgb(227,98,0)" fg:x="2358" fg:w="79"/><text x="80.8654%" y="239.50">li..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="83.3162%" y="229" width="0.0342%" height="15" fill="rgb(207,7,3)" fg:x="2437" fg:w="1"/><text x="83.5662%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.07%)</title><rect x="83.3504%" y="229" width="0.0684%" height="15" fill="rgb(206,98,19)" fg:x="2438" fg:w="2"/><text x="83.6004%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.07%)</title><rect x="83.3504%" y="213" width="0.0684%" height="15" fill="rgb(217,5,26)" fg:x="2438" fg:w="2"/><text x="83.6004%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.07%)</title><rect x="83.3504%" y="197" width="0.0684%" height="15" fill="rgb(235,190,38)" fg:x="2438" fg:w="2"/><text x="83.6004%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.07%)</title><rect x="83.5897%" y="197" width="0.0684%" height="15" fill="rgb(247,86,24)" fg:x="2445" fg:w="2"/><text x="83.8397%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.27%)</title><rect x="83.4188%" y="229" width="0.2735%" height="15" fill="rgb(205,101,16)" fg:x="2440" fg:w="8"/><text x="83.6688%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.10%)</title><rect x="83.5897%" y="213" width="0.1026%" height="15" fill="rgb(246,168,33)" fg:x="2445" fg:w="3"/><text x="83.8397%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="83.6581%" y="197" width="0.0342%" height="15" fill="rgb(231,114,1)" fg:x="2447" fg:w="1"/><text x="83.9081%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="83.6923%" y="229" width="0.0342%" height="15" fill="rgb(207,184,53)" fg:x="2448" fg:w="1"/><text x="83.9423%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.10%)</title><rect x="83.7265%" y="229" width="0.1026%" height="15" fill="rgb(224,95,51)" fg:x="2449" fg:w="3"/><text x="83.9765%" y="239.50"></text></g><g><title>web-server`__rdl_dealloc (1 samples, 0.03%)</title><rect x="83.8291%" y="229" width="0.0342%" height="15" fill="rgb(212,188,45)" fg:x="2452" fg:w="1"/><text x="84.0791%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (8 samples, 0.27%)</title><rect x="83.9658%" y="197" width="0.2735%" height="15" fill="rgb(223,154,38)" fg:x="2456" fg:w="8"/><text x="84.2158%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (8 samples, 0.27%)</title><rect x="83.9658%" y="181" width="0.2735%" height="15" fill="rgb(251,22,52)" fg:x="2456" fg:w="8"/><text x="84.2158%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (5 samples, 0.17%)</title><rect x="84.2393%" y="197" width="0.1709%" height="15" fill="rgb(229,209,22)" fg:x="2464" fg:w="5"/><text x="84.4893%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (5 samples, 0.17%)</title><rect x="84.2393%" y="181" width="0.1709%" height="15" fill="rgb(234,138,34)" fg:x="2464" fg:w="5"/><text x="84.4893%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (1 samples, 0.03%)</title><rect x="84.4103%" y="197" width="0.0342%" height="15" fill="rgb(212,95,11)" fg:x="2469" fg:w="1"/><text x="84.6603%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`write (51 samples, 1.74%)</title><rect x="84.4786%" y="165" width="1.7436%" height="15" fill="rgb(240,179,47)" fg:x="2471" fg:w="51"/><text x="84.7286%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.07%)</title><rect x="86.2222%" y="165" width="0.0684%" height="15" fill="rgb(240,163,11)" fg:x="2522" fg:w="2"/><text x="86.4722%" y="175.50"></text></g><g><title>web-server`std::io::stdio::_print (72 samples, 2.46%)</title><rect x="83.8632%" y="229" width="2.4615%" height="15" fill="rgb(236,37,12)" fg:x="2453" fg:w="72"/><text x="84.1132%" y="239.50">we..</text></g><g><title>web-server`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (70 samples, 2.39%)</title><rect x="83.9316%" y="213" width="2.3932%" height="15" fill="rgb(232,164,16)" fg:x="2455" fg:w="70"/><text x="84.1816%" y="223.50">we..</text></g><g><title>web-server`core::fmt::write (55 samples, 1.88%)</title><rect x="84.4444%" y="197" width="1.8803%" height="15" fill="rgb(244,205,15)" fg:x="2470" fg:w="55"/><text x="84.6944%" y="207.50">w..</text></g><g><title>web-server`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (54 samples, 1.85%)</title><rect x="84.4786%" y="181" width="1.8462%" height="15" fill="rgb(223,117,47)" fg:x="2471" fg:w="54"/><text x="84.7286%" y="191.50">w..</text></g><g><title>web-server`core::slice::memchr::memrchr (1 samples, 0.03%)</title><rect x="86.2906%" y="165" width="0.0342%" height="15" fill="rgb(244,107,35)" fg:x="2524" fg:w="1"/><text x="86.5406%" y="175.50"></text></g><g><title>web-server`std::net::udp::UdpSocket::recv (2 samples, 0.07%)</title><rect x="86.3248%" y="229" width="0.0684%" height="15" fill="rgb(205,140,8)" fg:x="2525" fg:w="2"/><text x="86.5748%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.31%)</title><rect x="86.5299%" y="213" width="0.3077%" height="15" fill="rgb(228,84,46)" fg:x="2531" fg:w="9"/><text x="86.7799%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.24%)</title><rect x="86.5983%" y="197" width="0.2393%" height="15" fill="rgb(254,188,9)" fg:x="2533" fg:w="7"/><text x="86.8483%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.24%)</title><rect x="86.5983%" y="181" width="0.2393%" height="15" fill="rgb(206,112,54)" fg:x="2533" fg:w="7"/><text x="86.8483%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.17%)</title><rect x="86.6667%" y="165" width="0.1709%" height="15" fill="rgb(216,84,49)" fg:x="2535" fg:w="5"/><text x="86.9167%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.07%)</title><rect x="86.7692%" y="149" width="0.0684%" height="15" fill="rgb(214,194,35)" fg:x="2538" fg:w="2"/><text x="87.0192%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.03%)</title><rect x="86.8376%" y="213" width="0.0342%" height="15" fill="rgb(249,28,3)" fg:x="2540" fg:w="1"/><text x="87.0876%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.10%)</title><rect x="86.8718%" y="213" width="0.1026%" height="15" fill="rgb(222,56,52)" fg:x="2541" fg:w="3"/><text x="87.1218%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.10%)</title><rect x="86.8718%" y="197" width="0.1026%" height="15" fill="rgb(245,217,50)" fg:x="2541" fg:w="3"/><text x="87.1218%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="86.9402%" y="181" width="0.0342%" height="15" fill="rgb(213,201,24)" fg:x="2543" fg:w="1"/><text x="87.1902%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="86.9744%" y="213" width="0.0342%" height="15" fill="rgb(248,116,28)" fg:x="2544" fg:w="1"/><text x="87.2244%" y="223.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="87.0085%" y="213" width="0.0342%" height="15" fill="rgb(219,72,43)" fg:x="2545" fg:w="1"/><text x="87.2585%" y="223.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="87.0085%" y="197" width="0.0342%" height="15" fill="rgb(209,138,14)" fg:x="2545" fg:w="1"/><text x="87.2585%" y="207.50"></text></g><g><title>web-server`core::str::converts::from_utf8 (2 samples, 0.07%)</title><rect x="87.0427%" y="213" width="0.0684%" height="15" fill="rgb(222,18,33)" fg:x="2546" fg:w="2"/><text x="87.2927%" y="223.50"></text></g><g><title>web-server`httparse::parse_headers_iter_uninit (2 samples, 0.07%)</title><rect x="87.1111%" y="181" width="0.0684%" height="15" fill="rgb(213,199,7)" fg:x="2548" fg:w="2"/><text x="87.3611%" y="191.50"></text></g><g><title>web-server`httparse::simd::runtime::match_header_value_vectored (1 samples, 0.03%)</title><rect x="87.1453%" y="165" width="0.0342%" height="15" fill="rgb(250,110,10)" fg:x="2549" fg:w="1"/><text x="87.3953%" y="175.50"></text></g><g><title>web-server`httparse::simd::avx2::match_header_value_char_32_avx (1 samples, 0.03%)</title><rect x="87.1453%" y="149" width="0.0342%" height="15" fill="rgb(248,123,6)" fg:x="2549" fg:w="1"/><text x="87.3953%" y="159.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (2 samples, 0.07%)</title><rect x="87.1795%" y="181" width="0.0684%" height="15" fill="rgb(206,91,31)" fg:x="2550" fg:w="2"/><text x="87.4295%" y="191.50"></text></g><g><title>web-server`web_server::request::Request::from_tcp_stream (206 samples, 7.04%)</title><rect x="80.5812%" y="245" width="7.0427%" height="15" fill="rgb(211,154,13)" fg:x="2357" fg:w="206"/><text x="80.8312%" y="255.50">web-serve..</text></g><g><title>web-server`web_server::header::Header::from_request (36 samples, 1.23%)</title><rect x="86.3932%" y="229" width="1.2308%" height="15" fill="rgb(225,148,7)" fg:x="2527" fg:w="36"/><text x="86.6432%" y="239.50"></text></g><g><title>web-server`httparse::Request::parse (15 samples, 0.51%)</title><rect x="87.1111%" y="213" width="0.5128%" height="15" fill="rgb(220,160,43)" fg:x="2548" fg:w="15"/><text x="87.3611%" y="223.50"></text></g><g><title>web-server`httparse::Request::parse_with_uninit_headers (15 samples, 0.51%)</title><rect x="87.1111%" y="197" width="0.5128%" height="15" fill="rgb(213,52,39)" fg:x="2548" fg:w="15"/><text x="87.3611%" y="207.50"></text></g><g><title>web-server`httparse::simd::runtime::match_uri_vectored (11 samples, 0.38%)</title><rect x="87.2479%" y="181" width="0.3761%" height="15" fill="rgb(243,137,7)" fg:x="2552" fg:w="11"/><text x="87.4979%" y="191.50"></text></g><g><title>web-server`httparse::simd::avx2::match_url_char_32_avx (10 samples, 0.34%)</title><rect x="87.2821%" y="165" width="0.3419%" height="15" fill="rgb(230,79,13)" fg:x="2553" fg:w="10"/><text x="87.5321%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="87.6923%" y="229" width="0.0342%" height="15" fill="rgb(247,105,23)" fg:x="2565" fg:w="1"/><text x="87.9423%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="87.6923%" y="213" width="0.0342%" height="15" fill="rgb(223,179,41)" fg:x="2565" fg:w="1"/><text x="87.9423%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="87.6923%" y="197" width="0.0342%" height="15" fill="rgb(218,9,34)" fg:x="2565" fg:w="1"/><text x="87.9423%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.21%)</title><rect x="87.7265%" y="229" width="0.2051%" height="15" fill="rgb(222,106,8)" fg:x="2566" fg:w="6"/><text x="87.9765%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.10%)</title><rect x="87.8291%" y="213" width="0.1026%" height="15" fill="rgb(211,220,0)" fg:x="2569" fg:w="3"/><text x="88.0791%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.10%)</title><rect x="87.8291%" y="197" width="0.1026%" height="15" fill="rgb(229,52,16)" fg:x="2569" fg:w="3"/><text x="88.0791%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.07%)</title><rect x="87.9316%" y="229" width="0.0684%" height="15" fill="rgb(212,155,18)" fg:x="2572" fg:w="2"/><text x="88.1816%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.07%)</title><rect x="87.9316%" y="213" width="0.0684%" height="15" fill="rgb(242,21,14)" fg:x="2572" fg:w="2"/><text x="88.1816%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="87.9658%" y="197" width="0.0342%" height="15" fill="rgb(222,19,48)" fg:x="2573" fg:w="1"/><text x="88.2158%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.03%)</title><rect x="88.0000%" y="229" width="0.0342%" height="15" fill="rgb(232,45,27)" fg:x="2574" fg:w="1"/><text x="88.2500%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.03%)</title><rect x="88.0342%" y="229" width="0.0342%" height="15" fill="rgb(249,103,42)" fg:x="2575" fg:w="1"/><text x="88.2842%" y="239.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.07%)</title><rect x="88.0684%" y="229" width="0.0684%" height="15" fill="rgb(246,81,33)" fg:x="2576" fg:w="2"/><text x="88.3184%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="88.0684%" y="213" width="0.0684%" height="15" fill="rgb(252,33,42)" fg:x="2576" fg:w="2"/><text x="88.3184%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="88.0684%" y="197" width="0.0684%" height="15" fill="rgb(209,212,41)" fg:x="2576" fg:w="2"/><text x="88.3184%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="88.0684%" y="181" width="0.0684%" height="15" fill="rgb(207,154,6)" fg:x="2576" fg:w="2"/><text x="88.3184%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="88.1026%" y="165" width="0.0342%" height="15" fill="rgb(223,64,47)" fg:x="2577" fg:w="1"/><text x="88.3526%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="88.1026%" y="149" width="0.0342%" height="15" fill="rgb(211,161,38)" fg:x="2577" fg:w="1"/><text x="88.3526%" y="159.50"></text></g><g><title>web-server`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="88.1368%" y="229" width="0.0342%" height="15" fill="rgb(219,138,40)" fg:x="2578" fg:w="1"/><text x="88.3868%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="88.1368%" y="213" width="0.0342%" height="15" fill="rgb(241,228,46)" fg:x="2578" fg:w="1"/><text x="88.3868%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.07%)</title><rect x="88.1709%" y="213" width="0.0684%" height="15" fill="rgb(223,209,38)" fg:x="2579" fg:w="2"/><text x="88.4209%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="88.1709%" y="197" width="0.0684%" height="15" fill="rgb(236,164,45)" fg:x="2579" fg:w="2"/><text x="88.4209%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="88.1709%" y="181" width="0.0684%" height="15" fill="rgb(231,15,5)" fg:x="2579" fg:w="2"/><text x="88.4209%" y="191.50"></text></g><g><title>web-server`&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="88.2393%" y="213" width="0.0342%" height="15" fill="rgb(252,35,15)" fg:x="2581" fg:w="1"/><text x="88.4893%" y="223.50"></text></g><g><title>web-server`core::str::pattern::TwoWaySearcher::next (1 samples, 0.03%)</title><rect x="88.2393%" y="197" width="0.0342%" height="15" fill="rgb(248,181,18)" fg:x="2581" fg:w="1"/><text x="88.4893%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (1 samples, 0.03%)</title><rect x="88.2735%" y="149" width="0.0342%" height="15" fill="rgb(233,39,42)" fg:x="2582" fg:w="1"/><text x="88.5235%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="88.3419%" y="133" width="0.0342%" height="15" fill="rgb(238,110,33)" fg:x="2584" fg:w="1"/><text x="88.5919%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.03%)</title><rect x="88.3761%" y="101" width="0.0342%" height="15" fill="rgb(233,195,10)" fg:x="2585" fg:w="1"/><text x="88.6261%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.07%)</title><rect x="88.3761%" y="133" width="0.0684%" height="15" fill="rgb(254,105,3)" fg:x="2585" fg:w="2"/><text x="88.6261%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.07%)</title><rect x="88.3761%" y="117" width="0.0684%" height="15" fill="rgb(221,225,9)" fg:x="2585" fg:w="2"/><text x="88.6261%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="88.4103%" y="101" width="0.0342%" height="15" fill="rgb(224,227,45)" fg:x="2586" fg:w="1"/><text x="88.6603%" y="111.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.21%)</title><rect x="88.2735%" y="213" width="0.2051%" height="15" fill="rgb(229,198,43)" fg:x="2582" fg:w="6"/><text x="88.5235%" y="223.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (6 samples, 0.21%)</title><rect x="88.2735%" y="197" width="0.2051%" height="15" fill="rgb(206,209,35)" fg:x="2582" fg:w="6"/><text x="88.5235%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.21%)</title><rect x="88.2735%" y="181" width="0.2051%" height="15" fill="rgb(245,195,53)" fg:x="2582" fg:w="6"/><text x="88.5235%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.21%)</title><rect x="88.2735%" y="165" width="0.2051%" height="15" fill="rgb(240,92,26)" fg:x="2582" fg:w="6"/><text x="88.5235%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.17%)</title><rect x="88.3077%" y="149" width="0.1709%" height="15" fill="rgb(207,40,23)" fg:x="2583" fg:w="5"/><text x="88.5577%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (1 samples, 0.03%)</title><rect x="88.4444%" y="133" width="0.0342%" height="15" fill="rgb(223,111,35)" fg:x="2587" fg:w="1"/><text x="88.6944%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.03%)</title><rect x="88.4444%" y="117" width="0.0342%" height="15" fill="rgb(229,147,28)" fg:x="2587" fg:w="1"/><text x="88.6944%" y="127.50"></text></g><g><title>web-server`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.34%)</title><rect x="88.1709%" y="229" width="0.3419%" height="15" fill="rgb(211,29,28)" fg:x="2579" fg:w="10"/><text x="88.4209%" y="239.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="88.4786%" y="213" width="0.0342%" height="15" fill="rgb(228,72,33)" fg:x="2588" fg:w="1"/><text x="88.7286%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="88.5128%" y="213" width="0.0342%" height="15" fill="rgb(205,214,31)" fg:x="2589" fg:w="1"/><text x="88.7628%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="88.5128%" y="197" width="0.0342%" height="15" fill="rgb(224,111,15)" fg:x="2589" fg:w="1"/><text x="88.7628%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="88.5128%" y="181" width="0.0342%" height="15" fill="rgb(253,21,26)" fg:x="2589" fg:w="1"/><text x="88.7628%" y="191.50"></text></g><g><title>web-server`alloc::fmt::format (2 samples, 0.07%)</title><rect x="88.5128%" y="229" width="0.0684%" height="15" fill="rgb(245,139,43)" fg:x="2589" fg:w="2"/><text x="88.7628%" y="239.50"></text></g><g><title>web-server`core::fmt::write (1 samples, 0.03%)</title><rect x="88.5470%" y="213" width="0.0342%" height="15" fill="rgb(252,170,7)" fg:x="2590" fg:w="1"/><text x="88.7970%" y="223.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.03%)</title><rect x="88.5470%" y="197" width="0.0342%" height="15" fill="rgb(231,118,14)" fg:x="2590" fg:w="1"/><text x="88.7970%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="88.5470%" y="181" width="0.0342%" height="15" fill="rgb(238,83,0)" fg:x="2590" fg:w="1"/><text x="88.7970%" y="191.50"></text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="88.5812%" y="229" width="0.0342%" height="15" fill="rgb(221,39,39)" fg:x="2591" fg:w="1"/><text x="88.8312%" y="239.50"></text></g><g><title>web-server`core::str::pattern::StrSearcher::new (2 samples, 0.07%)</title><rect x="88.6154%" y="229" width="0.0684%" height="15" fill="rgb(222,119,46)" fg:x="2592" fg:w="2"/><text x="88.8654%" y="239.50"></text></g><g><title>web-server`std::os::unix::net::stream::UnixStream::try_clone (24 samples, 0.82%)</title><rect x="88.6838%" y="229" width="0.8205%" height="15" fill="rgb(222,165,49)" fg:x="2594" fg:w="24"/><text x="88.9338%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (24 samples, 0.82%)</title><rect x="88.6838%" y="213" width="0.8205%" height="15" fill="rgb(219,113,52)" fg:x="2594" fg:w="24"/><text x="88.9338%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (4 samples, 0.14%)</title><rect x="89.5043%" y="229" width="0.1368%" height="15" fill="rgb(214,7,15)" fg:x="2618" fg:w="4"/><text x="89.7543%" y="239.50"></text></g><g><title>web-server`std::sync::mpsc::shared::Packet&lt;T&gt;::send (3 samples, 0.10%)</title><rect x="89.5385%" y="213" width="0.1026%" height="15" fill="rgb(235,32,4)" fg:x="2619" fg:w="3"/><text x="89.7885%" y="223.50"></text></g><g><title>web-server`std::sync::mpsc::blocking::SignalToken::signal (3 samples, 0.10%)</title><rect x="89.5385%" y="197" width="0.1026%" height="15" fill="rgb(238,90,54)" fg:x="2619" fg:w="3"/><text x="89.7885%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.10%)</title><rect x="89.5385%" y="181" width="0.1026%" height="15" fill="rgb(213,208,19)" fg:x="2619" fg:w="3"/><text x="89.7885%" y="191.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sendto (1 samples, 0.03%)</title><rect x="89.6410%" y="213" width="0.0342%" height="15" fill="rgb(233,156,4)" fg:x="2622" fg:w="1"/><text x="89.8910%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (101 samples, 3.45%)</title><rect x="89.6752%" y="213" width="3.4530%" height="15" fill="rgb(207,194,5)" fg:x="2623" fg:w="101"/><text x="89.9252%" y="223.50">lib..</text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.03%)</title><rect x="93.1282%" y="213" width="0.0342%" height="15" fill="rgb(206,111,30)" fg:x="2724" fg:w="1"/><text x="93.3782%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.03%)</title><rect x="93.1624%" y="213" width="0.0342%" height="15" fill="rgb(243,70,54)" fg:x="2725" fg:w="1"/><text x="93.4124%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="93.2308%" y="197" width="0.0342%" height="15" fill="rgb(242,28,8)" fg:x="2727" fg:w="1"/><text x="93.4808%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="93.2308%" y="181" width="0.0342%" height="15" fill="rgb(219,106,18)" fg:x="2727" fg:w="1"/><text x="93.4808%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="93.2308%" y="165" width="0.0342%" height="15" fill="rgb(244,222,10)" fg:x="2727" fg:w="1"/><text x="93.4808%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="93.2308%" y="149" width="0.0342%" height="15" fill="rgb(236,179,52)" fg:x="2727" fg:w="1"/><text x="93.4808%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="93.2308%" y="133" width="0.0342%" height="15" fill="rgb(213,23,39)" fg:x="2727" fg:w="1"/><text x="93.4808%" y="143.50"></text></g><g><title>web-server`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.07%)</title><rect x="93.2650%" y="181" width="0.0684%" height="15" fill="rgb(238,48,10)" fg:x="2728" fg:w="2"/><text x="93.5150%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.07%)</title><rect x="93.2650%" y="165" width="0.0684%" height="15" fill="rgb(251,196,23)" fg:x="2728" fg:w="2"/><text x="93.5150%" y="175.50"></text></g><g><title>web-server`alloc::fmt::format (5 samples, 0.17%)</title><rect x="93.1966%" y="213" width="0.1709%" height="15" fill="rgb(250,152,24)" fg:x="2726" fg:w="5"/><text x="93.4466%" y="223.50"></text></g><g><title>web-server`core::fmt::write (3 samples, 0.10%)</title><rect x="93.2650%" y="197" width="0.1026%" height="15" fill="rgb(209,150,17)" fg:x="2728" fg:w="3"/><text x="93.5150%" y="207.50"></text></g><g><title>web-server`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.03%)</title><rect x="93.3333%" y="181" width="0.0342%" height="15" fill="rgb(234,202,34)" fg:x="2730" fg:w="1"/><text x="93.5833%" y="191.50"></text></g><g><title>web-server`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.03%)</title><rect x="93.3333%" y="165" width="0.0342%" height="15" fill="rgb(253,148,53)" fg:x="2730" fg:w="1"/><text x="93.5833%" y="175.50"></text></g><g><title>web-server`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (606 samples, 20.72%)</title><rect x="72.6838%" y="261" width="20.7179%" height="15" fill="rgb(218,129,16)" fg:x="2126" fg:w="606"/><text x="72.9338%" y="271.50">web-server`rusty_junctions::funct..</text></g><g><title>web-server`web_server::request::Request::handle_pooled (169 samples, 5.78%)</title><rect x="87.6239%" y="245" width="5.7778%" height="15" fill="rgb(216,85,19)" fg:x="2563" fg:w="169"/><text x="87.8739%" y="255.50">web-ser..</text></g><g><title>web-server`web_server::request::Request::respond_ok (110 samples, 3.76%)</title><rect x="89.6410%" y="229" width="3.7607%" height="15" fill="rgb(235,228,7)" fg:x="2622" fg:w="110"/><text x="89.8910%" y="239.50">web-..</text></g><g><title>web-server`core::fmt::write (1 samples, 0.03%)</title><rect x="93.3675%" y="213" width="0.0342%" height="15" fill="rgb(245,175,0)" fg:x="2731" fg:w="1"/><text x="93.6175%" y="223.50"></text></g><g><title>web-server`rusty_junctions::patterns::unary::SendJoinPattern::fire (1 samples, 0.03%)</title><rect x="93.4017%" y="261" width="0.0342%" height="15" fill="rgb(208,168,36)" fg:x="2732" fg:w="1"/><text x="93.6517%" y="271.50"></text></g><g><title>web-server`std::sync::mpsc::Receiver&lt;T&gt;::recv (1 samples, 0.03%)</title><rect x="93.4359%" y="261" width="0.0342%" height="15" fill="rgb(246,171,24)" fg:x="2733" fg:w="1"/><text x="93.6859%" y="271.50"></text></g><g><title>web-server`std::sys_common::backtrace::__rust_begin_short_backtrace (1,500 samples, 51.28%)</title><rect x="42.2222%" y="277" width="51.2821%" height="15" fill="rgb(215,142,24)" fg:x="1235" fg:w="1500"/><text x="42.4722%" y="287.50">web-server`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>web-server`std::sync::mpsc::Sender&lt;T&gt;::send (1 samples, 0.03%)</title><rect x="93.4701%" y="261" width="0.0342%" height="15" fill="rgb(250,187,7)" fg:x="2734" fg:w="1"/><text x="93.7201%" y="271.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (1 samples, 0.03%)</title><rect x="93.5726%" y="261" width="0.0342%" height="15" fill="rgb(228,66,33)" fg:x="2737" fg:w="1"/><text x="93.8226%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="93.5726%" y="245" width="0.0342%" height="15" fill="rgb(234,215,21)" fg:x="2737" fg:w="1"/><text x="93.8226%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="93.5726%" y="229" width="0.0342%" height="15" fill="rgb(222,191,20)" fg:x="2737" fg:w="1"/><text x="93.8226%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="93.5726%" y="213" width="0.0342%" height="15" fill="rgb(245,79,54)" fg:x="2737" fg:w="1"/><text x="93.8226%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.24%)</title><rect x="94.2906%" y="213" width="0.2393%" height="15" fill="rgb(240,10,37)" fg:x="2758" fg:w="7"/><text x="94.5406%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.24%)</title><rect x="94.2906%" y="197" width="0.2393%" height="15" fill="rgb(214,192,32)" fg:x="2758" fg:w="7"/><text x="94.5406%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="94.4957%" y="181" width="0.0342%" height="15" fill="rgb(209,36,54)" fg:x="2764" fg:w="1"/><text x="94.7457%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.31%)</title><rect x="94.2564%" y="229" width="0.3077%" height="15" fill="rgb(220,10,11)" fg:x="2757" fg:w="9"/><text x="94.5064%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.03%)</title><rect x="94.5299%" y="213" width="0.0342%" height="15" fill="rgb(221,106,17)" fg:x="2765" fg:w="1"/><text x="94.7799%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.14%)</title><rect x="94.5641%" y="229" width="0.1368%" height="15" fill="rgb(251,142,44)" fg:x="2766" fg:w="4"/><text x="94.8141%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_allocate_and_initialize_for_key (24 samples, 0.82%)</title><rect x="93.9829%" y="245" width="0.8205%" height="15" fill="rgb(238,13,15)" fg:x="2749" fg:w="24"/><text x="94.2329%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.10%)</title><rect x="94.7009%" y="229" width="0.1026%" height="15" fill="rgb(208,107,27)" fg:x="2770" fg:w="3"/><text x="94.9509%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.03%)</title><rect x="94.8034%" y="245" width="0.0342%" height="15" fill="rgb(205,136,37)" fg:x="2773" fg:w="1"/><text x="95.0534%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.10%)</title><rect x="94.8376%" y="245" width="0.1026%" height="15" fill="rgb(250,205,27)" fg:x="2774" fg:w="3"/><text x="95.0876%" y="255.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.03%)</title><rect x="94.9402%" y="245" width="0.0342%" height="15" fill="rgb(210,80,43)" fg:x="2777" fg:w="1"/><text x="95.1902%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.03%)</title><rect x="94.9744%" y="245" width="0.0342%" height="15" fill="rgb(247,160,36)" fg:x="2778" fg:w="1"/><text x="95.2244%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (43 samples, 1.47%)</title><rect x="93.6068%" y="261" width="1.4701%" height="15" fill="rgb(234,13,49)" fg:x="2738" fg:w="43"/><text x="93.8568%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_setspecific (2 samples, 0.07%)</title><rect x="95.0085%" y="245" width="0.0684%" height="15" fill="rgb(234,122,0)" fg:x="2779" fg:w="2"/><text x="95.2585%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.10%)</title><rect x="95.0769%" y="261" width="0.1026%" height="15" fill="rgb(207,146,38)" fg:x="2781" fg:w="3"/><text x="95.3269%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.10%)</title><rect x="95.0769%" y="245" width="0.1026%" height="15" fill="rgb(207,177,25)" fg:x="2781" fg:w="3"/><text x="95.3269%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.10%)</title><rect x="95.0769%" y="229" width="0.1026%" height="15" fill="rgb(211,178,42)" fg:x="2781" fg:w="3"/><text x="95.3269%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.07%)</title><rect x="95.1111%" y="213" width="0.0684%" height="15" fill="rgb(230,69,54)" fg:x="2782" fg:w="2"/><text x="95.3611%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.14%)</title><rect x="95.1795%" y="229" width="0.1368%" height="15" fill="rgb(214,135,41)" fg:x="2784" fg:w="4"/><text x="95.4295%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.14%)</title><rect x="95.1795%" y="213" width="0.1368%" height="15" fill="rgb(237,67,25)" fg:x="2784" fg:w="4"/><text x="95.4295%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.14%)</title><rect x="95.1795%" y="197" width="0.1368%" height="15" fill="rgb(222,189,50)" fg:x="2784" fg:w="4"/><text x="95.4295%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.03%)</title><rect x="95.2821%" y="181" width="0.0342%" height="15" fill="rgb(245,148,34)" fg:x="2787" fg:w="1"/><text x="95.5321%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.03%)</title><rect x="95.2821%" y="165" width="0.0342%" height="15" fill="rgb(222,29,6)" fg:x="2787" fg:w="1"/><text x="95.5321%" y="175.50"></text></g><g><title>web-server`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,571 samples, 53.71%)</title><rect x="41.6410%" y="293" width="53.7094%" height="15" fill="rgb(221,189,43)" fg:x="1218" fg:w="1571"/><text x="41.8910%" y="303.50">web-server`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>web-server`std::sys_common::thread_info::set (54 samples, 1.85%)</title><rect x="93.5043%" y="277" width="1.8462%" height="15" fill="rgb(207,36,27)" fg:x="2735" fg:w="54"/><text x="93.7543%" y="287.50">w..</text></g><g><title>web-server`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.17%)</title><rect x="95.1795%" y="261" width="0.1709%" height="15" fill="rgb(217,90,24)" fg:x="2784" fg:w="5"/><text x="95.4295%" y="271.50"></text></g><g><title>web-server`alloc::raw_vec::finish_grow (5 samples, 0.17%)</title><rect x="95.1795%" y="245" width="0.1709%" height="15" fill="rgb(224,66,35)" fg:x="2784" fg:w="5"/><text x="95.4295%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.03%)</title><rect x="95.3162%" y="229" width="0.0342%" height="15" fill="rgb(221,13,50)" fg:x="2788" fg:w="1"/><text x="95.5662%" y="239.50"></text></g><g><title>libsystem_c.dylib`sysconf (2 samples, 0.07%)</title><rect x="96.4444%" y="277" width="0.0684%" height="15" fill="rgb(236,68,49)" fg:x="2821" fg:w="2"/><text x="96.6944%" y="287.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.03%)</title><rect x="96.4786%" y="261" width="0.0342%" height="15" fill="rgb(229,146,28)" fg:x="2822" fg:w="1"/><text x="96.7286%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (96 samples, 3.28%)</title><rect x="96.5128%" y="277" width="3.2821%" height="15" fill="rgb(225,31,38)" fg:x="2823" fg:w="96"/><text x="96.7628%" y="287.50">lib..</text></g><g><title>web-server`std::sys::unix::stack_overflow::imp::make_handler (132 samples, 4.51%)</title><rect x="95.3504%" y="293" width="4.5128%" height="15" fill="rgb(250,208,3)" fg:x="2789" fg:w="132"/><text x="95.6004%" y="303.50">web-s..</text></g><g><title>libsystem_kernel.dylib`mmap (2 samples, 0.07%)</title><rect x="99.7949%" y="277" width="0.0684%" height="15" fill="rgb(246,54,23)" fg:x="2919" fg:w="2"/><text x="100.0449%" y="287.50"></text></g><g><title>web-server`std::sys_common::thread_info::set (1 samples, 0.03%)</title><rect x="99.8632%" y="293" width="0.0342%" height="15" fill="rgb(243,76,11)" fg:x="2921" fg:w="1"/><text x="100.1132%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (2,243 samples, 76.68%)</title><rect x="23.2821%" y="325" width="76.6838%" height="15" fill="rgb(245,21,50)" fg:x="681" fg:w="2243"/><text x="23.5321%" y="335.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (1,850 samples, 63.25%)</title><rect x="36.7179%" y="309" width="63.2479%" height="15" fill="rgb(228,9,43)" fg:x="1074" fg:w="1850"/><text x="36.9679%" y="319.50">web-server`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>web-server`std::thread::Thread::cname (2 samples, 0.07%)</title><rect x="99.8974%" y="293" width="0.0684%" height="15" fill="rgb(208,100,47)" fg:x="2922" fg:w="2"/><text x="100.1474%" y="303.50"></text></g><g><title>all (2,925 samples, 100%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(232,26,8)" fg:x="0" fg:w="2925"/><text x="0.2500%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (2,533 samples, 86.60%)</title><rect x="13.4017%" y="341" width="86.5983%" height="15" fill="rgb(216,166,38)" fg:x="392" fg:w="2533"/><text x="13.6517%" y="351.50">libsystem_pthread.dylib`thread_start</text></g><g><title>web-server`std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.03%)</title><rect x="99.9658%" y="325" width="0.0342%" height="15" fill="rgb(251,202,51)" fg:x="2924" fg:w="1"/><text x="100.2158%" y="335.50"></text></g></svg></svg>