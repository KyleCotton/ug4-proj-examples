<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="454" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="437.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="437.00"> </text><svg id="frames" x="10" width="1180" total_samples="6558"><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="0.0000%" y="309" width="0.0152%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="0.0152%" y="293" width="0.0152%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2652%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="0.0152%" y="277" width="0.0152%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2652%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="0.0152%" y="261" width="0.0152%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2652%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="0.0152%" y="245" width="0.0152%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2652%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="0.0305%" y="293" width="0.0152%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2805%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__accept (106 samples, 1.62%)</title><rect x="0.1525%" y="261" width="1.6163%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="106"/><text x="0.4025%" y="271.50"></text></g><g><title>run`&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 1.83%)</title><rect x="0.0457%" y="293" width="1.8298%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="120"/><text x="0.2957%" y="303.50">r..</text></g><g><title>run`std::net::tcp::TcpListener::accept (113 samples, 1.72%)</title><rect x="0.1525%" y="277" width="1.7231%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="113"/><text x="0.4025%" y="287.50"></text></g><g><title>run`std::sys::unix::net::Socket::accept (7 samples, 0.11%)</title><rect x="1.7688%" y="261" width="0.1067%" height="15" fill="rgb(220,122,19)" fg:x="116" fg:w="7"/><text x="2.0188%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ioctl (6 samples, 0.09%)</title><rect x="1.7841%" y="245" width="0.0915%" height="15" fill="rgb(250,228,42)" fg:x="117" fg:w="6"/><text x="2.0341%" y="255.50"></text></g><g><title>libsystem_info.dylib`_gai_sort_list (1 samples, 0.02%)</title><rect x="1.8756%" y="213" width="0.0152%" height="15" fill="rgb(240,193,28)" fg:x="123" fg:w="1"/><text x="2.1256%" y="223.50"></text></g><g><title>libsystem_c.dylib`_qsort (1 samples, 0.02%)</title><rect x="1.8756%" y="197" width="0.0152%" height="15" fill="rgb(216,20,37)" fg:x="123" fg:w="1"/><text x="2.1256%" y="207.50"></text></g><g><title>libsystem_c.dylib`_isort (1 samples, 0.02%)</title><rect x="1.8756%" y="181" width="0.0152%" height="15" fill="rgb(206,188,39)" fg:x="123" fg:w="1"/><text x="2.1256%" y="191.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare (1 samples, 0.02%)</title><rect x="1.8756%" y="165" width="0.0152%" height="15" fill="rgb(217,207,13)" fg:x="123" fg:w="1"/><text x="2.1256%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 0.02%)</title><rect x="1.8756%" y="149" width="0.0152%" height="15" fill="rgb(231,73,38)" fg:x="123" fg:w="1"/><text x="2.1256%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 0.02%)</title><rect x="1.8756%" y="133" width="0.0152%" height="15" fill="rgb(225,20,46)" fg:x="123" fg:w="1"/><text x="2.1256%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 0.02%)</title><rect x="1.8756%" y="117" width="0.0152%" height="15" fill="rgb(210,31,41)" fg:x="123" fg:w="1"/><text x="2.1256%" y="127.50"></text></g><g><title>libsystem_info.dylib`si_destination_compare_init_once (1 samples, 0.02%)</title><rect x="1.8756%" y="101" width="0.0152%" height="15" fill="rgb(221,200,47)" fg:x="123" fg:w="1"/><text x="2.1256%" y="111.50"></text></g><g><title>libsystem_trace.dylib`os_log_create (1 samples, 0.02%)</title><rect x="1.8756%" y="85" width="0.0152%" height="15" fill="rgb(226,26,5)" fg:x="123" fg:w="1"/><text x="2.1256%" y="95.50"></text></g><g><title>libsystem_trace.dylib`_os_trace_prefs_and_mode_refresh_slow (1 samples, 0.02%)</title><rect x="1.8756%" y="69" width="0.0152%" height="15" fill="rgb(249,33,26)" fg:x="123" fg:w="1"/><text x="2.1256%" y="79.50"></text></g><g><title>libsystem_notify.dylib`notify_register_check (1 samples, 0.02%)</title><rect x="1.8756%" y="53" width="0.0152%" height="15" fill="rgb(235,183,28)" fg:x="123" fg:w="1"/><text x="2.1256%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.02%)</title><rect x="1.8756%" y="37" width="0.0152%" height="15" fill="rgb(221,5,38)" fg:x="123" fg:w="1"/><text x="2.1256%" y="47.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo (2 samples, 0.03%)</title><rect x="1.8756%" y="229" width="0.0305%" height="15" fill="rgb(247,18,42)" fg:x="123" fg:w="2"/><text x="2.1256%" y="239.50"></text></g><g><title>libsystem_info.dylib`search_addrinfo (1 samples, 0.02%)</title><rect x="1.8908%" y="213" width="0.0152%" height="15" fill="rgb(241,131,45)" fg:x="124" fg:w="1"/><text x="2.1408%" y="223.50"></text></g><g><title>libsystem_info.dylib`mdns_addrinfo (1 samples, 0.02%)</title><rect x="1.8908%" y="197" width="0.0152%" height="15" fill="rgb(249,31,29)" fg:x="124" fg:w="1"/><text x="2.1408%" y="207.50"></text></g><g><title>libsystem_info.dylib`_mdns_search_ex (1 samples, 0.02%)</title><rect x="1.8908%" y="181" width="0.0152%" height="15" fill="rgb(225,111,53)" fg:x="124" fg:w="1"/><text x="2.1408%" y="191.50"></text></g><g><title>libsystem_info.dylib`_mdns_query_start (1 samples, 0.02%)</title><rect x="1.8908%" y="165" width="0.0152%" height="15" fill="rgb(238,160,17)" fg:x="124" fg:w="1"/><text x="2.1408%" y="175.50"></text></g><g><title>libsystem_dnssd.dylib`DNSServiceQueryRecordInternal (1 samples, 0.02%)</title><rect x="1.8908%" y="149" width="0.0152%" height="15" fill="rgb(214,148,48)" fg:x="124" fg:w="1"/><text x="2.1408%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (1 samples, 0.02%)</title><rect x="1.8908%" y="133" width="0.0152%" height="15" fill="rgb(232,36,49)" fg:x="124" fg:w="1"/><text x="2.1408%" y="143.50"></text></g><g><title>run`std::net::each_addr (3 samples, 0.05%)</title><rect x="1.8756%" y="293" width="0.0457%" height="15" fill="rgb(209,103,24)" fg:x="123" fg:w="3"/><text x="2.1256%" y="303.50"></text></g><g><title>run`&lt;str as std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (3 samples, 0.05%)</title><rect x="1.8756%" y="277" width="0.0457%" height="15" fill="rgb(229,88,8)" fg:x="123" fg:w="3"/><text x="2.1256%" y="287.50"></text></g><g><title>run`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from (3 samples, 0.05%)</title><rect x="1.8756%" y="261" width="0.0457%" height="15" fill="rgb(213,181,19)" fg:x="123" fg:w="3"/><text x="2.1256%" y="271.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (3 samples, 0.05%)</title><rect x="1.8756%" y="245" width="0.0457%" height="15" fill="rgb(254,191,54)" fg:x="123" fg:w="3"/><text x="2.1256%" y="255.50"></text></g><g><title>libsystem_info.dylib`si_module_with_name (1 samples, 0.02%)</title><rect x="1.9061%" y="229" width="0.0152%" height="15" fill="rgb(241,83,37)" fg:x="125" fg:w="1"/><text x="2.1561%" y="239.50"></text></g><g><title>libsystem_info.dylib`si_module_static_search (1 samples, 0.02%)</title><rect x="1.9061%" y="213" width="0.0152%" height="15" fill="rgb(233,36,39)" fg:x="125" fg:w="1"/><text x="2.1561%" y="223.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="1.9061%" y="197" width="0.0152%" height="15" fill="rgb(226,3,54)" fg:x="125" fg:w="1"/><text x="2.1561%" y="207.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="1.9061%" y="181" width="0.0152%" height="15" fill="rgb(245,192,40)" fg:x="125" fg:w="1"/><text x="2.1561%" y="191.50"></text></g><g><title>libsystem_info.dylib`__si_module_static_search_block_invoke (1 samples, 0.02%)</title><rect x="1.9061%" y="165" width="0.0152%" height="15" fill="rgb(238,167,29)" fg:x="125" fg:w="1"/><text x="2.1561%" y="175.50"></text></g><g><title>libsystem_info.dylib`si_module_config_modules_for_category (1 samples, 0.02%)</title><rect x="1.9061%" y="149" width="0.0152%" height="15" fill="rgb(232,182,51)" fg:x="125" fg:w="1"/><text x="2.1561%" y="159.50"></text></g><g><title>libsystem_info.dylib`si_module_with_name (1 samples, 0.02%)</title><rect x="1.9061%" y="133" width="0.0152%" height="15" fill="rgb(231,60,39)" fg:x="125" fg:w="1"/><text x="2.1561%" y="143.50"></text></g><g><title>libsystem_info.dylib`si_module_static_cache (1 samples, 0.02%)</title><rect x="1.9061%" y="117" width="0.0152%" height="15" fill="rgb(208,69,12)" fg:x="125" fg:w="1"/><text x="2.1561%" y="127.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 0.02%)</title><rect x="1.9061%" y="101" width="0.0152%" height="15" fill="rgb(235,93,37)" fg:x="125" fg:w="1"/><text x="2.1561%" y="111.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 0.02%)</title><rect x="1.9061%" y="85" width="0.0152%" height="15" fill="rgb(213,116,39)" fg:x="125" fg:w="1"/><text x="2.1561%" y="95.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (1 samples, 0.02%)</title><rect x="1.9061%" y="69" width="0.0152%" height="15" fill="rgb(222,207,29)" fg:x="125" fg:w="1"/><text x="2.1561%" y="79.50"></text></g><g><title>run`std::sync::mpsc::Sender&lt;T&gt;::send (3 samples, 0.05%)</title><rect x="1.9213%" y="293" width="0.0457%" height="15" fill="rgb(206,96,30)" fg:x="126" fg:w="3"/><text x="2.1713%" y="303.50"></text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::send (3 samples, 0.05%)</title><rect x="1.9213%" y="277" width="0.0457%" height="15" fill="rgb(218,138,4)" fg:x="126" fg:w="3"/><text x="2.1713%" y="287.50"></text></g><g><title>run`std::sync::mpsc::blocking::SignalToken::signal (3 samples, 0.05%)</title><rect x="1.9213%" y="261" width="0.0457%" height="15" fill="rgb(250,191,14)" fg:x="126" fg:w="3"/><text x="2.1713%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.05%)</title><rect x="1.9213%" y="245" width="0.0457%" height="15" fill="rgb(239,60,40)" fg:x="126" fg:w="3"/><text x="2.1713%" y="255.50"></text></g><g><title>dyld`start (130 samples, 1.98%)</title><rect x="0.0000%" y="389" width="1.9823%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="130"/><text x="0.2500%" y="399.50">d..</text></g><g><title>run`main (130 samples, 1.98%)</title><rect x="0.0000%" y="373" width="1.9823%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="130"/><text x="0.2500%" y="383.50">r..</text></g><g><title>run`std::rt::lang_start_internal (130 samples, 1.98%)</title><rect x="0.0000%" y="357" width="1.9823%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="130"/><text x="0.2500%" y="367.50">r..</text></g><g><title>run`std::rt::lang_start::_{{closure}} (130 samples, 1.98%)</title><rect x="0.0000%" y="341" width="1.9823%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="130"/><text x="0.2500%" y="351.50">r..</text></g><g><title>run`std::sys_common::backtrace::__rust_begin_short_backtrace (130 samples, 1.98%)</title><rect x="0.0000%" y="325" width="1.9823%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="130"/><text x="0.2500%" y="335.50">r..</text></g><g><title>run`&lt;rusty_web_server::server::standard_server::StandardServer as rusty_web_server::WebServer&gt;::run (129 samples, 1.97%)</title><rect x="0.0152%" y="309" width="1.9671%" height="15" fill="rgb(231,145,46)" fg:x="1" fg:w="129"/><text x="0.2652%" y="319.50">r..</text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::send (1 samples, 0.02%)</title><rect x="1.9671%" y="293" width="0.0152%" height="15" fill="rgb(251,118,11)" fg:x="129" fg:w="1"/><text x="2.2171%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (652 samples, 9.94%)</title><rect x="1.9823%" y="389" width="9.9421%" height="15" fill="rgb(217,147,25)" fg:x="130" fg:w="652"/><text x="2.2323%" y="399.50">libsystem_kern..</text></g><g><title>libsystem_kernel.dylib`__thread_selfid (11 samples, 0.17%)</title><rect x="14.9131%" y="373" width="0.1677%" height="15" fill="rgb(247,81,37)" fg:x="978" fg:w="11"/><text x="15.1631%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (2 samples, 0.03%)</title><rect x="15.0808%" y="373" width="0.0305%" height="15" fill="rgb(209,12,38)" fg:x="989" fg:w="2"/><text x="15.3308%" y="383.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sigaltstack (1 samples, 0.02%)</title><rect x="15.1418%" y="357" width="0.0152%" height="15" fill="rgb(227,1,9)" fg:x="993" fg:w="1"/><text x="15.3918%" y="367.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (1 samples, 0.02%)</title><rect x="15.1571%" y="357" width="0.0152%" height="15" fill="rgb(248,47,43)" fg:x="994" fg:w="1"/><text x="15.4071%" y="367.50"></text></g><g><title>libsystem_c.dylib`sysconf (3 samples, 0.05%)</title><rect x="15.1723%" y="357" width="0.0457%" height="15" fill="rgb(221,10,30)" fg:x="995" fg:w="3"/><text x="15.4223%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__disable_threadsignal (36 samples, 0.55%)</title><rect x="15.2181%" y="357" width="0.5489%" height="15" fill="rgb(210,229,1)" fg:x="998" fg:w="36"/><text x="15.4681%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__munmap (2,015 samples, 30.73%)</title><rect x="15.7670%" y="357" width="30.7258%" height="15" fill="rgb(222,148,37)" fg:x="1034" fg:w="2015"/><text x="16.0170%" y="367.50">libsystem_kernel.dylib`__munmap</text></g><g><title>libsystem_kernel.dylib`__sigaltstack (100 samples, 1.52%)</title><rect x="46.4928%" y="357" width="1.5249%" height="15" fill="rgb(234,67,33)" fg:x="3049" fg:w="100"/><text x="46.7428%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`munmap (2 samples, 0.03%)</title><rect x="48.0177%" y="357" width="0.0305%" height="15" fill="rgb(247,98,35)" fg:x="3149" fg:w="2"/><text x="48.2677%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="48.0482%" y="357" width="0.0152%" height="15" fill="rgb(247,138,52)" fg:x="3151" fg:w="1"/><text x="48.2982%" y="367.50"></text></g><g><title>dyld`dyld4::RuntimeState::_finalizeListTLV (3 samples, 0.05%)</title><rect x="48.1244%" y="341" width="0.0457%" height="15" fill="rgb(213,79,30)" fg:x="3156" fg:w="3"/><text x="48.3744%" y="351.50"></text></g><g><title>libdyld.dylib`dyld4::finalizeListTLV_thunk (1 samples, 0.02%)</title><rect x="48.1702%" y="341" width="0.0152%" height="15" fill="rgb(246,177,23)" fg:x="3159" fg:w="1"/><text x="48.4202%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_terminate (953 samples, 14.53%)</title><rect x="48.1854%" y="325" width="14.5319%" height="15" fill="rgb(230,62,27)" fg:x="3160" fg:w="953"/><text x="48.4354%" y="335.50">libsystem_kernel.dylib..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.02%)</title><rect x="62.7173%" y="325" width="0.0152%" height="15" fill="rgb(216,154,8)" fg:x="4113" fg:w="1"/><text x="62.9673%" y="335.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (1 samples, 0.02%)</title><rect x="62.7325%" y="325" width="0.0152%" height="15" fill="rgb(244,35,45)" fg:x="4114" fg:w="1"/><text x="62.9825%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (5 samples, 0.08%)</title><rect x="62.7935%" y="309" width="0.0762%" height="15" fill="rgb(251,115,12)" fg:x="4118" fg:w="5"/><text x="63.0435%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (151 samples, 2.30%)</title><rect x="62.8850%" y="293" width="2.3025%" height="15" fill="rgb(240,54,50)" fg:x="4124" fg:w="151"/><text x="63.1350%" y="303.50">l..</text></g><g><title>libsystem_kernel.dylib`mig_dealloc_reply_port (153 samples, 2.33%)</title><rect x="62.8698%" y="309" width="2.3330%" height="15" fill="rgb(233,84,52)" fg:x="4123" fg:w="153"/><text x="63.1198%" y="319.50">l..</text></g><g><title>libsystem_kernel.dylib`mach_port_mod_refs (1 samples, 0.02%)</title><rect x="65.1876%" y="293" width="0.0152%" height="15" fill="rgb(207,117,47)" fg:x="4275" fg:w="1"/><text x="65.4376%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (1,117 samples, 17.03%)</title><rect x="48.1854%" y="341" width="17.0326%" height="15" fill="rgb(249,43,39)" fg:x="3160" fg:w="1117"/><text x="48.4354%" y="351.50">libsystem_pthread.dylib`_p..</text></g><g><title>libsystem_pthread.dylib`_pthread_terminate (162 samples, 2.47%)</title><rect x="62.7478%" y="325" width="2.4703%" height="15" fill="rgb(209,38,44)" fg:x="4115" fg:w="162"/><text x="62.9978%" y="335.50">li..</text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (1 samples, 0.02%)</title><rect x="65.2028%" y="309" width="0.0152%" height="15" fill="rgb(236,212,23)" fg:x="4276" fg:w="1"/><text x="65.4528%" y="319.50"></text></g><g><title>dyld`dyld4::RuntimeState::TLV_TerminatorList::reverseWalkChain(void (2 samples, 0.03%)</title><rect x="66.4684%" y="325" width="0.0305%" height="15" fill="rgb(242,79,21)" fg:x="4359" fg:w="2"/><text x="66.7184%" y="335.50"></text></g><g><title>dyld`dyld4::RuntimeState::TLV_TerminatorList::reverseWalkChain(void (11 samples, 0.17%)</title><rect x="66.5294%" y="309" width="0.1677%" height="15" fill="rgb(211,96,35)" fg:x="4363" fg:w="11"/><text x="66.7794%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="66.6972%" y="293" width="0.0152%" height="15" fill="rgb(253,215,40)" fg:x="4374" fg:w="1"/><text x="66.9472%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="66.7124%" y="293" width="0.0152%" height="15" fill="rgb(211,81,21)" fg:x="4375" fg:w="1"/><text x="66.9624%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="66.7277%" y="293" width="0.0152%" height="15" fill="rgb(208,190,38)" fg:x="4376" fg:w="1"/><text x="66.9777%" y="303.50"></text></g><g><title>run`__rust_dealloc (1 samples, 0.02%)</title><rect x="66.7429%" y="293" width="0.0152%" height="15" fill="rgb(235,213,38)" fg:x="4377" fg:w="1"/><text x="66.9929%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.08%)</title><rect x="67.0174%" y="277" width="0.0762%" height="15" fill="rgb(237,122,38)" fg:x="4395" fg:w="5"/><text x="67.2674%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.08%)</title><rect x="67.0174%" y="261" width="0.0762%" height="15" fill="rgb(244,218,35)" fg:x="4395" fg:w="5"/><text x="67.2674%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.08%)</title><rect x="67.0936%" y="277" width="0.0762%" height="15" fill="rgb(240,68,47)" fg:x="4400" fg:w="5"/><text x="67.3436%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="67.1546%" y="261" width="0.0152%" height="15" fill="rgb(210,16,53)" fg:x="4404" fg:w="1"/><text x="67.4046%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="67.1546%" y="245" width="0.0152%" height="15" fill="rgb(235,124,12)" fg:x="4404" fg:w="1"/><text x="67.4046%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.03%)</title><rect x="67.1699%" y="277" width="0.0305%" height="15" fill="rgb(224,169,11)" fg:x="4405" fg:w="2"/><text x="67.4199%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="67.2004%" y="261" width="0.0152%" height="15" fill="rgb(250,166,2)" fg:x="4407" fg:w="1"/><text x="67.4504%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="67.2004%" y="245" width="0.0152%" height="15" fill="rgb(242,216,29)" fg:x="4407" fg:w="1"/><text x="67.4504%" y="255.50"></text></g><g><title>run`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.03%)</title><rect x="67.2004%" y="277" width="0.0305%" height="15" fill="rgb(230,116,27)" fg:x="4407" fg:w="2"/><text x="67.4504%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="67.2156%" y="261" width="0.0152%" height="15" fill="rgb(228,99,48)" fg:x="4408" fg:w="1"/><text x="67.4656%" y="271.50"></text></g><g><title>dyld`invocation function for block in dyld4::RuntimeState::_finalizeListTLV (44 samples, 0.67%)</title><rect x="66.6972%" y="309" width="0.6709%" height="15" fill="rgb(253,11,6)" fg:x="4374" fg:w="44"/><text x="66.9472%" y="319.50"></text></g><g><title>run`std::sys::unix::thread_local_dtor::register_dtor::run_dtors (40 samples, 0.61%)</title><rect x="66.7582%" y="293" width="0.6099%" height="15" fill="rgb(247,143,39)" fg:x="4378" fg:w="40"/><text x="67.0082%" y="303.50"></text></g><g><title>run`std::sys_common::thread_info::THREAD_INFO::__getit::destroy (9 samples, 0.14%)</title><rect x="67.2309%" y="277" width="0.1372%" height="15" fill="rgb(236,97,10)" fg:x="4409" fg:w="9"/><text x="67.4809%" y="287.50"></text></g><g><title>libdyld.dylib`DYLD-STUB$$pthread_getspecific (1 samples, 0.02%)</title><rect x="67.3681%" y="309" width="0.0152%" height="15" fill="rgb(233,208,19)" fg:x="4418" fg:w="1"/><text x="67.6181%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="67.3833%" y="309" width="0.0305%" height="15" fill="rgb(216,164,2)" fg:x="4419" fg:w="2"/><text x="67.6333%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.03%)</title><rect x="67.3833%" y="293" width="0.0305%" height="15" fill="rgb(220,129,5)" fg:x="4419" fg:w="2"/><text x="67.6333%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.03%)</title><rect x="67.4138%" y="309" width="0.0305%" height="15" fill="rgb(242,17,10)" fg:x="4421" fg:w="2"/><text x="67.6638%" y="319.50"></text></g><g><title>dyld`dyld4::RuntimeState::_finalizeListTLV (64 samples, 0.98%)</title><rect x="66.4989%" y="325" width="0.9759%" height="15" fill="rgb(242,107,0)" fg:x="4361" fg:w="64"/><text x="66.7489%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.03%)</title><rect x="67.4443%" y="309" width="0.0305%" height="15" fill="rgb(251,28,31)" fg:x="4423" fg:w="2"/><text x="67.6943%" y="319.50"></text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::free (1 samples, 0.02%)</title><rect x="67.4748%" y="325" width="0.0152%" height="15" fill="rgb(233,223,10)" fg:x="4425" fg:w="1"/><text x="67.7248%" y="335.50"></text></g><g><title>libdyld.dylib`dyld4::finalizeListTLV_thunk (3 samples, 0.05%)</title><rect x="67.4901%" y="325" width="0.0457%" height="15" fill="rgb(215,21,27)" fg:x="4426" fg:w="3"/><text x="67.7401%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.09%)</title><rect x="67.5358%" y="325" width="0.0915%" height="15" fill="rgb(232,23,21)" fg:x="4429" fg:w="6"/><text x="67.7858%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.08%)</title><rect x="67.5511%" y="309" width="0.0762%" height="15" fill="rgb(244,5,23)" fg:x="4430" fg:w="5"/><text x="67.8011%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit (1,288 samples, 19.64%)</title><rect x="48.0634%" y="357" width="19.6401%" height="15" fill="rgb(226,81,46)" fg:x="3152" fg:w="1288"/><text x="48.3134%" y="367.50">libsystem_pthread.dylib`_pthrea..</text></g><g><title>libsystem_pthread.dylib`_pthread_tsd_cleanup (163 samples, 2.49%)</title><rect x="65.2181%" y="341" width="2.4855%" height="15" fill="rgb(247,70,30)" fg:x="4277" fg:w="163"/><text x="65.4681%" y="351.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.08%)</title><rect x="67.6273%" y="325" width="0.0762%" height="15" fill="rgb(212,68,19)" fg:x="4435" fg:w="5"/><text x="67.8773%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.02%)</title><rect x="67.6883%" y="309" width="0.0152%" height="15" fill="rgb(240,187,13)" fg:x="4439" fg:w="1"/><text x="67.9383%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="67.6883%" y="293" width="0.0152%" height="15" fill="rgb(223,113,26)" fg:x="4439" fg:w="1"/><text x="67.9383%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_setcancelstate_exit (5 samples, 0.08%)</title><rect x="67.7036%" y="357" width="0.0762%" height="15" fill="rgb(206,192,2)" fg:x="4440" fg:w="5"/><text x="67.9536%" y="367.50"></text></g><g><title>run`__rust_dealloc (1 samples, 0.02%)</title><rect x="67.7798%" y="357" width="0.0152%" height="15" fill="rgb(241,108,4)" fg:x="4445" fg:w="1"/><text x="68.0298%" y="367.50"></text></g><g><title>run`core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.02%)</title><rect x="67.7951%" y="357" width="0.0152%" height="15" fill="rgb(247,173,49)" fg:x="4446" fg:w="1"/><text x="68.0451%" y="367.50"></text></g><g><title>libsystem_c.dylib`getpagesize (5 samples, 0.08%)</title><rect x="68.0238%" y="341" width="0.0762%" height="15" fill="rgb(224,114,35)" fg:x="4461" fg:w="5"/><text x="68.2738%" y="351.50"></text></g><g><title>libsystem_c.dylib`sigaltstack (1 samples, 0.02%)</title><rect x="68.1000%" y="341" width="0.0152%" height="15" fill="rgb(245,159,27)" fg:x="4466" fg:w="1"/><text x="68.3500%" y="351.50"></text></g><g><title>libsystem_c.dylib`sysconf (14 samples, 0.21%)</title><rect x="68.1153%" y="341" width="0.2135%" height="15" fill="rgb(245,172,44)" fg:x="4467" fg:w="14"/><text x="68.3653%" y="351.50"></text></g><g><title>libsystem_c.dylib`getpagesize (8 samples, 0.12%)</title><rect x="68.2068%" y="325" width="0.1220%" height="15" fill="rgb(236,23,11)" fg:x="4473" fg:w="8"/><text x="68.4568%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__mprotect (58 samples, 0.88%)</title><rect x="68.3288%" y="341" width="0.8844%" height="15" fill="rgb(205,117,38)" fg:x="4481" fg:w="58"/><text x="68.5788%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__sigaltstack (20 samples, 0.30%)</title><rect x="69.2132%" y="341" width="0.3050%" height="15" fill="rgb(237,72,25)" fg:x="4539" fg:w="20"/><text x="69.4632%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mmap (1 samples, 0.02%)</title><rect x="69.5181%" y="341" width="0.0152%" height="15" fill="rgb(244,70,9)" fg:x="4559" fg:w="1"/><text x="69.7681%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`munmap (1 samples, 0.02%)</title><rect x="69.5334%" y="341" width="0.0152%" height="15" fill="rgb(217,125,39)" fg:x="4560" fg:w="1"/><text x="69.7834%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.20%)</title><rect x="69.5486%" y="341" width="0.1982%" height="15" fill="rgb(235,36,10)" fg:x="4561" fg:w="13"/><text x="69.7986%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.15%)</title><rect x="69.5944%" y="325" width="0.1525%" height="15" fill="rgb(251,123,47)" fg:x="4564" fg:w="10"/><text x="69.8444%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="69.7469%" y="341" width="0.0152%" height="15" fill="rgb(221,13,13)" fg:x="4574" fg:w="1"/><text x="69.9969%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (15 samples, 0.23%)</title><rect x="69.7621%" y="341" width="0.2287%" height="15" fill="rgb(238,131,9)" fg:x="4575" fg:w="15"/><text x="70.0121%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="69.9909%" y="341" width="0.0152%" height="15" fill="rgb(211,50,8)" fg:x="4590" fg:w="1"/><text x="70.2409%" y="351.50"></text></g><g><title>dyld`dyld4::APIs::_tlv_atexit(void (*) (1 samples, 0.02%)</title><rect x="70.4636%" y="325" width="0.0152%" height="15" fill="rgb(245,182,24)" fg:x="4621" fg:w="1"/><text x="70.7136%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="70.4788%" y="325" width="0.0305%" height="15" fill="rgb(242,14,37)" fg:x="4622" fg:w="2"/><text x="70.7288%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.08%)</title><rect x="70.5093%" y="325" width="0.0762%" height="15" fill="rgb(246,228,12)" fg:x="4624" fg:w="5"/><text x="70.7593%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_get_stacksize_np (1 samples, 0.02%)</title><rect x="70.5855%" y="325" width="0.0152%" height="15" fill="rgb(213,55,15)" fg:x="4629" fg:w="1"/><text x="70.8355%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (1 samples, 0.02%)</title><rect x="70.6008%" y="325" width="0.0152%" height="15" fill="rgb(209,9,3)" fg:x="4630" fg:w="1"/><text x="70.8508%" y="335.50"></text></g><g><title>run`__rdl_dealloc (4 samples, 0.06%)</title><rect x="70.6160%" y="325" width="0.0610%" height="15" fill="rgb(230,59,30)" fg:x="4631" fg:w="4"/><text x="70.8660%" y="335.50"></text></g><g><title>run`core::ptr::drop_in_place&lt;&lt;rusty_junctions::patterns::n4ary::RecvJoinPattern as rusty_junctions::join_pattern::JoinPattern&gt;::fire::{{closure}}&gt; (2 samples, 0.03%)</title><rect x="70.6770%" y="325" width="0.0305%" height="15" fill="rgb(209,121,21)" fg:x="4635" fg:w="2"/><text x="70.9270%" y="335.50"></text></g><g><title>run`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (1 samples, 0.02%)</title><rect x="70.7075%" y="325" width="0.0152%" height="15" fill="rgb(220,109,13)" fg:x="4637" fg:w="1"/><text x="70.9575%" y="335.50"></text></g><g><title>run`std::sys::unix::thread::guard::current (1 samples, 0.02%)</title><rect x="70.7228%" y="325" width="0.0152%" height="15" fill="rgb(232,18,1)" fg:x="4638" fg:w="1"/><text x="70.9728%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_self (1 samples, 0.02%)</title><rect x="70.7228%" y="309" width="0.0152%" height="15" fill="rgb(215,41,42)" fg:x="4638" fg:w="1"/><text x="70.9728%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="70.7838%" y="309" width="0.0152%" height="15" fill="rgb(224,123,36)" fg:x="4642" fg:w="1"/><text x="71.0338%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (26 samples, 0.40%)</title><rect x="70.9973%" y="293" width="0.3965%" height="15" fill="rgb(240,125,3)" fg:x="4656" fg:w="26"/><text x="71.2473%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.61%)</title><rect x="70.7990%" y="309" width="0.6099%" height="15" fill="rgb(205,98,50)" fg:x="4643" fg:w="40"/><text x="71.0490%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="71.3937%" y="293" width="0.0152%" height="15" fill="rgb(205,185,37)" fg:x="4682" fg:w="1"/><text x="71.6437%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.03%)</title><rect x="71.4090%" y="309" width="0.0305%" height="15" fill="rgb(238,207,15)" fg:x="4683" fg:w="2"/><text x="71.6590%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.15%)</title><rect x="71.4395%" y="309" width="0.1525%" height="15" fill="rgb(213,199,42)" fg:x="4685" fg:w="10"/><text x="71.6895%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="71.5919%" y="309" width="0.0152%" height="15" fill="rgb(235,201,11)" fg:x="4695" fg:w="1"/><text x="71.8419%" y="319.50"></text></g><g><title>run`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="71.6072%" y="309" width="0.0152%" height="15" fill="rgb(207,46,11)" fg:x="4696" fg:w="1"/><text x="71.8572%" y="319.50"></text></g><g><title>run`__rdl_dealloc (3 samples, 0.05%)</title><rect x="71.6224%" y="309" width="0.0457%" height="15" fill="rgb(241,35,35)" fg:x="4697" fg:w="3"/><text x="71.8724%" y="319.50"></text></g><g><title>run`alloc::vec::Vec&lt;T,A&gt;::retain (1 samples, 0.02%)</title><rect x="71.6682%" y="309" width="0.0152%" height="15" fill="rgb(243,32,47)" fg:x="4700" fg:w="1"/><text x="71.9182%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.14%)</title><rect x="71.7139%" y="293" width="0.1372%" height="15" fill="rgb(247,202,23)" fg:x="4703" fg:w="9"/><text x="71.9639%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.12%)</title><rect x="71.7292%" y="277" width="0.1220%" height="15" fill="rgb(219,102,11)" fg:x="4704" fg:w="8"/><text x="71.9792%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.09%)</title><rect x="71.8512%" y="293" width="0.0915%" height="15" fill="rgb(243,110,44)" fg:x="4712" fg:w="6"/><text x="72.1012%" y="303.50"></text></g><g><title>run`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="71.9427%" y="293" width="0.0152%" height="15" fill="rgb(222,74,54)" fg:x="4718" fg:w="1"/><text x="72.1927%" y="303.50"></text></g><g><title>run`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="71.9579%" y="293" width="0.0457%" height="15" fill="rgb(216,99,12)" fg:x="4719" fg:w="3"/><text x="72.2079%" y="303.50"></text></g><g><title>run`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="72.0037%" y="277" width="0.0152%" height="15" fill="rgb(226,22,26)" fg:x="4722" fg:w="1"/><text x="72.2537%" y="287.50"></text></g><g><title>run`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="72.0189%" y="261" width="0.0457%" height="15" fill="rgb(217,163,10)" fg:x="4723" fg:w="3"/><text x="72.2689%" y="271.50"></text></g><g><title>run`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::ternary::transform_send&lt;&lt;rusty_web_server::server::standard_server::StandardServer as rusty_web_server::WebServer&gt;::run::{{closure}},(i64,rusty_web_server::request::RawHttpRequest),i64,i64&gt;::{{closure}}&gt; (6 samples, 0.09%)</title><rect x="72.0037%" y="293" width="0.0915%" height="15" fill="rgb(213,25,53)" fg:x="4722" fg:w="6"/><text x="72.2537%" y="303.50"></text></g><g><title>run`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (5 samples, 0.08%)</title><rect x="72.0189%" y="277" width="0.0762%" height="15" fill="rgb(252,105,26)" fg:x="4723" fg:w="5"/><text x="72.2689%" y="287.50"></text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (2 samples, 0.03%)</title><rect x="72.0647%" y="261" width="0.0305%" height="15" fill="rgb(220,39,43)" fg:x="4726" fg:w="2"/><text x="72.3147%" y="271.50"></text></g><g><title>run`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="72.0952%" y="277" width="0.0152%" height="15" fill="rgb(229,68,48)" fg:x="4728" fg:w="1"/><text x="72.3452%" y="287.50"></text></g><g><title>run`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.11%)</title><rect x="72.1104%" y="261" width="0.1067%" height="15" fill="rgb(252,8,32)" fg:x="4729" fg:w="7"/><text x="72.3604%" y="271.50"></text></g><g><title>run`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::unary::transform_send&lt;&lt;rusty_web_server::server::standard_server::StandardServer as rusty_web_server::WebServer&gt;::run::{{closure}},rusty_web_server::action::Action&gt;::{{closure}}&gt; (13 samples, 0.20%)</title><rect x="72.0952%" y="293" width="0.1982%" height="15" fill="rgb(223,20,43)" fg:x="4728" fg:w="13"/><text x="72.3452%" y="303.50"></text></g><g><title>run`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (12 samples, 0.18%)</title><rect x="72.1104%" y="277" width="0.1830%" height="15" fill="rgb(229,81,49)" fg:x="4729" fg:w="12"/><text x="72.3604%" y="287.50"></text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (5 samples, 0.08%)</title><rect x="72.2171%" y="261" width="0.0762%" height="15" fill="rgb(236,28,36)" fg:x="4736" fg:w="5"/><text x="72.4671%" y="271.50"></text></g><g><title>run`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="72.3391%" y="277" width="0.0305%" height="15" fill="rgb(249,185,26)" fg:x="4744" fg:w="2"/><text x="72.5891%" y="287.50"></text></g><g><title>run`core::ptr::drop_in_place&lt;std::sync::mpsc::Sender&lt;rusty_junctions::types::Packet&gt;&gt; (11 samples, 0.17%)</title><rect x="72.2934%" y="293" width="0.1677%" height="15" fill="rgb(249,174,33)" fg:x="4741" fg:w="11"/><text x="72.5434%" y="303.50"></text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (6 samples, 0.09%)</title><rect x="72.3696%" y="277" width="0.0915%" height="15" fill="rgb(233,201,37)" fg:x="4746" fg:w="6"/><text x="72.6196%" y="287.50"></text></g><g><title>run`core::ptr::drop_in_place&lt;&lt;rusty_junctions::patterns::n4ary::RecvJoinPattern as rusty_junctions::join_pattern::JoinPattern&gt;::fire::{{closure}}&gt; (52 samples, 0.79%)</title><rect x="71.6834%" y="309" width="0.7929%" height="15" fill="rgb(221,78,26)" fg:x="4701" fg:w="52"/><text x="71.9334%" y="319.50"></text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::drop_chan (1 samples, 0.02%)</title><rect x="72.4611%" y="293" width="0.0152%" height="15" fill="rgb(250,127,30)" fg:x="4752" fg:w="1"/><text x="72.7111%" y="303.50"></text></g><g><title>run`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::ternary::transform_send&lt;&lt;rusty_web_server::server::standard_server::StandardServer as rusty_web_server::WebServer&gt;::run::{{closure}},(i64,rusty_web_server::request::RawHttpRequest),i64,i64&gt;::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="72.4764%" y="309" width="0.0152%" height="15" fill="rgb(230,49,44)" fg:x="4753" fg:w="1"/><text x="72.7264%" y="319.50"></text></g><g><title>run`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::unary::transform_send&lt;&lt;rusty_web_server::server::standard_server::StandardServer as rusty_web_server::WebServer&gt;::run::{{closure}},rusty_web_server::action::Action&gt;::{{closure}}&gt; (2 samples, 0.03%)</title><rect x="72.4916%" y="309" width="0.0305%" height="15" fill="rgb(229,67,23)" fg:x="4754" fg:w="2"/><text x="72.7416%" y="319.50"></text></g><g><title>run`core::ptr::drop_in_place&lt;rusty_junctions::function_transforms::unary::transform_send&lt;&lt;rusty_web_server::server::standard_server::StandardServer as rusty_web_server::WebServer&gt;::run::{{closure}},rusty_web_server::request::RawHttpRequest&gt;::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="72.5221%" y="309" width="0.0152%" height="15" fill="rgb(249,83,47)" fg:x="4756" fg:w="1"/><text x="72.7721%" y="319.50"></text></g><g><title>run`core::slice::sort::recurse (2 samples, 0.03%)</title><rect x="72.5374%" y="309" width="0.0305%" height="15" fill="rgb(215,43,3)" fg:x="4757" fg:w="2"/><text x="72.7874%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.11%)</title><rect x="72.7051%" y="293" width="0.1067%" height="15" fill="rgb(238,154,13)" fg:x="4768" fg:w="7"/><text x="72.9551%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.11%)</title><rect x="72.7051%" y="277" width="0.1067%" height="15" fill="rgb(219,56,2)" fg:x="4768" fg:w="7"/><text x="72.9551%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.11%)</title><rect x="72.7051%" y="261" width="0.1067%" height="15" fill="rgb(233,0,4)" fg:x="4768" fg:w="7"/><text x="72.9551%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.08%)</title><rect x="72.7356%" y="245" width="0.0762%" height="15" fill="rgb(235,30,7)" fg:x="4770" fg:w="5"/><text x="72.9856%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.03%)</title><rect x="72.8118%" y="293" width="0.0305%" height="15" fill="rgb(250,79,13)" fg:x="4775" fg:w="2"/><text x="73.0618%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.02%)</title><rect x="72.8728%" y="261" width="0.0152%" height="15" fill="rgb(211,146,34)" fg:x="4779" fg:w="1"/><text x="73.1228%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.02%)</title><rect x="72.8881%" y="261" width="0.0152%" height="15" fill="rgb(228,22,38)" fg:x="4780" fg:w="1"/><text x="73.1381%" y="271.50"></text></g><g><title>run`core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="72.9033%" y="261" width="0.0305%" height="15" fill="rgb(235,168,5)" fg:x="4781" fg:w="2"/><text x="73.1533%" y="271.50"></text></g><g><title>run`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="72.9338%" y="261" width="0.0152%" height="15" fill="rgb(221,155,16)" fg:x="4783" fg:w="1"/><text x="73.1838%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.02%)</title><rect x="73.1473%" y="245" width="0.0152%" height="15" fill="rgb(215,215,53)" fg:x="4797" fg:w="1"/><text x="73.3973%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="73.1625%" y="245" width="0.0152%" height="15" fill="rgb(223,4,10)" fg:x="4798" fg:w="1"/><text x="73.4125%" y="255.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.02%)</title><rect x="73.1778%" y="245" width="0.0152%" height="15" fill="rgb(234,103,6)" fg:x="4799" fg:w="1"/><text x="73.4278%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="73.1930%" y="245" width="0.0152%" height="15" fill="rgb(227,97,0)" fg:x="4800" fg:w="1"/><text x="73.4430%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="73.2083%" y="245" width="0.0152%" height="15" fill="rgb(234,150,53)" fg:x="4801" fg:w="1"/><text x="73.4583%" y="255.50"></text></g><g><title>run`&lt;rusty_junctions::patterns::n4ary::RecvJoinPattern as rusty_junctions::join_pattern::JoinPattern&gt;::channels (1 samples, 0.02%)</title><rect x="73.2235%" y="245" width="0.0152%" height="15" fill="rgb(228,201,54)" fg:x="4802" fg:w="1"/><text x="73.4735%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="73.2235%" y="229" width="0.0152%" height="15" fill="rgb(222,22,37)" fg:x="4802" fg:w="1"/><text x="73.4735%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="73.2235%" y="213" width="0.0152%" height="15" fill="rgb(237,53,32)" fg:x="4802" fg:w="1"/><text x="73.4735%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="73.2235%" y="197" width="0.0152%" height="15" fill="rgb(233,25,53)" fg:x="4802" fg:w="1"/><text x="73.4735%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="73.2235%" y="181" width="0.0152%" height="15" fill="rgb(210,40,34)" fg:x="4802" fg:w="1"/><text x="73.4735%" y="191.50"></text></g><g><title>run`core::hash::BuildHasher::hash_one (7 samples, 0.11%)</title><rect x="73.2388%" y="245" width="0.1067%" height="15" fill="rgb(241,220,44)" fg:x="4803" fg:w="7"/><text x="73.4888%" y="255.50"></text></g><g><title>run`&lt;rusty_junctions::types::ids::ChannelId as core::hash::Hash&gt;::hash (4 samples, 0.06%)</title><rect x="73.2845%" y="229" width="0.0610%" height="15" fill="rgb(235,28,35)" fg:x="4806" fg:w="4"/><text x="73.5345%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="73.4218%" y="213" width="0.0152%" height="15" fill="rgb(210,56,17)" fg:x="4815" fg:w="1"/><text x="73.6718%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.11%)</title><rect x="73.4218%" y="229" width="0.1067%" height="15" fill="rgb(224,130,29)" fg:x="4815" fg:w="7"/><text x="73.6718%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.09%)</title><rect x="73.4370%" y="213" width="0.0915%" height="15" fill="rgb(235,212,8)" fg:x="4816" fg:w="6"/><text x="73.6870%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.08%)</title><rect x="73.4523%" y="197" width="0.0762%" height="15" fill="rgb(223,33,50)" fg:x="4817" fg:w="5"/><text x="73.7023%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="73.5133%" y="181" width="0.0152%" height="15" fill="rgb(219,149,13)" fg:x="4821" fg:w="1"/><text x="73.7633%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="73.5285%" y="229" width="0.0152%" height="15" fill="rgb(250,156,29)" fg:x="4822" fg:w="1"/><text x="73.7785%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (1 samples, 0.02%)</title><rect x="73.5438%" y="229" width="0.0152%" height="15" fill="rgb(216,193,19)" fg:x="4823" fg:w="1"/><text x="73.7938%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="73.5590%" y="229" width="0.0152%" height="15" fill="rgb(216,135,14)" fg:x="4824" fg:w="1"/><text x="73.8090%" y="239.50"></text></g><g><title>run`rusty_junctions::controller::alive::_&lt;impl rusty_junctions::controller::Controller&gt;::is_alive (48 samples, 0.73%)</title><rect x="72.8576%" y="277" width="0.7319%" height="15" fill="rgb(241,47,5)" fg:x="4778" fg:w="48"/><text x="73.1076%" y="287.50"></text></g><g><title>run`rusty_junctions::join_pattern::JoinPattern::is_alive (42 samples, 0.64%)</title><rect x="72.9491%" y="261" width="0.6404%" height="15" fill="rgb(233,42,35)" fg:x="4784" fg:w="42"/><text x="73.1991%" y="271.50"></text></g><g><title>run`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.24%)</title><rect x="73.3455%" y="245" width="0.2440%" height="15" fill="rgb(231,13,6)" fg:x="4810" fg:w="16"/><text x="73.5955%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="73.5743%" y="229" width="0.0152%" height="15" fill="rgb(207,181,40)" fg:x="4825" fg:w="1"/><text x="73.8243%" y="239.50"></text></g><g><title>run`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 0.78%)</title><rect x="72.8423%" y="293" width="0.7777%" height="15" fill="rgb(254,173,49)" fg:x="4777" fg:w="51"/><text x="73.0923%" y="303.50"></text></g><g><title>run`rusty_junctions::join_pattern::JoinPattern::is_alive (2 samples, 0.03%)</title><rect x="73.5895%" y="277" width="0.0305%" height="15" fill="rgb(221,1,38)" fg:x="4826" fg:w="2"/><text x="73.8395%" y="287.50"></text></g><g><title>run`&lt;rusty_junctions::patterns::ternary::RecvJoinPattern as rusty_junctions::join_pattern::JoinPattern&gt;::channels (1 samples, 0.02%)</title><rect x="73.6200%" y="293" width="0.0152%" height="15" fill="rgb(206,124,46)" fg:x="4828" fg:w="1"/><text x="73.8700%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="73.6200%" y="277" width="0.0152%" height="15" fill="rgb(249,21,11)" fg:x="4828" fg:w="1"/><text x="73.8700%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="73.6200%" y="261" width="0.0152%" height="15" fill="rgb(222,201,40)" fg:x="4828" fg:w="1"/><text x="73.8700%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="73.6200%" y="245" width="0.0152%" height="15" fill="rgb(235,61,29)" fg:x="4828" fg:w="1"/><text x="73.8700%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="73.6353%" y="261" width="0.0152%" height="15" fill="rgb(219,207,3)" fg:x="4829" fg:w="1"/><text x="73.8853%" y="271.50"></text></g><g><title>run`&lt;F as rusty_junctions::functions::ternary::FnBoxClone&gt;::clone_box (2 samples, 0.03%)</title><rect x="73.6353%" y="277" width="0.0305%" height="15" fill="rgb(222,56,46)" fg:x="4829" fg:w="2"/><text x="73.8853%" y="287.50"></text></g><g><title>run`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="73.6505%" y="261" width="0.0152%" height="15" fill="rgb(239,76,54)" fg:x="4830" fg:w="1"/><text x="73.9005%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.05%)</title><rect x="73.6658%" y="261" width="0.0457%" height="15" fill="rgb(231,124,27)" fg:x="4831" fg:w="3"/><text x="73.9158%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.05%)</title><rect x="73.6658%" y="245" width="0.0457%" height="15" fill="rgb(249,195,6)" fg:x="4831" fg:w="3"/><text x="73.9158%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.05%)</title><rect x="73.6658%" y="229" width="0.0457%" height="15" fill="rgb(237,174,47)" fg:x="4831" fg:w="3"/><text x="73.9158%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="73.6658%" y="213" width="0.0457%" height="15" fill="rgb(206,201,31)" fg:x="4831" fg:w="3"/><text x="73.9158%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_setstacksize (1 samples, 0.02%)</title><rect x="73.7115%" y="261" width="0.0152%" height="15" fill="rgb(231,57,52)" fg:x="4834" fg:w="1"/><text x="73.9615%" y="271.50"></text></g><g><title>run`DYLD-STUB$$pthread_attr_destroy (1 samples, 0.02%)</title><rect x="73.7267%" y="261" width="0.0152%" height="15" fill="rgb(248,177,22)" fg:x="4835" fg:w="1"/><text x="73.9767%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (61 samples, 0.93%)</title><rect x="73.7420%" y="245" width="0.9302%" height="15" fill="rgb(215,211,37)" fg:x="4836" fg:w="61"/><text x="73.9920%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_vm_map (1 samples, 0.02%)</title><rect x="74.6722%" y="245" width="0.0152%" height="15" fill="rgb(241,128,51)" fg:x="4897" fg:w="1"/><text x="74.9222%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.06%)</title><rect x="74.6874%" y="245" width="0.0610%" height="15" fill="rgb(227,165,31)" fg:x="4898" fg:w="4"/><text x="74.9374%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.05%)</title><rect x="74.7027%" y="229" width="0.0457%" height="15" fill="rgb(228,167,24)" fg:x="4899" fg:w="3"/><text x="74.9527%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.05%)</title><rect x="74.7027%" y="213" width="0.0457%" height="15" fill="rgb(228,143,12)" fg:x="4899" fg:w="3"/><text x="74.9527%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="74.7027%" y="197" width="0.0457%" height="15" fill="rgb(249,149,8)" fg:x="4899" fg:w="3"/><text x="74.9527%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (70 samples, 1.07%)</title><rect x="75.4956%" y="229" width="1.0674%" height="15" fill="rgb(243,35,44)" fg:x="4951" fg:w="70"/><text x="75.7456%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (30 samples, 0.46%)</title><rect x="76.5630%" y="229" width="0.4575%" height="15" fill="rgb(246,89,9)" fg:x="5021" fg:w="30"/><text x="76.8130%" y="239.50"></text></g><g><title>run`&lt;rusty_junctions::patterns::ternary::SendJoinPattern as rusty_junctions::join_pattern::JoinPattern&gt;::fire (224 samples, 3.42%)</title><rect x="73.6353%" y="293" width="3.4157%" height="15" fill="rgb(233,213,13)" fg:x="4829" fg:w="224"/><text x="73.8853%" y="303.50">run..</text></g><g><title>run`std::thread::spawn (222 samples, 3.39%)</title><rect x="73.6658%" y="277" width="3.3852%" height="15" fill="rgb(233,141,41)" fg:x="4831" fg:w="222"/><text x="73.9158%" y="287.50">run..</text></g><g><title>run`std::sys::unix::thread::Thread::new (217 samples, 3.31%)</title><rect x="73.7420%" y="261" width="3.3089%" height="15" fill="rgb(239,167,4)" fg:x="4836" fg:w="217"/><text x="73.9920%" y="271.50">run..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (151 samples, 2.30%)</title><rect x="74.7484%" y="245" width="2.3025%" height="15" fill="rgb(209,217,16)" fg:x="4902" fg:w="151"/><text x="74.9984%" y="255.50">l..</text></g><g><title>libsystem_kernel.dylib`mach_vm_protect (2 samples, 0.03%)</title><rect x="77.0204%" y="229" width="0.0305%" height="15" fill="rgb(219,88,35)" fg:x="5051" fg:w="2"/><text x="77.2704%" y="239.50"></text></g><g><title>run`&lt;rusty_junctions::patterns::unary::RecvJoinPattern as rusty_junctions::join_pattern::JoinPattern&gt;::channels (2 samples, 0.03%)</title><rect x="77.0509%" y="293" width="0.0305%" height="15" fill="rgb(220,193,23)" fg:x="5053" fg:w="2"/><text x="77.3009%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="77.0509%" y="277" width="0.0305%" height="15" fill="rgb(230,90,52)" fg:x="5053" fg:w="2"/><text x="77.3009%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="77.0509%" y="261" width="0.0305%" height="15" fill="rgb(252,106,19)" fg:x="5053" fg:w="2"/><text x="77.3009%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="77.0509%" y="245" width="0.0305%" height="15" fill="rgb(206,74,20)" fg:x="5053" fg:w="2"/><text x="77.3009%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="77.0814%" y="261" width="0.0152%" height="15" fill="rgb(230,138,44)" fg:x="5055" fg:w="1"/><text x="77.3314%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="77.0814%" y="245" width="0.0152%" height="15" fill="rgb(235,182,43)" fg:x="5055" fg:w="1"/><text x="77.3314%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="77.0814%" y="229" width="0.0152%" height="15" fill="rgb(242,16,51)" fg:x="5055" fg:w="1"/><text x="77.3314%" y="239.50"></text></g><g><title>run`&lt;F as rusty_junctions::functions::unary::FnBoxClone&gt;::clone_box (3 samples, 0.05%)</title><rect x="77.0814%" y="277" width="0.0457%" height="15" fill="rgb(248,9,4)" fg:x="5055" fg:w="3"/><text x="77.3314%" y="287.50"></text></g><g><title>run`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="77.0967%" y="261" width="0.0305%" height="15" fill="rgb(210,31,22)" fg:x="5056" fg:w="2"/><text x="77.3467%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="77.1272%" y="261" width="0.0305%" height="15" fill="rgb(239,54,39)" fg:x="5058" fg:w="2"/><text x="77.3772%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="77.1272%" y="245" width="0.0305%" height="15" fill="rgb(230,99,41)" fg:x="5058" fg:w="2"/><text x="77.3772%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="77.1272%" y="229" width="0.0305%" height="15" fill="rgb(253,106,12)" fg:x="5058" fg:w="2"/><text x="77.3772%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="77.1272%" y="213" width="0.0305%" height="15" fill="rgb(213,46,41)" fg:x="5058" fg:w="2"/><text x="77.3772%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_attr_setstacksize (1 samples, 0.02%)</title><rect x="77.1577%" y="261" width="0.0152%" height="15" fill="rgb(215,133,35)" fg:x="5060" fg:w="1"/><text x="77.4077%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_create (1 samples, 0.02%)</title><rect x="77.1729%" y="261" width="0.0152%" height="15" fill="rgb(213,28,5)" fg:x="5061" fg:w="1"/><text x="77.4229%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="77.1882%" y="261" width="0.0152%" height="15" fill="rgb(215,77,49)" fg:x="5062" fg:w="1"/><text x="77.4382%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_create (54 samples, 0.82%)</title><rect x="77.2034%" y="245" width="0.8234%" height="15" fill="rgb(248,100,22)" fg:x="5063" fg:w="54"/><text x="77.4534%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="78.0268%" y="245" width="0.0152%" height="15" fill="rgb(208,67,9)" fg:x="5117" fg:w="1"/><text x="78.2768%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="78.0268%" y="229" width="0.0152%" height="15" fill="rgb(219,133,21)" fg:x="5117" fg:w="1"/><text x="78.2768%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="78.0268%" y="213" width="0.0152%" height="15" fill="rgb(246,46,29)" fg:x="5117" fg:w="1"/><text x="78.2768%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="78.0268%" y="197" width="0.0152%" height="15" fill="rgb(246,185,52)" fg:x="5117" fg:w="1"/><text x="78.2768%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (37 samples, 0.56%)</title><rect x="78.6673%" y="229" width="0.5642%" height="15" fill="rgb(252,136,11)" fg:x="5159" fg:w="37"/><text x="78.9173%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_protect_trap (33 samples, 0.50%)</title><rect x="79.2315%" y="229" width="0.5032%" height="15" fill="rgb(219,138,53)" fg:x="5196" fg:w="33"/><text x="79.4815%" y="239.50"></text></g><g><title>run`std::sys::unix::thread::Thread::new (167 samples, 2.55%)</title><rect x="77.2034%" y="261" width="2.5465%" height="15" fill="rgb(211,51,23)" fg:x="5063" fg:w="167"/><text x="77.4534%" y="271.50">ru..</text></g><g><title>libsystem_pthread.dylib`_pthread_create (112 samples, 1.71%)</title><rect x="78.0421%" y="245" width="1.7078%" height="15" fill="rgb(247,221,28)" fg:x="5118" fg:w="112"/><text x="78.2921%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_vm_protect (1 samples, 0.02%)</title><rect x="79.7347%" y="229" width="0.0152%" height="15" fill="rgb(251,222,45)" fg:x="5229" fg:w="1"/><text x="79.9847%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="79.7499%" y="245" width="0.0305%" height="15" fill="rgb(217,162,53)" fg:x="5230" fg:w="2"/><text x="79.9999%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="79.7499%" y="229" width="0.0305%" height="15" fill="rgb(229,93,14)" fg:x="5230" fg:w="2"/><text x="79.9999%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="79.7499%" y="213" width="0.0305%" height="15" fill="rgb(209,67,49)" fg:x="5230" fg:w="2"/><text x="79.9999%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="79.7499%" y="197" width="0.0305%" height="15" fill="rgb(213,87,29)" fg:x="5230" fg:w="2"/><text x="79.9999%" y="207.50"></text></g><g><title>run`&lt;rusty_junctions::patterns::unary::SendJoinPattern as rusty_junctions::join_pattern::JoinPattern&gt;::fire (178 samples, 2.71%)</title><rect x="77.0814%" y="293" width="2.7142%" height="15" fill="rgb(205,151,52)" fg:x="5055" fg:w="178"/><text x="77.3314%" y="303.50">ru..</text></g><g><title>run`std::thread::spawn (175 samples, 2.67%)</title><rect x="77.1272%" y="277" width="2.6685%" height="15" fill="rgb(253,215,39)" fg:x="5058" fg:w="175"/><text x="77.3772%" y="287.50">ru..</text></g><g><title>run`std::thread::Thread::new (3 samples, 0.05%)</title><rect x="79.7499%" y="261" width="0.0457%" height="15" fill="rgb(221,220,41)" fg:x="5230" fg:w="3"/><text x="79.9999%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="79.7804%" y="245" width="0.0152%" height="15" fill="rgb(218,133,21)" fg:x="5232" fg:w="1"/><text x="80.0304%" y="255.50"></text></g><g><title>run`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.06%)</title><rect x="79.7957%" y="293" width="0.0610%" height="15" fill="rgb(221,193,43)" fg:x="5233" fg:w="4"/><text x="80.0457%" y="303.50"></text></g><g><title>run`alloc::raw_vec::finish_grow (4 samples, 0.06%)</title><rect x="79.7957%" y="277" width="0.0610%" height="15" fill="rgb(240,128,52)" fg:x="5233" fg:w="4"/><text x="80.0457%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.06%)</title><rect x="79.7957%" y="261" width="0.0610%" height="15" fill="rgb(253,114,12)" fg:x="5233" fg:w="4"/><text x="80.0457%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.06%)</title><rect x="79.7957%" y="245" width="0.0610%" height="15" fill="rgb(215,223,47)" fg:x="5233" fg:w="4"/><text x="80.0457%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.06%)</title><rect x="79.7957%" y="229" width="0.0610%" height="15" fill="rgb(248,225,23)" fg:x="5233" fg:w="4"/><text x="80.0457%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="79.8262%" y="213" width="0.0305%" height="15" fill="rgb(250,108,0)" fg:x="5235" fg:w="2"/><text x="80.0762%" y="223.50"></text></g><g><title>run`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.02%)</title><rect x="80.0396%" y="277" width="0.0152%" height="15" fill="rgb(228,208,7)" fg:x="5249" fg:w="1"/><text x="80.2896%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="80.0549%" y="261" width="0.0152%" height="15" fill="rgb(244,45,10)" fg:x="5250" fg:w="1"/><text x="80.3049%" y="271.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (3 samples, 0.05%)</title><rect x="80.0701%" y="261" width="0.0457%" height="15" fill="rgb(207,125,25)" fg:x="5251" fg:w="3"/><text x="80.3201%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.02%)</title><rect x="80.2379%" y="245" width="0.0152%" height="15" fill="rgb(210,195,18)" fg:x="5262" fg:w="1"/><text x="80.4879%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_detach (116 samples, 1.77%)</title><rect x="80.1159%" y="261" width="1.7688%" height="15" fill="rgb(249,80,12)" fg:x="5254" fg:w="116"/><text x="80.3659%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_join (107 samples, 1.63%)</title><rect x="80.2531%" y="245" width="1.6316%" height="15" fill="rgb(221,65,9)" fg:x="5263" fg:w="107"/><text x="80.5031%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_deallocate (107 samples, 1.63%)</title><rect x="80.2531%" y="229" width="1.6316%" height="15" fill="rgb(235,49,36)" fg:x="5263" fg:w="107"/><text x="80.5031%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (107 samples, 1.63%)</title><rect x="80.2531%" y="213" width="1.6316%" height="15" fill="rgb(225,32,20)" fg:x="5263" fg:w="107"/><text x="80.5031%" y="223.50"></text></g><g><title>run`__rust_dealloc (1 samples, 0.02%)</title><rect x="81.8847%" y="261" width="0.0152%" height="15" fill="rgb(215,141,46)" fg:x="5370" fg:w="1"/><text x="82.1347%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="81.9000%" y="245" width="0.0152%" height="15" fill="rgb(250,160,47)" fg:x="5371" fg:w="1"/><text x="82.1500%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="81.9000%" y="229" width="0.0152%" height="15" fill="rgb(216,222,40)" fg:x="5371" fg:w="1"/><text x="82.1500%" y="239.50"></text></g><g><title>run`alloc::vec::Vec&lt;T,A&gt;::retain (136 samples, 2.07%)</title><rect x="79.8567%" y="293" width="2.0738%" height="15" fill="rgb(234,217,39)" fg:x="5237" fg:w="136"/><text x="80.1067%" y="303.50">r..</text></g><g><title>run`core::ptr::drop_in_place&lt;std::thread::JoinHandle&lt;()&gt;&gt; (123 samples, 1.88%)</title><rect x="80.0549%" y="277" width="1.8756%" height="15" fill="rgb(207,178,40)" fg:x="5250" fg:w="123"/><text x="80.3049%" y="287.50">r..</text></g><g><title>run`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.03%)</title><rect x="81.9000%" y="261" width="0.0305%" height="15" fill="rgb(221,136,13)" fg:x="5371" fg:w="2"/><text x="82.1500%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.02%)</title><rect x="81.9152%" y="245" width="0.0152%" height="15" fill="rgb(249,199,10)" fg:x="5372" fg:w="1"/><text x="82.1652%" y="255.50"></text></g><g><title>run`bag::Bag&lt;K,V&gt;::add (9 samples, 0.14%)</title><rect x="81.9305%" y="293" width="0.1372%" height="15" fill="rgb(249,222,13)" fg:x="5373" fg:w="9"/><text x="82.1805%" y="303.50"></text></g><g><title>run`core::hash::BuildHasher::hash_one (7 samples, 0.11%)</title><rect x="81.9610%" y="277" width="0.1067%" height="15" fill="rgb(244,185,38)" fg:x="5375" fg:w="7"/><text x="82.2110%" y="287.50"></text></g><g><title>run`core::hash::impls::_&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="82.0525%" y="261" width="0.0152%" height="15" fill="rgb(236,202,9)" fg:x="5381" fg:w="1"/><text x="82.3025%" y="271.50"></text></g><g><title>run`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="82.0677%" y="293" width="0.0152%" height="15" fill="rgb(250,229,37)" fg:x="5382" fg:w="1"/><text x="82.3177%" y="303.50"></text></g><g><title>run`core::slice::sort::recurse (2 samples, 0.03%)</title><rect x="82.0830%" y="293" width="0.0305%" height="15" fill="rgb(206,174,23)" fg:x="5383" fg:w="2"/><text x="82.3330%" y="303.50"></text></g><g><title>run`counter::Counter::increment (1 samples, 0.02%)</title><rect x="82.1134%" y="293" width="0.0152%" height="15" fill="rgb(211,33,43)" fg:x="5385" fg:w="1"/><text x="82.3634%" y="303.50"></text></g><g><title>run`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="82.1287%" y="293" width="0.0152%" height="15" fill="rgb(245,58,50)" fg:x="5386" fg:w="1"/><text x="82.3787%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="82.1897%" y="245" width="0.0152%" height="15" fill="rgb(244,68,36)" fg:x="5390" fg:w="1"/><text x="82.4397%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (28 samples, 0.43%)</title><rect x="82.2354%" y="229" width="0.4270%" height="15" fill="rgb(232,229,15)" fg:x="5393" fg:w="28"/><text x="82.4854%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (3 samples, 0.05%)</title><rect x="82.6624%" y="229" width="0.0457%" height="15" fill="rgb(254,30,23)" fg:x="5421" fg:w="3"/><text x="82.9124%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="82.6929%" y="213" width="0.0152%" height="15" fill="rgb(235,160,14)" fg:x="5423" fg:w="1"/><text x="82.9429%" y="223.50"></text></g><g><title>run`std::sync::mpsc::blocking::WaitToken::wait (37 samples, 0.56%)</title><rect x="82.1592%" y="261" width="0.5642%" height="15" fill="rgb(212,155,44)" fg:x="5388" fg:w="37"/><text x="82.4092%" y="271.50"></text></g><g><title>run`std::thread::park (34 samples, 0.52%)</title><rect x="82.2049%" y="245" width="0.5185%" height="15" fill="rgb(226,2,50)" fg:x="5391" fg:w="34"/><text x="82.4549%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="82.7081%" y="229" width="0.0152%" height="15" fill="rgb(234,177,6)" fg:x="5424" fg:w="1"/><text x="82.9581%" y="239.50"></text></g><g><title>run`std::sync::mpsc::blocking::tokens (1 samples, 0.02%)</title><rect x="82.7234%" y="261" width="0.0152%" height="15" fill="rgb(217,24,9)" fg:x="5425" fg:w="1"/><text x="82.9734%" y="271.50"></text></g><g><title>run`std::sys_common::thread_info::current_thread (1 samples, 0.02%)</title><rect x="82.7234%" y="245" width="0.0152%" height="15" fill="rgb(220,13,46)" fg:x="5425" fg:w="1"/><text x="82.9734%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.02%)</title><rect x="82.7539%" y="245" width="0.0152%" height="15" fill="rgb(239,221,27)" fg:x="5427" fg:w="1"/><text x="83.0039%" y="255.50"></text></g><g><title>run`std::sync::mpsc::Receiver&lt;T&gt;::recv (47 samples, 0.72%)</title><rect x="82.1439%" y="293" width="0.7167%" height="15" fill="rgb(222,198,25)" fg:x="5387" fg:w="47"/><text x="82.3939%" y="303.50"></text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (46 samples, 0.70%)</title><rect x="82.1592%" y="277" width="0.7014%" height="15" fill="rgb(211,99,13)" fg:x="5388" fg:w="46"/><text x="82.4092%" y="287.50"></text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (8 samples, 0.12%)</title><rect x="82.7386%" y="261" width="0.1220%" height="15" fill="rgb(232,111,31)" fg:x="5426" fg:w="8"/><text x="82.9886%" y="271.50"></text></g><g><title>run`std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (6 samples, 0.09%)</title><rect x="82.7691%" y="245" width="0.0915%" height="15" fill="rgb(245,82,37)" fg:x="5428" fg:w="6"/><text x="83.0191%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.05%)</title><rect x="82.8149%" y="229" width="0.0457%" height="15" fill="rgb(227,149,46)" fg:x="5431" fg:w="3"/><text x="83.0649%" y="239.50"></text></g><g><title>run`rusty_junctions::controller::handlers::_&lt;impl rusty_junctions::controller::Controller&gt;::handle_packets (676 samples, 10.31%)</title><rect x="72.5679%" y="309" width="10.3080%" height="15" fill="rgb(218,36,50)" fg:x="4759" fg:w="676"/><text x="72.8179%" y="319.50">run`rusty_junct..</text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::recv (1 samples, 0.02%)</title><rect x="82.8606%" y="293" width="0.0152%" height="15" fill="rgb(226,80,48)" fg:x="5434" fg:w="1"/><text x="83.1106%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__close_nocancel (71 samples, 1.08%)</title><rect x="82.9826%" y="293" width="1.0826%" height="15" fill="rgb(238,224,15)" fg:x="5442" fg:w="71"/><text x="83.2326%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="84.0653%" y="293" width="0.0305%" height="15" fill="rgb(241,136,10)" fg:x="5513" fg:w="2"/><text x="84.3153%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="84.0653%" y="277" width="0.0305%" height="15" fill="rgb(208,32,45)" fg:x="5513" fg:w="2"/><text x="84.3153%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="84.0653%" y="261" width="0.0305%" height="15" fill="rgb(207,135,9)" fg:x="5513" fg:w="2"/><text x="84.3153%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.29%)</title><rect x="84.0958%" y="293" width="0.2897%" height="15" fill="rgb(206,86,44)" fg:x="5515" fg:w="19"/><text x="84.3458%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (14 samples, 0.21%)</title><rect x="84.1720%" y="277" width="0.2135%" height="15" fill="rgb(245,177,15)" fg:x="5520" fg:w="14"/><text x="84.4220%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.11%)</title><rect x="84.3855%" y="293" width="0.1067%" height="15" fill="rgb(206,64,50)" fg:x="5534" fg:w="7"/><text x="84.6355%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="84.4922%" y="293" width="0.0152%" height="15" fill="rgb(234,36,40)" fg:x="5541" fg:w="1"/><text x="84.7422%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="84.5075%" y="277" width="0.0305%" height="15" fill="rgb(213,64,8)" fg:x="5542" fg:w="2"/><text x="84.7575%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="84.5227%" y="261" width="0.0152%" height="15" fill="rgb(210,75,36)" fg:x="5543" fg:w="1"/><text x="84.7727%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="84.5227%" y="245" width="0.0152%" height="15" fill="rgb(229,88,21)" fg:x="5543" fg:w="1"/><text x="84.7727%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="84.5227%" y="229" width="0.0152%" height="15" fill="rgb(252,204,47)" fg:x="5543" fg:w="1"/><text x="84.7727%" y="239.50"></text></g><g><title>run`alloc::fmt::format (5 samples, 0.08%)</title><rect x="84.5075%" y="293" width="0.0762%" height="15" fill="rgb(208,77,27)" fg:x="5542" fg:w="5"/><text x="84.7575%" y="303.50"></text></g><g><title>run`core::fmt::write (3 samples, 0.05%)</title><rect x="84.5380%" y="277" width="0.0457%" height="15" fill="rgb(221,76,26)" fg:x="5544" fg:w="3"/><text x="84.7880%" y="287.50"></text></g><g><title>run`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.03%)</title><rect x="84.5532%" y="261" width="0.0305%" height="15" fill="rgb(225,139,18)" fg:x="5545" fg:w="2"/><text x="84.8032%" y="271.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sendto (1 samples, 0.02%)</title><rect x="84.6447%" y="277" width="0.0152%" height="15" fill="rgb(230,137,11)" fg:x="5551" fg:w="1"/><text x="84.8947%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (85 samples, 1.30%)</title><rect x="84.6600%" y="277" width="1.2961%" height="15" fill="rgb(212,28,1)" fg:x="5552" fg:w="85"/><text x="84.9100%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="85.9561%" y="277" width="0.0152%" height="15" fill="rgb(248,164,17)" fg:x="5637" fg:w="1"/><text x="86.2061%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="85.9561%" y="261" width="0.0152%" height="15" fill="rgb(222,171,42)" fg:x="5637" fg:w="1"/><text x="86.2061%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="85.9713%" y="277" width="0.0152%" height="15" fill="rgb(243,84,45)" fg:x="5638" fg:w="1"/><text x="86.2213%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="85.9866%" y="261" width="0.0152%" height="15" fill="rgb(252,49,23)" fg:x="5639" fg:w="1"/><text x="86.2366%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="85.9866%" y="245" width="0.0152%" height="15" fill="rgb(215,19,7)" fg:x="5639" fg:w="1"/><text x="86.2366%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="85.9866%" y="229" width="0.0152%" height="15" fill="rgb(238,81,41)" fg:x="5639" fg:w="1"/><text x="86.2366%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="85.9866%" y="213" width="0.0152%" height="15" fill="rgb(210,199,37)" fg:x="5639" fg:w="1"/><text x="86.2366%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="86.0018%" y="213" width="0.0152%" height="15" fill="rgb(244,192,49)" fg:x="5640" fg:w="1"/><text x="86.2518%" y="223.50"></text></g><g><title>run`__rdl_realloc (1 samples, 0.02%)</title><rect x="86.0171%" y="213" width="0.0152%" height="15" fill="rgb(226,211,11)" fg:x="5641" fg:w="1"/><text x="86.2671%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="86.0476%" y="165" width="0.0152%" height="15" fill="rgb(236,162,54)" fg:x="5643" fg:w="1"/><text x="86.2976%" y="175.50"></text></g><g><title>run`rusty_web_server::response::HttpResponse::send (100 samples, 1.52%)</title><rect x="84.5837%" y="293" width="1.5249%" height="15" fill="rgb(220,229,9)" fg:x="5547" fg:w="100"/><text x="84.8337%" y="303.50"></text></g><g><title>run`alloc::fmt::format (8 samples, 0.12%)</title><rect x="85.9866%" y="277" width="0.1220%" height="15" fill="rgb(250,87,22)" fg:x="5639" fg:w="8"/><text x="86.2366%" y="287.50"></text></g><g><title>run`core::fmt::write (7 samples, 0.11%)</title><rect x="86.0018%" y="261" width="0.1067%" height="15" fill="rgb(239,43,17)" fg:x="5640" fg:w="7"/><text x="86.2518%" y="271.50"></text></g><g><title>run`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.11%)</title><rect x="86.0018%" y="245" width="0.1067%" height="15" fill="rgb(231,177,25)" fg:x="5640" fg:w="7"/><text x="86.2518%" y="255.50"></text></g><g><title>run`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.11%)</title><rect x="86.0018%" y="229" width="0.1067%" height="15" fill="rgb(219,179,1)" fg:x="5640" fg:w="7"/><text x="86.2518%" y="239.50"></text></g><g><title>run`alloc::raw_vec::finish_grow (5 samples, 0.08%)</title><rect x="86.0323%" y="213" width="0.0762%" height="15" fill="rgb(238,219,53)" fg:x="5642" fg:w="5"/><text x="86.2823%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.06%)</title><rect x="86.0476%" y="197" width="0.0610%" height="15" fill="rgb(232,167,36)" fg:x="5643" fg:w="4"/><text x="86.2976%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.06%)</title><rect x="86.0476%" y="181" width="0.0610%" height="15" fill="rgb(244,19,51)" fg:x="5643" fg:w="4"/><text x="86.2976%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.05%)</title><rect x="86.0628%" y="165" width="0.0457%" height="15" fill="rgb(224,6,22)" fg:x="5644" fg:w="3"/><text x="86.3128%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.05%)</title><rect x="86.0628%" y="149" width="0.0457%" height="15" fill="rgb(224,145,5)" fg:x="5644" fg:w="3"/><text x="86.3128%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.05%)</title><rect x="86.0628%" y="133" width="0.0457%" height="15" fill="rgb(234,130,49)" fg:x="5644" fg:w="3"/><text x="86.3128%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="86.0628%" y="117" width="0.0457%" height="15" fill="rgb(254,6,2)" fg:x="5644" fg:w="3"/><text x="86.3128%" y="127.50"></text></g><g><title>run`std::sync::mpsc::blocking::SignalToken::signal (1 samples, 0.02%)</title><rect x="86.1086%" y="277" width="0.0152%" height="15" fill="rgb(208,96,46)" fg:x="5647" fg:w="1"/><text x="86.3586%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (15 samples, 0.23%)</title><rect x="86.1391%" y="245" width="0.2287%" height="15" fill="rgb(239,3,39)" fg:x="5649" fg:w="15"/><text x="86.3891%" y="255.50"></text></g><g><title>run`std::sync::mpsc::Sender&lt;T&gt;::send (19 samples, 0.29%)</title><rect x="86.1086%" y="293" width="0.2897%" height="15" fill="rgb(233,210,1)" fg:x="5647" fg:w="19"/><text x="86.3586%" y="303.50"></text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::send (18 samples, 0.27%)</title><rect x="86.1238%" y="277" width="0.2745%" height="15" fill="rgb(244,137,37)" fg:x="5648" fg:w="18"/><text x="86.3738%" y="287.50"></text></g><g><title>run`std::sync::mpsc::blocking::SignalToken::signal (17 samples, 0.26%)</title><rect x="86.1391%" y="261" width="0.2592%" height="15" fill="rgb(240,136,2)" fg:x="5649" fg:w="17"/><text x="86.3891%" y="271.50"></text></g><g><title>run`std::sys_common::thread_parker::generic::Parker::unpark (2 samples, 0.03%)</title><rect x="86.3678%" y="245" width="0.0305%" height="15" fill="rgb(239,18,37)" fg:x="5664" fg:w="2"/><text x="86.6178%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.02%)</title><rect x="86.3830%" y="229" width="0.0152%" height="15" fill="rgb(218,185,22)" fg:x="5665" fg:w="1"/><text x="86.6330%" y="239.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__error (1 samples, 0.02%)</title><rect x="86.4288%" y="277" width="0.0152%" height="15" fill="rgb(225,218,4)" fg:x="5668" fg:w="1"/><text x="86.6788%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`_pthread_exit_if_canceled (1 samples, 0.02%)</title><rect x="86.4745%" y="261" width="0.0152%" height="15" fill="rgb(230,182,32)" fg:x="5671" fg:w="1"/><text x="86.7245%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (7 samples, 0.11%)</title><rect x="86.4898%" y="261" width="0.1067%" height="15" fill="rgb(242,56,43)" fg:x="5672" fg:w="7"/><text x="86.7398%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (40 samples, 0.61%)</title><rect x="86.5965%" y="245" width="0.6099%" height="15" fill="rgb(233,99,24)" fg:x="5679" fg:w="40"/><text x="86.8465%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_reply_port (17 samples, 0.26%)</title><rect x="87.2065%" y="245" width="0.2592%" height="15" fill="rgb(234,209,42)" fg:x="5719" fg:w="17"/><text x="87.4565%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (58 samples, 0.88%)</title><rect x="86.5965%" y="261" width="0.8844%" height="15" fill="rgb(227,7,12)" fg:x="5679" fg:w="58"/><text x="86.8465%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mig_get_reply_port (1 samples, 0.02%)</title><rect x="87.4657%" y="245" width="0.0152%" height="15" fill="rgb(245,203,43)" fg:x="5736" fg:w="1"/><text x="87.7157%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mig_get_reply_port (1 samples, 0.02%)</title><rect x="87.4809%" y="261" width="0.0152%" height="15" fill="rgb(238,205,33)" fg:x="5737" fg:w="1"/><text x="87.7309%" y="271.50"></text></g><g><title>libsystem_c.dylib`nanosleep (70 samples, 1.07%)</title><rect x="86.4440%" y="277" width="1.0674%" height="15" fill="rgb(231,56,7)" fg:x="5669" fg:w="70"/><text x="86.6940%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (1 samples, 0.02%)</title><rect x="87.4962%" y="261" width="0.0152%" height="15" fill="rgb(244,186,29)" fg:x="5738" fg:w="1"/><text x="87.7462%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__error (1 samples, 0.02%)</title><rect x="87.5114%" y="277" width="0.0152%" height="15" fill="rgb(234,111,31)" fg:x="5739" fg:w="1"/><text x="87.7614%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (165 samples, 2.52%)</title><rect x="87.5267%" y="277" width="2.5160%" height="15" fill="rgb(241,149,10)" fg:x="5740" fg:w="165"/><text x="87.7767%" y="287.50">li..</text></g><g><title>run`rusty_junctions::function_transforms::ternary::transform_send::_{{closure}} (474 samples, 7.23%)</title><rect x="82.8759%" y="309" width="7.2278%" height="15" fill="rgb(249,206,44)" fg:x="5435" fg:w="474"/><text x="83.1259%" y="319.50">run`rusty_..</text></g><g><title>run`std::thread::sleep (243 samples, 3.71%)</title><rect x="86.3983%" y="293" width="3.7054%" height="15" fill="rgb(251,153,30)" fg:x="5666" fg:w="243"/><text x="86.6483%" y="303.50">run`..</text></g><g><title>libsystem_kernel.dylib`cerror (4 samples, 0.06%)</title><rect x="90.0427%" y="277" width="0.0610%" height="15" fill="rgb(239,152,38)" fg:x="5905" fg:w="4"/><text x="90.2927%" y="287.50"></text></g><g><title>libsystem_c.dylib`nanosleep (1 samples, 0.02%)</title><rect x="90.2257%" y="293" width="0.0152%" height="15" fill="rgb(249,139,47)" fg:x="5917" fg:w="1"/><text x="90.4757%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="90.2409%" y="293" width="0.0152%" height="15" fill="rgb(244,64,35)" fg:x="5918" fg:w="1"/><text x="90.4909%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="90.2409%" y="277" width="0.0152%" height="15" fill="rgb(216,46,15)" fg:x="5918" fg:w="1"/><text x="90.4909%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="90.2409%" y="261" width="0.0152%" height="15" fill="rgb(250,74,19)" fg:x="5918" fg:w="1"/><text x="90.4909%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="90.2562%" y="261" width="0.0152%" height="15" fill="rgb(249,42,33)" fg:x="5919" fg:w="1"/><text x="90.5062%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="90.2562%" y="245" width="0.0152%" height="15" fill="rgb(242,149,17)" fg:x="5919" fg:w="1"/><text x="90.5062%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.02%)</title><rect x="90.2714%" y="261" width="0.0152%" height="15" fill="rgb(244,29,21)" fg:x="5920" fg:w="1"/><text x="90.5214%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="90.3172%" y="229" width="0.0305%" height="15" fill="rgb(220,130,37)" fg:x="5923" fg:w="2"/><text x="90.5672%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="90.3172%" y="213" width="0.0305%" height="15" fill="rgb(211,67,2)" fg:x="5923" fg:w="2"/><text x="90.5672%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="90.3172%" y="197" width="0.0305%" height="15" fill="rgb(235,68,52)" fg:x="5923" fg:w="2"/><text x="90.5672%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="90.3172%" y="181" width="0.0305%" height="15" fill="rgb(246,142,3)" fg:x="5923" fg:w="2"/><text x="90.5672%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="90.3477%" y="229" width="0.0152%" height="15" fill="rgb(241,25,7)" fg:x="5925" fg:w="1"/><text x="90.5977%" y="239.50"></text></g><g><title>run`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="90.3172%" y="245" width="0.0762%" height="15" fill="rgb(242,119,39)" fg:x="5923" fg:w="5"/><text x="90.5672%" y="255.50"></text></g><g><title>run`core::str::pattern::TwoWaySearcher::next (2 samples, 0.03%)</title><rect x="90.3629%" y="229" width="0.0305%" height="15" fill="rgb(241,98,45)" fg:x="5926" fg:w="2"/><text x="90.6129%" y="239.50"></text></g><g><title>run`DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="90.3934%" y="245" width="0.0152%" height="15" fill="rgb(254,28,30)" fg:x="5928" fg:w="1"/><text x="90.6434%" y="255.50"></text></g><g><title>run`rusty_web_server::action::Action::from_parsed_http_request (11 samples, 0.17%)</title><rect x="90.2562%" y="293" width="0.1677%" height="15" fill="rgb(241,142,54)" fg:x="5919" fg:w="11"/><text x="90.5062%" y="303.50"></text></g><g><title>run`&lt;rusty_web_server::action::Operation as core::str::traits::FromStr&gt;::from_str (11 samples, 0.17%)</title><rect x="90.2562%" y="277" width="0.1677%" height="15" fill="rgb(222,85,15)" fg:x="5919" fg:w="11"/><text x="90.5062%" y="287.50"></text></g><g><title>run`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.14%)</title><rect x="90.2867%" y="261" width="0.1372%" height="15" fill="rgb(210,85,47)" fg:x="5921" fg:w="9"/><text x="90.5367%" y="271.50"></text></g><g><title>run`core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="90.4087%" y="245" width="0.0152%" height="15" fill="rgb(224,206,25)" fg:x="5929" fg:w="1"/><text x="90.6587%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (31 samples, 0.47%)</title><rect x="90.4239%" y="277" width="0.4727%" height="15" fill="rgb(243,201,19)" fg:x="5930" fg:w="31"/><text x="90.6739%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="90.8966%" y="277" width="0.0152%" height="15" fill="rgb(236,59,4)" fg:x="5961" fg:w="1"/><text x="91.1466%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="90.8966%" y="261" width="0.0152%" height="15" fill="rgb(254,179,45)" fg:x="5961" fg:w="1"/><text x="91.1466%" y="271.50"></text></g><g><title>run`httparse::parse_headers_iter_uninit (1 samples, 0.02%)</title><rect x="90.9271%" y="245" width="0.0152%" height="15" fill="rgb(226,14,10)" fg:x="5963" fg:w="1"/><text x="91.1771%" y="255.50"></text></g><g><title>run`rusty_web_server::request::ParsedHttpRequest::from_raw_http_request (39 samples, 0.59%)</title><rect x="90.4239%" y="293" width="0.5947%" height="15" fill="rgb(244,27,41)" fg:x="5930" fg:w="39"/><text x="90.6739%" y="303.50"></text></g><g><title>run`httparse::Request::parse (7 samples, 0.11%)</title><rect x="90.9119%" y="277" width="0.1067%" height="15" fill="rgb(235,35,32)" fg:x="5962" fg:w="7"/><text x="91.1619%" y="287.50"></text></g><g><title>run`httparse::Request::parse_with_uninit_headers (7 samples, 0.11%)</title><rect x="90.9119%" y="261" width="0.1067%" height="15" fill="rgb(218,68,31)" fg:x="5962" fg:w="7"/><text x="91.1619%" y="271.50"></text></g><g><title>run`httparse::simd::runtime::match_uri_vectored (5 samples, 0.08%)</title><rect x="90.9424%" y="245" width="0.0762%" height="15" fill="rgb(207,120,37)" fg:x="5964" fg:w="5"/><text x="91.1924%" y="255.50"></text></g><g><title>run`httparse::simd::avx2::match_url_char_32_avx (5 samples, 0.08%)</title><rect x="90.9424%" y="229" width="0.0762%" height="15" fill="rgb(227,98,0)" fg:x="5964" fg:w="5"/><text x="91.1924%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="91.0796%" y="261" width="0.0305%" height="15" fill="rgb(207,7,3)" fg:x="5973" fg:w="2"/><text x="91.3296%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="91.0796%" y="245" width="0.0305%" height="15" fill="rgb(206,98,19)" fg:x="5973" fg:w="2"/><text x="91.3296%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="91.0796%" y="229" width="0.0305%" height="15" fill="rgb(217,5,26)" fg:x="5973" fg:w="2"/><text x="91.3296%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="91.0948%" y="213" width="0.0152%" height="15" fill="rgb(235,190,38)" fg:x="5974" fg:w="1"/><text x="91.3448%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (9 samples, 0.14%)</title><rect x="91.1101%" y="245" width="0.1372%" height="15" fill="rgb(247,86,24)" fg:x="5975" fg:w="9"/><text x="91.3601%" y="255.50"></text></g><g><title>run`std::sync::mpsc::Sender&lt;T&gt;::send (16 samples, 0.24%)</title><rect x="91.0186%" y="293" width="0.2440%" height="15" fill="rgb(205,101,16)" fg:x="5969" fg:w="16"/><text x="91.2686%" y="303.50"></text></g><g><title>run`std::sync::mpsc::shared::Packet&lt;T&gt;::send (16 samples, 0.24%)</title><rect x="91.0186%" y="277" width="0.2440%" height="15" fill="rgb(246,168,33)" fg:x="5969" fg:w="16"/><text x="91.2686%" y="287.50"></text></g><g><title>run`std::sync::mpsc::blocking::SignalToken::signal (10 samples, 0.15%)</title><rect x="91.1101%" y="261" width="0.1525%" height="15" fill="rgb(231,114,1)" fg:x="5975" fg:w="10"/><text x="91.3601%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (1 samples, 0.02%)</title><rect x="91.2473%" y="245" width="0.0152%" height="15" fill="rgb(207,184,53)" fg:x="5984" fg:w="1"/><text x="91.4973%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__error (2 samples, 0.03%)</title><rect x="91.3388%" y="277" width="0.0305%" height="15" fill="rgb(224,95,51)" fg:x="5990" fg:w="2"/><text x="91.5888%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (6 samples, 0.09%)</title><rect x="91.3846%" y="261" width="0.0915%" height="15" fill="rgb(212,188,45)" fg:x="5993" fg:w="6"/><text x="91.6346%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (1 samples, 0.02%)</title><rect x="91.4761%" y="245" width="0.0152%" height="15" fill="rgb(223,154,38)" fg:x="5999" fg:w="1"/><text x="91.7261%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (38 samples, 0.58%)</title><rect x="91.4913%" y="245" width="0.5794%" height="15" fill="rgb(251,22,52)" fg:x="6000" fg:w="38"/><text x="91.7413%" y="255.50"></text></g><g><title>libsystem_c.dylib`nanosleep (61 samples, 0.93%)</title><rect x="91.3693%" y="277" width="0.9302%" height="15" fill="rgb(229,209,22)" fg:x="5992" fg:w="61"/><text x="91.6193%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (54 samples, 0.82%)</title><rect x="91.4761%" y="261" width="0.8234%" height="15" fill="rgb(234,138,34)" fg:x="5999" fg:w="54"/><text x="91.7261%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_reply_port (15 samples, 0.23%)</title><rect x="92.0708%" y="245" width="0.2287%" height="15" fill="rgb(212,95,11)" fg:x="6038" fg:w="15"/><text x="92.3208%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__error (4 samples, 0.06%)</title><rect x="92.2995%" y="277" width="0.0610%" height="15" fill="rgb(240,179,47)" fg:x="6053" fg:w="4"/><text x="92.5495%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (330 samples, 5.03%)</title><rect x="92.3605%" y="277" width="5.0320%" height="15" fill="rgb(240,163,11)" fg:x="6057" fg:w="330"/><text x="92.6105%" y="287.50">libsys..</text></g><g><title>libsystem_kernel.dylib`cerror (10 samples, 0.15%)</title><rect x="97.3925%" y="277" width="0.1525%" height="15" fill="rgb(236,37,12)" fg:x="6387" fg:w="10"/><text x="97.6425%" y="287.50"></text></g><g><title>run`rusty_junctions::function_transforms::unary::transform_send::_{{closure}} (489 samples, 7.46%)</title><rect x="90.1037%" y="309" width="7.4565%" height="15" fill="rgb(232,164,16)" fg:x="5909" fg:w="489"/><text x="90.3537%" y="319.50">run`rusty_..</text></g><g><title>run`std::thread::sleep (413 samples, 6.30%)</title><rect x="91.2626%" y="293" width="6.2977%" height="15" fill="rgb(244,205,15)" fg:x="5985" fg:w="413"/><text x="91.5126%" y="303.50">run`std:..</text></g><g><title>libsystem_kernel.dylib`clock_get_time (1 samples, 0.02%)</title><rect x="97.5450%" y="277" width="0.0152%" height="15" fill="rgb(223,117,47)" fg:x="6397" fg:w="1"/><text x="97.7950%" y="287.50"></text></g><g><title>run`std::sys_common::backtrace::__rust_begin_short_backtrace (1,760 samples, 26.84%)</title><rect x="70.7380%" y="325" width="26.8375%" height="15" fill="rgb(244,107,35)" fg:x="4639" fg:w="1760"/><text x="70.9880%" y="335.50">run`std::sys_common::backtrace::__rust_begi..</text></g><g><title>run`rusty_web_server::action::Action::from_parsed_http_request (1 samples, 0.02%)</title><rect x="97.5602%" y="309" width="0.0152%" height="15" fill="rgb(205,140,8)" fg:x="6398" fg:w="1"/><text x="97.8102%" y="319.50"></text></g><g><title>dyld`bzero_sse_np (1 samples, 0.02%)</title><rect x="97.5755%" y="293" width="0.0152%" height="15" fill="rgb(228,84,46)" fg:x="6399" fg:w="1"/><text x="97.8255%" y="303.50"></text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::pthread_getspecific (1 samples, 0.02%)</title><rect x="97.5907%" y="293" width="0.0152%" height="15" fill="rgb(254,188,9)" fg:x="6400" fg:w="1"/><text x="97.8407%" y="303.50"></text></g><g><title>dyld`dyld4::RuntimeState::addTLVTerminationFunc(void (*) (3 samples, 0.05%)</title><rect x="97.5755%" y="309" width="0.0457%" height="15" fill="rgb(206,112,54)" fg:x="6399" fg:w="3"/><text x="97.8255%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="97.6060%" y="293" width="0.0152%" height="15" fill="rgb(216,84,49)" fg:x="6401" fg:w="1"/><text x="97.8560%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="97.6060%" y="277" width="0.0152%" height="15" fill="rgb(214,194,35)" fg:x="6401" fg:w="1"/><text x="97.8560%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="97.6060%" y="261" width="0.0152%" height="15" fill="rgb(249,28,3)" fg:x="6401" fg:w="1"/><text x="97.8560%" y="271.50"></text></g><g><title>libdyld.dylib`_tlv_atexit (1 samples, 0.02%)</title><rect x="97.6212%" y="309" width="0.0152%" height="15" fill="rgb(222,56,52)" fg:x="6402" fg:w="1"/><text x="97.8712%" y="319.50"></text></g><g><title>dyld`dyld4::RuntimeState::withTLVLock(void  (1 samples, 0.02%)</title><rect x="97.7280%" y="277" width="0.0152%" height="15" fill="rgb(245,217,50)" fg:x="6409" fg:w="1"/><text x="97.9780%" y="287.50"></text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::os_unfair_recursive_lock_lock_with_options (1 samples, 0.02%)</title><rect x="97.7280%" y="261" width="0.0152%" height="15" fill="rgb(213,201,24)" fg:x="6409" fg:w="1"/><text x="97.9780%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.08%)</title><rect x="97.7432%" y="277" width="0.0762%" height="15" fill="rgb(248,116,28)" fg:x="6410" fg:w="5"/><text x="97.9932%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.08%)</title><rect x="97.7432%" y="261" width="0.0762%" height="15" fill="rgb(219,72,43)" fg:x="6410" fg:w="5"/><text x="97.9932%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.08%)</title><rect x="97.7432%" y="245" width="0.0762%" height="15" fill="rgb(209,138,14)" fg:x="6410" fg:w="5"/><text x="97.9932%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.05%)</title><rect x="97.7737%" y="229" width="0.0457%" height="15" fill="rgb(222,18,33)" fg:x="6412" fg:w="3"/><text x="98.0237%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.02%)</title><rect x="97.8195%" y="277" width="0.0152%" height="15" fill="rgb(213,199,7)" fg:x="6415" fg:w="1"/><text x="98.0695%" y="287.50"></text></g><g><title>dyld`dyld4::RuntimeState::_instantiateTLVs (8 samples, 0.12%)</title><rect x="97.7280%" y="293" width="0.1220%" height="15" fill="rgb(250,110,10)" fg:x="6409" fg:w="8"/><text x="97.9780%" y="303.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_recursive_lock_lock_with_options (1 samples, 0.02%)</title><rect x="97.8347%" y="277" width="0.0152%" height="15" fill="rgb(248,123,6)" fg:x="6416" fg:w="1"/><text x="98.0847%" y="287.50"></text></g><g><title>dyld`dyld4::RuntimeState::withTLVLock(void (1 samples, 0.02%)</title><rect x="97.8500%" y="293" width="0.0152%" height="15" fill="rgb(206,91,31)" fg:x="6417" fg:w="1"/><text x="98.1000%" y="303.50"></text></g><g><title>libdyld.dylib`instantiateTLVs_thunk (1 samples, 0.02%)</title><rect x="97.8652%" y="293" width="0.0152%" height="15" fill="rgb(211,154,13)" fg:x="6418" fg:w="1"/><text x="98.1152%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.26%)</title><rect x="97.6365%" y="309" width="0.2592%" height="15" fill="rgb(225,148,7)" fg:x="6403" fg:w="17"/><text x="97.8865%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="97.8805%" y="293" width="0.0152%" height="15" fill="rgb(220,160,43)" fg:x="6419" fg:w="1"/><text x="98.1305%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="97.8957%" y="309" width="0.0305%" height="15" fill="rgb(213,52,39)" fg:x="6420" fg:w="2"/><text x="98.1457%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="97.8957%" y="293" width="0.0305%" height="15" fill="rgb(243,137,7)" fg:x="6420" fg:w="2"/><text x="98.1457%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.03%)</title><rect x="97.8957%" y="277" width="0.0305%" height="15" fill="rgb(230,79,13)" fg:x="6420" fg:w="2"/><text x="98.1457%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.03%)</title><rect x="97.8957%" y="261" width="0.0305%" height="15" fill="rgb(247,105,23)" fg:x="6420" fg:w="2"/><text x="98.1457%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="97.9262%" y="309" width="0.0152%" height="15" fill="rgb(223,179,41)" fg:x="6422" fg:w="1"/><text x="98.1762%" y="319.50"></text></g><g><title>run`core::ops::function::FnOnce::call_once{{vtable.shim}} (1,833 samples, 27.95%)</title><rect x="70.0061%" y="341" width="27.9506%" height="15" fill="rgb(218,9,34)" fg:x="4591" fg:w="1833"/><text x="70.2561%" y="351.50">run`core::ops::function::FnOnce::call_once{{v..</text></g><g><title>run`std::sys_common::thread_info::set (25 samples, 0.38%)</title><rect x="97.5755%" y="325" width="0.3812%" height="15" fill="rgb(222,106,8)" fg:x="6399" fg:w="25"/><text x="97.8255%" y="335.50"></text></g><g><title>run`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.02%)</title><rect x="97.9414%" y="309" width="0.0152%" height="15" fill="rgb(211,220,0)" fg:x="6423" fg:w="1"/><text x="98.1914%" y="319.50"></text></g><g><title>run`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="97.9414%" y="293" width="0.0152%" height="15" fill="rgb(229,52,16)" fg:x="6423" fg:w="1"/><text x="98.1914%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="97.9414%" y="277" width="0.0152%" height="15" fill="rgb(212,155,18)" fg:x="6423" fg:w="1"/><text x="98.1914%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="97.9414%" y="261" width="0.0152%" height="15" fill="rgb(242,21,14)" fg:x="6423" fg:w="1"/><text x="98.1914%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.02%)</title><rect x="97.9414%" y="245" width="0.0152%" height="15" fill="rgb(222,19,48)" fg:x="6423" fg:w="1"/><text x="98.1914%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.02%)</title><rect x="97.9414%" y="229" width="0.0152%" height="15" fill="rgb(232,45,27)" fg:x="6423" fg:w="1"/><text x="98.1914%" y="239.50"></text></g><g><title>run`std::io::stdio::set_output_capture (1 samples, 0.02%)</title><rect x="97.9567%" y="341" width="0.0152%" height="15" fill="rgb(249,103,42)" fg:x="6424" fg:w="1"/><text x="98.2067%" y="351.50"></text></g><g><title>libsystem_c.dylib`getpagesize (1 samples, 0.02%)</title><rect x="98.2312%" y="325" width="0.0152%" height="15" fill="rgb(246,81,33)" fg:x="6442" fg:w="1"/><text x="98.4812%" y="335.50"></text></g><g><title>libsystem_c.dylib`sysconf (1 samples, 0.02%)</title><rect x="98.2464%" y="325" width="0.0152%" height="15" fill="rgb(252,33,42)" fg:x="6443" fg:w="1"/><text x="98.4964%" y="335.50"></text></g><g><title>run`std::sys::unix::stack_overflow::imp::make_handler (131 samples, 2.00%)</title><rect x="97.9719%" y="341" width="1.9976%" height="15" fill="rgb(209,212,41)" fg:x="6425" fg:w="131"/><text x="98.2219%" y="351.50">r..</text></g><g><title>libsystem_kernel.dylib`__mmap (112 samples, 1.71%)</title><rect x="98.2617%" y="325" width="1.7078%" height="15" fill="rgb(207,154,6)" fg:x="6444" fg:w="112"/><text x="98.5117%" y="335.50"></text></g><g><title>run`std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.02%)</title><rect x="99.9695%" y="341" width="0.0152%" height="15" fill="rgb(223,64,47)" fg:x="6556" fg:w="1"/><text x="100.2195%" y="351.50"></text></g><g><title>all (6,558 samples, 100%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(211,161,38)" fg:x="0" fg:w="6558"/><text x="0.2500%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (5,776 samples, 88.08%)</title><rect x="11.9244%" y="389" width="88.0756%" height="15" fill="rgb(219,138,40)" fg:x="782" fg:w="5776"/><text x="12.1744%" y="399.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (5,567 samples, 84.89%)</title><rect x="15.1113%" y="373" width="84.8887%" height="15" fill="rgb(241,228,46)" fg:x="991" fg:w="5567"/><text x="15.3613%" y="383.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>run`std::sys::unix::thread::Thread::new::thread_start (2,111 samples, 32.19%)</title><rect x="67.8103%" y="357" width="32.1897%" height="15" fill="rgb(223,209,38)" fg:x="4447" fg:w="2111"/><text x="68.0603%" y="367.50">run`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>run`std::thread::Thread::cname (1 samples, 0.02%)</title><rect x="99.9848%" y="341" width="0.0152%" height="15" fill="rgb(236,164,45)" fg:x="6557" fg:w="1"/><text x="100.2348%" y="351.50"></text></g></svg></svg>